syntax = "proto3";

package v1;

import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";

import "v1/flow/status.proto";
import "v1/api/status.proto";

option go_package = "v1/api";

// Agent specification
message Agent {
    // UUID
    string uuid = 1;

    // Name
    string name = 2;

    // Optional description
    string description = 3;

    // Optional tags of this entity
    repeated string tags = 4;

    // Current live state
    int32 live_state = 5;

    // Namespace where the agent is deployed
    string namespace = 6;

    // Optional version api
    google.protobuf.Struct version_api = 7;

    // Agent version
    string version = 8;

    // Content of the agent config
    string content = 9;

    // Optional time when the entity was created
    google.protobuf.Timestamp created_at = 10;

    // Optional last time the entity was updated
    google.protobuf.Timestamp updated_at = 11;

    // Optional latest status of this entity
    Statuses status = 12;

    // The status conditions timeline
    repeated StatusCondition status_conditions = 13;

    // Agent is in replica mode
    bool is_replica = 14;

    // Agent is updatable and managed from the UI
    bool is_ui_managed = 15;

    // Agent hostname
    string hostname = 16;

    // Optional settings
    google.protobuf.Struct settings = 17;

    // Optional agent stats
    google.protobuf.Struct stats = 18;

    // Contributors
    repeated google.protobuf.Struct contributors = 19;
}

// Request data to create/update agents
message AgentBodyRequest {
    // Owner of the namespace
    string owner = 1;

    // Agent body
    Agent agent = 2;
}

// Request data to get agent resources
message AgentResourcesRequest {
  // namespace
  string namespace = 1;

  // Owner of the namespace
  string owner = 2;

  // Uuid identifier of the entity
  string uuid = 3;

  // Service
  string service = 4;

  // last_file
  string last_file = 5;

  // Force query param
  bool force = 6;

  // Connection to use
  string connection = 7;
}

// Request data to trigger cron
message CronBodyRequest {
    // Owner of the namespace
    string owner = 1;

    // Cron body
    google.protobuf.Struct body = 2;
}


// Contains list of agents
message ListAgentsResponse {
    // Count of the entities
    int32 count = 1;

    // List of all entities
    repeated Agent results = 2;

    // Previous page
    string previous = 3;

    // Next page
    string next = 4;
}


// Queue specification
message Queue {
    // UUID
    string uuid = 1;

    // Agent
    string agent = 2;

    // Name
    string name = 3;

    // Optional description
    string description = 4;

    // Optional tags of this entity
    repeated string tags = 5;

    // Optional time when the entity was created
    google.protobuf.Timestamp created_at = 6;

    // Optional last time the entity was updated
    google.protobuf.Timestamp updated_at = 7;

    // The queue priority
    int32 priority = 8;

    // The queue concurrency
    int32 concurrency = 9;

    // Optional queue resource
    string resource = 10;

    // Optional queue quota
    string quota = 11;

    // Optional queue stats
    google.protobuf.Struct stats = 12;

    // Optional contributors
    repeated google.protobuf.Struct contributors = 13;
}

 // Request data to create/update agents
 message QueueBodyRequest {
    // Owner of the namespace
    string owner = 1;

    // Agent that consumes the queue
    string agent = 2;

    // Queue body
    Queue queue = 3;
 }


// Contains list of agents
message ListQueuesResponse {
    // Count of the entities
    int32 count = 1;

    // List of all entities
    repeated Queue results = 2;

    // Previous page
    string previous = 3;

    // Next page
    string next = 4;
}

// Contains the agents (queues/runs) state
message AgentStateResponse {
    message AgentState {
        // List of schdules runs
        google.protobuf.Struct schedules = 1;

        // List of hooks runs
        google.protobuf.Struct hooks = 2;

        // List of watchdogs runs
        google.protobuf.Struct watchdogs = 3;

        // List of tuners runs
        google.protobuf.Struct tuners = 4;

        // List of queued runs
        google.protobuf.Struct queued = 5;

        // List of stopping runs
        google.protobuf.Struct stopping = 6;

        // List of deleting runs
        google.protobuf.Struct deleting = 7;

        // List of apply runs
        google.protobuf.Struct apply = 8;

        // List of run checks
        google.protobuf.Struct checks = 9;

        // A flag to tell the agent that the queues are still full
        bool full = 10;
    }

    Statuses status = 1;
    AgentState state = 2;
    int32 live_state = 3;
    google.protobuf.Struct compatible_updates = 4;
}
