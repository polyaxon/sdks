{
  "swagger": "2.0",
  "info": {
    "title": "Polyaxon SDKs and REST API specification.",
    "version": "2.8.1",
    "contact": {
      "name": "Polyaxon sdk",
      "url": "https://github.com/polyaxon/polyaxon",
      "email": "contact@polyaxon.com"
    },
    "description": "   "
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/archives/{user}/projects": {
      "get": {
        "summary": "List archived projects for user",
        "operationId": "ListArchivedProjects",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListProjectsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "user",
            "description": "User",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      }
    },
    "/api/v1/archives/{user}/runs": {
      "get": {
        "summary": "List archived runs for user",
        "operationId": "ListArchivedRuns",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListRunsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "user",
            "description": "User",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/auth/change-password": {
      "post": {
        "summary": "Change password",
        "operationId": "ChangePassword",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1PasswordChange"
            }
          }
        ],
        "tags": [
          "AuthV1"
        ]
      }
    },
    "/api/v1/auth/reset-password": {
      "post": {
        "summary": "Reset password",
        "operationId": "ResetPassword",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UserEmail"
            }
          }
        ],
        "tags": [
          "AuthV1"
        ]
      }
    },
    "/api/v1/auth/reset-password-confirm": {
      "post": {
        "summary": "Reset password confirm",
        "operationId": "ResetPasswordConfirm",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Auth"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1PasswordChange"
            }
          }
        ],
        "tags": [
          "AuthV1"
        ]
      }
    },
    "/api/v1/auth/signup": {
      "post": {
        "summary": "Signup",
        "operationId": "Signup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Auth"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UserSingup"
            }
          }
        ],
        "tags": [
          "AuthV1"
        ]
      }
    },
    "/api/v1/auth/token": {
      "post": {
        "summary": "Login",
        "operationId": "Login",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Auth"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Credentials"
            }
          }
        ],
        "tags": [
          "AuthV1"
        ]
      }
    },
    "/api/v1/auth/trial": {
      "post": {
        "summary": "Trial Start",
        "operationId": "Trial",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1TrialStart"
            }
          }
        ],
        "tags": [
          "AuthV1"
        ]
      }
    },
    "/api/v1/bookmarks/{user}/projects": {
      "get": {
        "summary": "List bookmarked projects for user",
        "operationId": "ListBookmarkedProjects",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListBookmarksResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "user",
            "description": "User",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      }
    },
    "/api/v1/bookmarks/{user}/runs": {
      "get": {
        "summary": "List bookmarked runs for user",
        "operationId": "ListBookmarkedRuns",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListBookmarksResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "user",
            "description": "User",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/compatibility/{uuid}/{version}/{service}": {
      "get": {
        "summary": "Get compatibility versions",
        "operationId": "GetCompatibility",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Compatibility"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "description": "UUid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "description": "Version",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "service",
            "description": "Service",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "VersionsV1"
        ]
      }
    },
    "/api/v1/installation": {
      "get": {
        "summary": "Get installation versions",
        "operationId": "GetInstallation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Installation"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "auth",
            "description": "auth.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "orgs",
            "description": "orgs.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "VersionsV1"
        ]
      }
    },
    "/api/v1/log_handler": {
      "get": {
        "summary": "Get log handler versions",
        "operationId": "GetLogHandler",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1LogHandler"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "VersionsV1"
        ]
      }
    },
    "/api/v1/orgs/create": {
      "post": {
        "summary": "Create organization",
        "operationId": "CreateOrganization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Organization"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Organization"
            }
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      }
    },
    "/api/v1/orgs/list": {
      "get": {
        "summary": "List organizations",
        "operationId": "ListOrganizations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListOrganizationsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "OrganizationsV1"
        ]
      }
    },
    "/api/v1/orgs/names": {
      "get": {
        "summary": "List organizations names",
        "operationId": "ListOrganizationNames",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListOrganizationsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "OrganizationsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}": {
      "get": {
        "summary": "Get organization",
        "operationId": "GetOrganization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Organization"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "usage",
            "description": "Owner usage query param.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      },
      "delete": {
        "summary": "Delete organization",
        "operationId": "DeleteOrganization",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "usage",
            "description": "Owner usage query param.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      },
      "put": {
        "summary": "Update organization",
        "operationId": "UpdateOrganization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Organization"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Organization body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Organization"
            }
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      },
      "patch": {
        "summary": "Patch organization",
        "operationId": "PatchOrganization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Organization"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Organization body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Organization"
            }
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/activities": {
      "get": {
        "summary": "Get organization activities",
        "operationId": "GetOrganizationActivities",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListActivitiesResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bookmarks",
            "description": "Filter by bookmarks.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "mode",
            "description": "Mode of the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/agents": {
      "get": {
        "summary": "List agents",
        "operationId": "ListAgents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAgentsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bookmarks",
            "description": "Filter by bookmarks.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "mode",
            "description": "Mode of the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "AgentsV1"
        ]
      },
      "post": {
        "summary": "Create agent",
        "operationId": "CreateAgent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Agent"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Agent body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Agent"
            }
          }
        ],
        "tags": [
          "AgentsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/agents/cron": {
      "post": {
        "summary": "Global Cron",
        "operationId": "CronAgent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AgentStateResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Cron body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "AgentsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/agents/names": {
      "get": {
        "summary": "List agents names",
        "operationId": "ListAgentNames",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAgentsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bookmarks",
            "description": "Filter by bookmarks.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "mode",
            "description": "Mode of the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "AgentsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/agents/state": {
      "get": {
        "summary": "Get Global State (queues/runs)",
        "operationId": "GetGlobalState",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AgentStateResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AgentsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/agents/{agent.uuid}": {
      "put": {
        "summary": "Update agent",
        "operationId": "UpdateAgent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Agent"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "agent.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Agent body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Agent"
            }
          }
        ],
        "tags": [
          "AgentsV1"
        ]
      },
      "patch": {
        "summary": "Patch agent",
        "operationId": "PatchAgent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Agent"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "agent.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Agent body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Agent"
            }
          }
        ],
        "tags": [
          "AgentsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/agents/{agent.uuid}/config": {
      "patch": {
        "summary": "Update agent config",
        "operationId": "UpdateAgentConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Agent"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "agent.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Agent body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Agent"
            }
          }
        ],
        "tags": [
          "AgentsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/agents/{agent.uuid}/sync": {
      "patch": {
        "summary": "Sync agent",
        "operationId": "SyncAgent",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "agent.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Agent body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Agent"
            }
          }
        ],
        "tags": [
          "AgentsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/agents/{agent}/queues": {
      "post": {
        "summary": "Create queue",
        "operationId": "CreateQueue",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Queue"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "agent",
            "description": "Agent that consumes the queue",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Queue body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Queue"
            }
          }
        ],
        "tags": [
          "QueuesV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/agents/{agent}/queues/{queue.uuid}": {
      "put": {
        "summary": "Update queue",
        "operationId": "UpdateQueue",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Queue"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "agent",
            "description": "Agent that consumes the queue",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "queue.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Queue body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Queue"
            }
          }
        ],
        "tags": [
          "QueuesV1"
        ]
      },
      "patch": {
        "summary": "Patch queue",
        "operationId": "PatchQueue",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Queue"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "agent",
            "description": "Agent that consumes the queue",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "queue.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Queue body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Queue"
            }
          }
        ],
        "tags": [
          "QueuesV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/agents/{entity}/queues/{uuid}": {
      "get": {
        "summary": "Get queue",
        "operationId": "GetQueue",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Queue"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity: project name, hub name, registry name, ...",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the sub-entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "QueuesV1"
        ]
      },
      "delete": {
        "summary": "Delete queue",
        "operationId": "DeleteQueue",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity: project name, hub name, registry name, ...",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the sub-entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "QueuesV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/agents/{entity}/token": {
      "put": {
        "summary": "Update agent token",
        "operationId": "UpdateAgentToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Token"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Token body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Token"
            }
          }
        ],
        "tags": [
          "AgentsV1"
        ]
      },
      "patch": {
        "summary": "Patch agent token",
        "operationId": "PatchAgentToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Token"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Token body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Token"
            }
          }
        ],
        "tags": [
          "AgentsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/agents/{name}/queues": {
      "get": {
        "summary": "List queues",
        "operationId": "ListQueues",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListQueuesResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Entity managing the resource",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bookmarks",
            "description": "Filter by bookmarks.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "mode",
            "description": "Mode of the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "QueuesV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/agents/{name}/queues/names": {
      "get": {
        "summary": "List queues names",
        "operationId": "ListQueueNames",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListQueuesResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Entity managing the resource",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bookmarks",
            "description": "Filter by bookmarks.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "mode",
            "description": "Mode of the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "QueuesV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/agents/{uuid}": {
      "get": {
        "summary": "Get agent",
        "operationId": "GetAgent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Agent"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the sub-entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity: project name, hub name, registry name, ...",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AgentsV1"
        ]
      },
      "delete": {
        "summary": "Delete agent",
        "operationId": "DeleteAgent",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the sub-entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity: project name, hub name, registry name, ...",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AgentsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/agents/{uuid}/config": {
      "get": {
        "summary": "Get agent config",
        "operationId": "GetAgentConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Agent"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the sub-entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity: project name, hub name, registry name, ...",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AgentsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/agents/{uuid}/reconcile": {
      "patch": {
        "summary": "Reconcile agent",
        "operationId": "ReconcileAgent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AgentReconcileBodyRequest"
            }
          }
        ],
        "tags": [
          "AgentsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/agents/{uuid}/state": {
      "get": {
        "summary": "Get State (queues/runs)",
        "operationId": "GetAgentState",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AgentStateResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AgentsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/agents/{uuid}/stats": {
      "get": {
        "summary": "Get agent stats",
        "operationId": "GetAgentStats",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Agent"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the sub-entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity: project name, hub name, registry name, ...",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AgentsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/agents/{uuid}/statuses": {
      "get": {
        "summary": "Get Agent statuses",
        "operationId": "GetAgentStatuses",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Status"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the sub-entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity: project name, hub name, registry name, ...",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AgentsV1"
        ]
      },
      "post": {
        "summary": "Create new agent status",
        "operationId": "CreateAgentStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Status"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AgentStatusBodyRequest"
            }
          }
        ],
        "tags": [
          "AgentsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/agents/{uuid}/token": {
      "get": {
        "summary": "Get agent token",
        "operationId": "GetAgentToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Token"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AgentsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/connections": {
      "get": {
        "summary": "List connections",
        "operationId": "ListConnections",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListConnectionsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bookmarks",
            "description": "Filter by bookmarks.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "mode",
            "description": "Mode of the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ConnectionsV1"
        ]
      },
      "post": {
        "summary": "Create connection",
        "operationId": "CreateConnection",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ConnectionResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Connection body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ConnectionResponse"
            }
          }
        ],
        "tags": [
          "ConnectionsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/connections/names": {
      "get": {
        "summary": "List connections names",
        "operationId": "ListConnectionNames",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListConnectionsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bookmarks",
            "description": "Filter by bookmarks.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "mode",
            "description": "Mode of the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ConnectionsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/connections/{connection.uuid}": {
      "put": {
        "summary": "Update connection",
        "operationId": "UpdateConnection",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ConnectionResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "connection.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Connection body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ConnectionResponse"
            }
          }
        ],
        "tags": [
          "ConnectionsV1"
        ]
      },
      "patch": {
        "summary": "Patch connection",
        "operationId": "PatchConnection",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ConnectionResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "connection.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Connection body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ConnectionResponse"
            }
          }
        ],
        "tags": [
          "ConnectionsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/connections/{uuid}": {
      "get": {
        "summary": "Get connection",
        "operationId": "GetConnection",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ConnectionResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ConnectionsV1"
        ]
      },
      "delete": {
        "summary": "Delete connection",
        "operationId": "DeleteConnection",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ConnectionsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/dashboards": {
      "get": {
        "summary": "List dashboards",
        "operationId": "ListDashboards",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListDashboardsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bookmarks",
            "description": "Filter by bookmarks.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "mode",
            "description": "Mode of the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "DashboardsV1"
        ]
      },
      "post": {
        "summary": "Create dashboard",
        "operationId": "CreateDashboard",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Dashboard"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Dashboard body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Dashboard"
            }
          }
        ],
        "tags": [
          "DashboardsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/dashboards/names": {
      "get": {
        "summary": "List dashboard names",
        "operationId": "ListDashboardNames",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListDashboardsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bookmarks",
            "description": "Filter by bookmarks.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "mode",
            "description": "Mode of the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "DashboardsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/dashboards/{dashboard.uuid}": {
      "put": {
        "summary": "Update dashboard",
        "operationId": "UpdateDashboard",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Dashboard"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "dashboard.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Dashboard body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Dashboard"
            }
          }
        ],
        "tags": [
          "DashboardsV1"
        ]
      },
      "patch": {
        "summary": "Patch dashboard",
        "operationId": "PatchDashboard",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Dashboard"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "dashboard.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Dashboard body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Dashboard"
            }
          }
        ],
        "tags": [
          "DashboardsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/dashboards/{uuid}": {
      "get": {
        "summary": "Get dashboard",
        "operationId": "GetDashboard",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Dashboard"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "DashboardsV1"
        ]
      },
      "delete": {
        "summary": "Delete dashboard",
        "operationId": "DeleteDashboard",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "DashboardsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/invitations": {
      "get": {
        "summary": "Get organization invitation details",
        "operationId": "GetOrganizationInvitation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1OrganizationMember"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "member.user",
            "description": "User.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "member.user_email",
            "description": "Read-only User email.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "member.role",
            "description": "Role.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "member.kind",
            "description": "Kind.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "member.created_at",
            "description": "Optional time when the entity was created.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "member.updated_at",
            "description": "Optional last time the entity was updated.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "email",
            "description": "Optional email.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      },
      "delete": {
        "summary": "Delete organization invitation details",
        "operationId": "DeleteOrganizationInvitation",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "member.user",
            "description": "User.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "member.user_email",
            "description": "Read-only User email.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "member.role",
            "description": "Role.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "member.kind",
            "description": "Kind.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "member.created_at",
            "description": "Optional time when the entity was created.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "member.updated_at",
            "description": "Optional last time the entity was updated.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "email",
            "description": "Optional email.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      },
      "post": {
        "summary": "Resend organization invitation",
        "operationId": "ResendOrganizationInvitation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1OrganizationMember"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Organization body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1OrganizationMember"
            }
          },
          {
            "name": "email",
            "description": "Optional email.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      },
      "put": {
        "summary": "Update organization invitation",
        "operationId": "UpdateOrganizationInvitation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1OrganizationMember"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Organization body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1OrganizationMember"
            }
          },
          {
            "name": "email",
            "description": "Optional email.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      },
      "patch": {
        "summary": "Patch organization invitation",
        "operationId": "PatchOrganizationInvitation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1OrganizationMember"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Organization body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1OrganizationMember"
            }
          },
          {
            "name": "email",
            "description": "Optional email.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/license": {
      "post": {
        "summary": "Organization license",
        "operationId": "OrganizationLicense",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Organization"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Organization body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Organization"
            }
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/members": {
      "get": {
        "summary": "Get organization members",
        "operationId": "ListOrganizationMembers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListOrganizationMembersResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bookmarks",
            "description": "Filter by bookmarks.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "mode",
            "description": "Mode of the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      },
      "post": {
        "summary": "Create organization member",
        "operationId": "CreateOrganizationMember",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1OrganizationMember"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Organization body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1OrganizationMember"
            }
          },
          {
            "name": "email",
            "description": "Optional email.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/members/names": {
      "get": {
        "summary": "Get organization member names",
        "operationId": "ListOrganizationMemberNames",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListOrganizationMembersResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bookmarks",
            "description": "Filter by bookmarks.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "mode",
            "description": "Mode of the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/members/{member.user}": {
      "put": {
        "summary": "Update organization member",
        "operationId": "UpdateOrganizationMember",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1OrganizationMember"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "member.user",
            "description": "User",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Organization body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1OrganizationMember"
            }
          },
          {
            "name": "email",
            "description": "Optional email.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      },
      "patch": {
        "summary": "Patch organization member",
        "operationId": "PatchOrganizationMember",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1OrganizationMember"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "member.user",
            "description": "User",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Organization body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1OrganizationMember"
            }
          },
          {
            "name": "email",
            "description": "Optional email.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/members/{name}": {
      "get": {
        "summary": "Get organization member details",
        "operationId": "GetOrganizationMember",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1OrganizationMember"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Component under namespace",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      },
      "delete": {
        "summary": "Delete organization member details",
        "operationId": "DeleteOrganizationMember",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Component under namespace",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/plan": {
      "post": {
        "summary": "Organization plan",
        "operationId": "OrganizationPlan",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Organization"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Organization body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Organization"
            }
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/policies": {
      "get": {
        "summary": "List Policies",
        "operationId": "ListPolicies",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListPoliciesResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bookmarks",
            "description": "Filter by bookmarks.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "mode",
            "description": "Mode of the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "PoliciesV1"
        ]
      },
      "post": {
        "summary": "Create Policy",
        "operationId": "CreatePolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Policy"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Policy body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Policy"
            }
          }
        ],
        "tags": [
          "PoliciesV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/policies/names": {
      "get": {
        "summary": "List scheduling policies names",
        "operationId": "ListPolicyNames",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListPoliciesResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bookmarks",
            "description": "Filter by bookmarks.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "mode",
            "description": "Mode of the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "PoliciesV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/policies/{policy.uuid}": {
      "put": {
        "summary": "Update Policy",
        "operationId": "UpdatePolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Policy"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "policy.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Policy body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Policy"
            }
          }
        ],
        "tags": [
          "PoliciesV1"
        ]
      },
      "patch": {
        "summary": "Patch Policy",
        "operationId": "PatchPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Policy"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "policy.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Policy body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Policy"
            }
          }
        ],
        "tags": [
          "PoliciesV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/policies/{uuid}": {
      "get": {
        "summary": "Get Policy",
        "operationId": "GetPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Policy"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the sub-entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity: project name, hub name, registry name, ...",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PoliciesV1"
        ]
      },
      "delete": {
        "summary": "Delete scheduling preset",
        "operationId": "DeletePolicy",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the sub-entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity: project name, hub name, registry name, ...",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PoliciesV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/presets": {
      "get": {
        "summary": "List scheduling presets",
        "operationId": "ListPresets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListPresetsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bookmarks",
            "description": "Filter by bookmarks.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "mode",
            "description": "Mode of the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "PresetsV1"
        ]
      },
      "post": {
        "summary": "Create scheduling presets",
        "operationId": "CreatePreset",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Preset"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Preset body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Preset"
            }
          }
        ],
        "tags": [
          "PresetsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/presets/names": {
      "get": {
        "summary": "List scheduling presets names",
        "operationId": "ListPresetNames",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListPresetsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bookmarks",
            "description": "Filter by bookmarks.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "mode",
            "description": "Mode of the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "PresetsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/presets/{preset.uuid}": {
      "put": {
        "summary": "Update scheduling preset",
        "operationId": "UpdatePreset",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Preset"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "preset.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Preset body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Preset"
            }
          }
        ],
        "tags": [
          "PresetsV1"
        ]
      },
      "patch": {
        "summary": "Patch scheduling preset",
        "operationId": "PatchPreset",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Preset"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "preset.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Preset body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Preset"
            }
          }
        ],
        "tags": [
          "PresetsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/presets/{uuid}": {
      "get": {
        "summary": "Get scheduling preset",
        "operationId": "GetPreset",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Preset"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the sub-entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity: project name, hub name, registry name, ...",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PresetsV1"
        ]
      },
      "delete": {
        "summary": "Delete scheduling preset",
        "operationId": "DeletePreset",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the sub-entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity: project name, hub name, registry name, ...",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PresetsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/queues": {
      "get": {
        "summary": "List organization level queues",
        "operationId": "ListOrganizationQueues",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListQueuesResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bookmarks",
            "description": "Filter by bookmarks.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "mode",
            "description": "Mode of the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "QueuesV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/queues/names": {
      "get": {
        "summary": "List organization level queues names",
        "operationId": "ListOrganizationQueueNames",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListQueuesResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bookmarks",
            "description": "Filter by bookmarks.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "mode",
            "description": "Mode of the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "QueuesV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/runs": {
      "get": {
        "summary": "Get all runs in an organization",
        "operationId": "GetOrganizationRuns",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListRunsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bookmarks",
            "description": "Filter by bookmarks.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "mode",
            "description": "Mode of the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/runs/Skip": {
      "post": {
        "summary": "Skip cross-project runs selection",
        "operationId": "SkipOrganizationRuns",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Uuids of the entities",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Uuids"
            }
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/runs/approve": {
      "post": {
        "summary": "Approve cross-project runs selection",
        "operationId": "ApproveOrganizationRuns",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Uuids of the entities",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Uuids"
            }
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/runs/archive": {
      "post": {
        "summary": "Archive cross-project runs selection",
        "operationId": "ArchiveOrganizationRuns",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Uuids of the entities",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Uuids"
            }
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/runs/bookmark": {
      "post": {
        "summary": "Bookmark cross-project runs selection",
        "operationId": "BookmarkOrganizationRuns",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Uuids of the entities",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Uuids"
            }
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/runs/delete": {
      "delete": {
        "summary": "Delete cross-project runs selection",
        "operationId": "DeleteOrganizationRuns",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Uuids of the entities",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Uuids"
            }
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/runs/invalidate": {
      "post": {
        "summary": "Invalidate cross-project runs selection",
        "operationId": "InvalidateOrganizationRuns",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Uuids of the entities",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Uuids"
            }
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/runs/lineage/artifacts": {
      "get": {
        "summary": "Get runs artifacts lineage",
        "operationId": "GetOrganizationRunsArtifactsLineage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListRunArtifactsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Entity managing the resource.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bookmarks",
            "description": "Filter by bookmarks.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "mode",
            "description": "Mode of the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/runs/restore": {
      "post": {
        "summary": "Restore cross-project runs selection",
        "operationId": "RestoreOrganizationRuns",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Uuids of the entities",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Uuids"
            }
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/runs/stop": {
      "post": {
        "summary": "Stop cross-project runs selection",
        "operationId": "StopOrganizationRuns",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Uuids of the entities",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Uuids"
            }
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/runs/tag": {
      "post": {
        "summary": "Tag cross-project runs selection",
        "operationId": "TagOrganizationRuns",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1EntitiesTags"
            }
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/runs/transfer": {
      "post": {
        "summary": "Transfer cross-project runs selection to a new project",
        "operationId": "TransferOrganizationRuns",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1EntitiesTransfer"
            }
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/runs/{uuid}": {
      "get": {
        "summary": "Get a run in an organization",
        "operationId": "GetOrganizationRun",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Run"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/sa": {
      "get": {
        "summary": "List service accounts",
        "operationId": "ListServiceAccounts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListServiceAccountsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bookmarks",
            "description": "Filter by bookmarks.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "mode",
            "description": "Mode of the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ServiceAccountsV1"
        ]
      },
      "post": {
        "summary": "Create service account",
        "operationId": "CreateServiceAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ServiceAccount"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "ServiceAccount body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ServiceAccount"
            }
          }
        ],
        "tags": [
          "ServiceAccountsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/sa/names": {
      "get": {
        "summary": "List service accounts names",
        "operationId": "ListServiceAccountNames",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListServiceAccountsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bookmarks",
            "description": "Filter by bookmarks.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "mode",
            "description": "Mode of the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ServiceAccountsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/sa/{entity}/tokens": {
      "post": {
        "summary": "Create service account token",
        "operationId": "CreateServiceAccountToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Token"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Token body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Token"
            }
          }
        ],
        "tags": [
          "ServiceAccountsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/sa/{entity}/tokens/{token.uuid}": {
      "put": {
        "summary": "Update service account token",
        "operationId": "UpdateServiceAccountToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Token"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "token.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Token body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Token"
            }
          }
        ],
        "tags": [
          "ServiceAccountsV1"
        ]
      },
      "patch": {
        "summary": "Patch service account token",
        "operationId": "PatchServiceAccountToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Token"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "token.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Token body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Token"
            }
          }
        ],
        "tags": [
          "ServiceAccountsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/sa/{entity}/tokens/{uuid}": {
      "get": {
        "summary": "Get service account token",
        "operationId": "GetServiceAccountToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Token"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity: project name, hub name, registry name, ...",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the sub-entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ServiceAccountsV1"
        ]
      },
      "delete": {
        "summary": "Delete service account token",
        "operationId": "DeleteServiceAccountToken",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity: project name, hub name, registry name, ...",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the sub-entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ServiceAccountsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/sa/{sa.uuid}": {
      "put": {
        "summary": "Update service account",
        "operationId": "UpdateServiceAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ServiceAccount"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "sa.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "ServiceAccount body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ServiceAccount"
            }
          }
        ],
        "tags": [
          "ServiceAccountsV1"
        ]
      },
      "patch": {
        "summary": "Patch service account",
        "operationId": "PatchServiceAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ServiceAccount"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "sa.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "ServiceAccount body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ServiceAccount"
            }
          }
        ],
        "tags": [
          "ServiceAccountsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/sa/{uuid}": {
      "get": {
        "summary": "Get service account",
        "operationId": "GetServiceAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ServiceAccount"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ServiceAccountsV1"
        ]
      },
      "delete": {
        "summary": "Delete service account",
        "operationId": "DeleteServiceAccount",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ServiceAccountsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/sa/{uuid}/tokens": {
      "get": {
        "summary": "List service account tokens",
        "operationId": "ListServiceAccountTokens",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListTokenResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "SubEntity uuid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity name under namespace.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ServiceAccountsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/searches": {
      "get": {
        "summary": "List searches",
        "operationId": "ListSearches",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListSearchesResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bookmarks",
            "description": "Filter by bookmarks.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "mode",
            "description": "Mode of the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "SearchesV1"
        ]
      },
      "post": {
        "summary": "Create search",
        "operationId": "CreateSearch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Search"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Search body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Search"
            }
          }
        ],
        "tags": [
          "SearchesV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/searches/names": {
      "get": {
        "summary": "List search names",
        "operationId": "ListSearchNames",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListSearchesResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bookmarks",
            "description": "Filter by bookmarks.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "mode",
            "description": "Mode of the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "SearchesV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/searches/{search.uuid}": {
      "put": {
        "summary": "Update search",
        "operationId": "UpdateSearch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Search"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "search.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Search body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Search"
            }
          }
        ],
        "tags": [
          "SearchesV1"
        ]
      },
      "patch": {
        "summary": "Patch search",
        "operationId": "PatchSearch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Search"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "search.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Search body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Search"
            }
          }
        ],
        "tags": [
          "SearchesV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/searches/{uuid}": {
      "get": {
        "summary": "Get search",
        "operationId": "GetSearch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Search"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SearchesV1"
        ]
      },
      "delete": {
        "summary": "Delete search",
        "operationId": "DeleteSearch",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SearchesV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/settings": {
      "get": {
        "summary": "Get organization settings",
        "operationId": "GetOrganizationSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Organization"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "organization.user",
            "description": "User.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "organization.user_email",
            "description": "Read-only User email.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "organization.name",
            "description": "Name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "organization.is_public",
            "description": "Optional flag to tell if this organization is public.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "organization.created_at",
            "description": "Optional time when the entity was created.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "organization.updated_at",
            "description": "Optional last time the entity was updated.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "organization.support_revoke_at",
            "description": "Optional time to revoke support access.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "organization.expiration",
            "description": "Optional expiration for support.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "organization.role",
            "description": "Current user's role in this org.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "organization.queue",
            "description": "Default queue.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "organization.default_presets",
            "description": "Default presets.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "organization.default_presets_ordered",
            "description": "Default presets ordered.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "organization.is_cloud_viewable",
            "description": "Setting to enable viewable metadata on cloud.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "organization.archived_deletion_interval",
            "description": "Setting to configure default archived deletion interval.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      },
      "put": {
        "summary": "Update organization settings",
        "operationId": "UpdateOrganizationSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Organization"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Organization body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Organization"
            }
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      },
      "patch": {
        "summary": "Patch oranization settings",
        "operationId": "PatchOrganizationSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Organization"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Organization body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Organization"
            }
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/stats": {
      "get": {
        "summary": "Get organization stats",
        "operationId": "GetOrganizationStats",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bookmarks",
            "description": "Filter by bookmarks.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "mode",
            "description": "Stats Mode.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "kind",
            "description": "Stats Kind.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "aggregate",
            "description": "Stats aggregate.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "groupby",
            "description": "Stats group.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "trunc",
            "description": "Stats trunc.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/tags": {
      "get": {
        "summary": "List tags",
        "operationId": "ListTags",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListTagsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bookmarks",
            "description": "Filter by bookmarks.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "mode",
            "description": "Mode of the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "TagsV1"
        ]
      },
      "post": {
        "summary": "Create tag",
        "operationId": "CreateTag",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Tag"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Tag body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Tag"
            }
          }
        ],
        "tags": [
          "TagsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/tags/load": {
      "get": {
        "summary": "Load tags",
        "operationId": "LoadTags",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bookmarks",
            "description": "Filter by bookmarks.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "mode",
            "description": "Mode of the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "TagsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/tags/sync": {
      "post": {
        "summary": "Sync tags",
        "operationId": "SyncTags",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1EntitiesTags"
            }
          }
        ],
        "tags": [
          "TagsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/tags/{tag.uuid}": {
      "put": {
        "summary": "Update tag",
        "operationId": "UpdateTag",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Tag"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tag.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Tag body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Tag"
            }
          }
        ],
        "tags": [
          "TagsV1"
        ]
      },
      "patch": {
        "summary": "Patch tag",
        "operationId": "PatchTag",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Tag"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tag.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Tag body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Tag"
            }
          }
        ],
        "tags": [
          "TagsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/tags/{uuid}": {
      "get": {
        "summary": "Get tag",
        "operationId": "GetTag",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Tag"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TagsV1"
        ]
      },
      "delete": {
        "summary": "Delete tag",
        "operationId": "DeleteTag",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cascade",
            "description": "Flag to handle sub-entities.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "TagsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/teams": {
      "get": {
        "summary": "List teams",
        "operationId": "ListTeams",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListTeamsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bookmarks",
            "description": "Filter by bookmarks.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "mode",
            "description": "Mode of the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "TeamsV1"
        ]
      },
      "post": {
        "summary": "Create team",
        "operationId": "CreateTeam",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Team"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Team body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Team"
            }
          }
        ],
        "tags": [
          "TeamsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/teams/names": {
      "get": {
        "summary": "List teams names",
        "operationId": "ListTeamNames",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListTeamsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bookmarks",
            "description": "Filter by bookmarks.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "mode",
            "description": "Mode of the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "TeamsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/teams/{entity}/runs/{uuid}": {
      "get": {
        "summary": "Get a run in a team",
        "operationId": "GetTeamRun",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Run"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity: project name, hub name, registry name, ...",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the sub-entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TeamsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/teams/{entity}/versions/{kind}": {
      "get": {
        "summary": "Get all runs in a team",
        "operationId": "GetTeamVersions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListProjectVersionsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity name under namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "kind",
            "description": "Version Kind",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "TeamsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/teams/{name}": {
      "get": {
        "summary": "Get team",
        "operationId": "GetTeam",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Team"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Component under namespace",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TeamsV1"
        ]
      },
      "delete": {
        "summary": "Delete team",
        "operationId": "DeleteTeam",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Component under namespace",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TeamsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/teams/{name}/activities": {
      "get": {
        "summary": "Get organization activities",
        "operationId": "GetTeamActivities",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListActivitiesResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Entity managing the resource",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bookmarks",
            "description": "Filter by bookmarks.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "mode",
            "description": "Mode of the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "TeamsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/teams/{name}/members": {
      "get": {
        "summary": "Get team members",
        "operationId": "ListTeamMembers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListTeamMembersResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Entity managing the resource",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bookmarks",
            "description": "Filter by bookmarks.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "mode",
            "description": "Mode of the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "TeamsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/teams/{name}/runs": {
      "get": {
        "summary": "Get all runs in a team",
        "operationId": "GetTeamRuns",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListRunsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Entity managing the resource",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bookmarks",
            "description": "Filter by bookmarks.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "mode",
            "description": "Mode of the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "TeamsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/teams/{name}/runs/Skip": {
      "post": {
        "summary": "Skip cross-project runs selection",
        "operationId": "SkipTeamRuns",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Entity under namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Uuids of the entities",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Uuids"
            }
          }
        ],
        "tags": [
          "TeamsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/teams/{name}/runs/approve": {
      "post": {
        "summary": "Approve cross-project runs selection",
        "operationId": "ApproveTeamRuns",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Entity under namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Uuids of the entities",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Uuids"
            }
          }
        ],
        "tags": [
          "TeamsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/teams/{name}/runs/archive": {
      "post": {
        "summary": "Archive cross-project runs selection",
        "operationId": "ArchiveTeamRuns",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Entity under namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Uuids of the entities",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Uuids"
            }
          }
        ],
        "tags": [
          "TeamsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/teams/{name}/runs/bookmark": {
      "post": {
        "summary": "Bookmark cross-project runs selection",
        "operationId": "BookmarkTeamRuns",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Entity under namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Uuids of the entities",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Uuids"
            }
          }
        ],
        "tags": [
          "TeamsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/teams/{name}/runs/delete": {
      "delete": {
        "summary": "Delete cross-project runs selection",
        "operationId": "DeleteTeamRuns",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Entity under namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Uuids of the entities",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Uuids"
            }
          }
        ],
        "tags": [
          "TeamsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/teams/{name}/runs/invalidate": {
      "post": {
        "summary": "Invalidate cross-project runs selection",
        "operationId": "InvalidateTeamRuns",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Entity under namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Uuids of the entities",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Uuids"
            }
          }
        ],
        "tags": [
          "TeamsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/teams/{name}/runs/lineage/artifacts": {
      "get": {
        "summary": "Get runs artifacts lineage",
        "operationId": "GetTeamRunsArtifactsLineage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListRunArtifactsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Entity managing the resource",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bookmarks",
            "description": "Filter by bookmarks.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "mode",
            "description": "Mode of the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "TeamsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/teams/{name}/runs/restore": {
      "post": {
        "summary": "Restore cross-project runs selection",
        "operationId": "RestoreTeamRuns",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Entity under namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Uuids of the entities",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Uuids"
            }
          }
        ],
        "tags": [
          "TeamsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/teams/{name}/runs/stop": {
      "post": {
        "summary": "Stop cross-project runs selection",
        "operationId": "StopTeamRuns",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Entity under namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Uuids of the entities",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Uuids"
            }
          }
        ],
        "tags": [
          "TeamsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/teams/{name}/runs/tag": {
      "post": {
        "summary": "Tag cross-project runs selection",
        "operationId": "TagTeamRuns",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Entity under namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1EntitiesTags"
            }
          }
        ],
        "tags": [
          "TeamsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/teams/{name}/runs/transfer": {
      "post": {
        "summary": "Transfer cross-project runs selection to a new project",
        "operationId": "TransferTeamRuns",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Entity under namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1EntitiesTransfer"
            }
          }
        ],
        "tags": [
          "TeamsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/teams/{name}/stats": {
      "get": {
        "summary": "Get team stats",
        "operationId": "GetTeamStats",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Entity managing the resource",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bookmarks",
            "description": "Filter by bookmarks.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "mode",
            "description": "Stats Mode.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "kind",
            "description": "Stats Kind.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "aggregate",
            "description": "Stats aggregate.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "groupby",
            "description": "Stats group.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "trunc",
            "description": "Stats trunc.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "TeamsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/teams/{team.name}": {
      "put": {
        "summary": "Update team",
        "operationId": "UpdateTeam",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Team"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "team.name",
            "description": "Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Team body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Team"
            }
          }
        ],
        "tags": [
          "TeamsV1"
        ]
      },
      "patch": {
        "summary": "Patch team",
        "operationId": "PatchTeam",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Team"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "team.name",
            "description": "Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Team body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Team"
            }
          }
        ],
        "tags": [
          "TeamsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/teams/{team}/members": {
      "post": {
        "summary": "Create team member",
        "operationId": "CreateTeamMember",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1TeamMember"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "team",
            "description": "Team",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Team body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1TeamMember"
            }
          }
        ],
        "tags": [
          "TeamsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/teams/{team}/members/{member.user}": {
      "put": {
        "summary": "Update team member",
        "operationId": "UpdateTeamMember",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1TeamMember"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "team",
            "description": "Team",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "member.user",
            "description": "User",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Team body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1TeamMember"
            }
          }
        ],
        "tags": [
          "TeamsV1"
        ]
      },
      "patch": {
        "summary": "Patch team member",
        "operationId": "PatchTeamMember",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1TeamMember"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "team",
            "description": "Team",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "member.user",
            "description": "User",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Team body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1TeamMember"
            }
          }
        ],
        "tags": [
          "TeamsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/teams/{team}/members/{user}": {
      "get": {
        "summary": "Get team member details",
        "operationId": "GetTeamMember",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1TeamMember"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "team",
            "description": "Team under namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "user",
            "description": "Member under team",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TeamsV1"
        ]
      },
      "delete": {
        "summary": "Delete team member details",
        "operationId": "DeleteTeamMember",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "team",
            "description": "Team under namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "user",
            "description": "Member under team",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TeamsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/versions/{kind}": {
      "get": {
        "summary": "Get all runs in an organization",
        "operationId": "GetOrganizationVersions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListProjectVersionsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "kind",
            "description": "Version Kind",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      }
    },
    "/api/v1/users": {
      "get": {
        "summary": "Get current user",
        "operationId": "GetUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "UsersV1"
        ]
      },
      "put": {
        "summary": "Update current user",
        "operationId": "UpdateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          }
        ],
        "tags": [
          "UsersV1"
        ]
      },
      "patch": {
        "summary": "Patch current user",
        "operationId": "PatchUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          }
        ],
        "tags": [
          "UsersV1"
        ]
      }
    },
    "/api/v1/users/history": {
      "get": {
        "summary": "User History",
        "operationId": "GetHistory",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListActivitiesResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "UsersV1"
        ]
      }
    },
    "/api/v1/users/suggestions": {
      "get": {
        "summary": "User suggestions",
        "operationId": "GetSuggestions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "UsersV1"
        ]
      }
    },
    "/api/v1/users/tokens": {
      "get": {
        "summary": "List tokens",
        "operationId": "ListTokens",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListTokenResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "UsersV1"
        ]
      },
      "post": {
        "summary": "Create token",
        "operationId": "CreateToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Token"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Token body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Token"
            }
          }
        ],
        "tags": [
          "UsersV1"
        ]
      }
    },
    "/api/v1/users/tokens/{token.uuid}": {
      "put": {
        "summary": "Update token",
        "operationId": "UpdateToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Token"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "token.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Token body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Token"
            }
          }
        ],
        "tags": [
          "UsersV1"
        ]
      },
      "patch": {
        "summary": "Patch token",
        "operationId": "PatchToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Token"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "token.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Token body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Token"
            }
          }
        ],
        "tags": [
          "UsersV1"
        ]
      }
    },
    "/api/v1/users/tokens/{uuid}": {
      "get": {
        "summary": "Get token",
        "operationId": "GetToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Token"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "description": "UUid of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UsersV1"
        ]
      },
      "delete": {
        "summary": "Delete token",
        "operationId": "DeleteToken",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "description": "UUid of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UsersV1"
        ]
      }
    },
    "/api/v1/users/workspaces": {
      "get": {
        "summary": "User workspaces",
        "operationId": "GetWorkspaces",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "UsersV1"
        ]
      }
    },
    "/api/v1/{owner}/projects/create": {
      "post": {
        "summary": "Create new project",
        "operationId": "CreateProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Project"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Project body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Project"
            }
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      }
    },
    "/api/v1/{owner}/projects/list": {
      "get": {
        "summary": "List projects",
        "operationId": "ListProjects",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListProjectsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bookmarks",
            "description": "Filter by bookmarks.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "mode",
            "description": "Mode of the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      }
    },
    "/api/v1/{owner}/projects/names": {
      "get": {
        "summary": "List project names",
        "operationId": "ListProjectNames",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListProjectsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bookmarks",
            "description": "Filter by bookmarks.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "mode",
            "description": "Mode of the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      }
    },
    "/api/v1/{owner}/{entity}/dashboards/{uuid}": {
      "get": {
        "summary": "Get project dashboard",
        "operationId": "GetProjectDashboard",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Dashboard"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity: project name, hub name, registry name, ...",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the sub-entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectDashboardsV1"
        ]
      },
      "delete": {
        "summary": "Delete project dashboard",
        "operationId": "DeleteProjectDashboard",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity: project name, hub name, registry name, ...",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the sub-entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectDashboardsV1"
        ]
      }
    },
    "/api/v1/{owner}/{entity}/dashboards/{uuid}/promote": {
      "post": {
        "summary": "Promote project dashboard",
        "operationId": "PromoteProjectDashboard",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity: project name, hub name, registry name, ...",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the sub-entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectDashboardsV1"
        ]
      }
    },
    "/api/v1/{owner}/{entity}/runs/{uuid}": {
      "get": {
        "summary": "Get run",
        "operationId": "GetRun",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Run"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity: project name, hub name, registry name, ...",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the sub-entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      },
      "delete": {
        "summary": "Delete run",
        "operationId": "DeleteRun",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity: project name, hub name, registry name, ...",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the sub-entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{entity}/runs/{uuid}/approve": {
      "post": {
        "summary": "Approve run",
        "operationId": "ApproveRun",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity: project name, hub name, registry name, ...",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the sub-entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{entity}/runs/{uuid}/archive": {
      "post": {
        "summary": "Archive run",
        "operationId": "ArchiveRun",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity: project name, hub name, registry name, ...",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the sub-entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{entity}/runs/{uuid}/bookmark": {
      "post": {
        "summary": "Bookmark run",
        "operationId": "BookmarkRun",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity: project name, hub name, registry name, ...",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the sub-entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{entity}/runs/{uuid}/impersonate": {
      "post": {
        "summary": "Impersonate run token",
        "operationId": "ImpersonateToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Auth"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity: project name, hub name, registry name, ...",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the sub-entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{entity}/runs/{uuid}/invalidate": {
      "post": {
        "summary": "Invalidate run",
        "operationId": "InvalidateRun",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity: project name, hub name, registry name, ...",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the sub-entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{entity}/runs/{uuid}/lineage/artifacts": {
      "get": {
        "summary": "Get run artifacts lineage",
        "operationId": "GetRunArtifactsLineage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListRunArtifactsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity name under namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "SubEntity uuid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{entity}/runs/{uuid}/lineage/artifacts/names": {
      "get": {
        "summary": "Get run artifacts lineage names",
        "operationId": "GetRunArtifactsLineageNames",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListRunArtifactsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity name under namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "SubEntity uuid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{entity}/runs/{uuid}/lineage/clones": {
      "get": {
        "summary": "Get run clones lineage",
        "operationId": "GetRunClonesLineage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListRunsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity name under namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "SubEntity uuid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{entity}/runs/{uuid}/lineage/connections": {
      "get": {
        "summary": "Get run connections lineage",
        "operationId": "GetRunConnectionsLineage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListRunConnectionsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity name under namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "SubEntity uuid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{entity}/runs/{uuid}/lineage/downstream": {
      "get": {
        "summary": "Get run downstream lineage",
        "operationId": "GetRunDownstreamLineage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListRunEdgesResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity name under namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "SubEntity uuid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{entity}/runs/{uuid}/lineage/upstream": {
      "get": {
        "summary": "Get run upstream lineage",
        "operationId": "GetRunUpstreamLineage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListRunEdgesResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity name under namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "SubEntity uuid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{entity}/runs/{uuid}/namespace": {
      "get": {
        "summary": "Get Run namespace",
        "operationId": "GetRunNamespace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RunSettings"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity: project name, hub name, registry name, ...",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the sub-entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{entity}/runs/{uuid}/restore": {
      "post": {
        "summary": "Restore run",
        "operationId": "RestoreRun",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity: project name, hub name, registry name, ...",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the sub-entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{entity}/runs/{uuid}/settings": {
      "get": {
        "summary": "Get Run settings",
        "operationId": "GetRunSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RunSettings"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity: project name, hub name, registry name, ...",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the sub-entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{entity}/runs/{uuid}/skip": {
      "post": {
        "summary": "Skip run",
        "operationId": "SkipRun",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity: project name, hub name, registry name, ...",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the sub-entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{entity}/runs/{uuid}/stats": {
      "get": {
        "summary": "Get run stats",
        "operationId": "GetRunStats",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity name under namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "SubEntity uuid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bookmarks",
            "description": "Filter by bookmarks.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "mode",
            "description": "Stats Mode.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "kind",
            "description": "Stats Kind.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "aggregate",
            "description": "Stats aggregate.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "groupby",
            "description": "Stats group.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "trunc",
            "description": "Stats trunc.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{entity}/runs/{uuid}/statuses": {
      "get": {
        "summary": "Get run statuses",
        "operationId": "GetRunStatuses",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Status"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity: project name, hub name, registry name, ...",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the sub-entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{entity}/runs/{uuid}/stop": {
      "post": {
        "summary": "Stop run",
        "operationId": "StopRun",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity: project name, hub name, registry name, ...",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the sub-entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{entity}/runs/{uuid}/unbookmark": {
      "delete": {
        "summary": "Unbookmark run",
        "operationId": "UnbookmarkRun",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity: project name, hub name, registry name, ...",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the sub-entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{entity}/searches/{uuid}": {
      "get": {
        "summary": "Get project search",
        "operationId": "GetProjectSearch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Search"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity: project name, hub name, registry name, ...",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the sub-entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectSearchesV1"
        ]
      },
      "delete": {
        "summary": "Delete project search",
        "operationId": "DeleteProjectSearch",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity: project name, hub name, registry name, ...",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the sub-entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectSearchesV1"
        ]
      }
    },
    "/api/v1/{owner}/{entity}/searches/{uuid}/promote": {
      "post": {
        "summary": "Promote project search",
        "operationId": "PromoteProjectSearch",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity: project name, hub name, registry name, ...",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the sub-entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectSearchesV1"
        ]
      }
    },
    "/api/v1/{owner}/{entity}/versions/{kind}": {
      "get": {
        "summary": "List versions",
        "operationId": "ListVersions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListProjectVersionsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity name under namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "kind",
            "description": "Version Kind",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      }
    },
    "/api/v1/{owner}/{entity}/versions/{kind}/names": {
      "get": {
        "summary": "List versions names",
        "operationId": "ListVersionNames",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListProjectVersionsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity name under namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "kind",
            "description": "Version Kind",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      }
    },
    "/api/v1/{owner}/{entity}/versions/{kind}/{name}": {
      "get": {
        "summary": "Get version",
        "operationId": "GetVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ProjectVersion"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity: project name, hub name, registry name, ...",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "kind",
            "description": "Version Kind",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Sub-entity name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      },
      "delete": {
        "summary": "Delete version",
        "operationId": "DeleteVersion",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity: project name, hub name, registry name, ...",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "kind",
            "description": "Version Kind",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Sub-entity name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      }
    },
    "/api/v1/{owner}/{entity}/versions/{kind}/{name}/stages": {
      "get": {
        "summary": "Get version stages",
        "operationId": "GetVersionStages",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Stage"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity: project name, hub name, registry name, ...",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "kind",
            "description": "Version Kind",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Sub-entity name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      },
      "post": {
        "summary": "Create new artifact version stage",
        "operationId": "CreateVersionStage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Stage"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "kind",
            "description": "Optional kind, only required for an version entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name of the entity to apply the stage to",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1EntityStageBodyRequest"
            }
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      }
    },
    "/api/v1/{owner}/{name}": {
      "get": {
        "summary": "Get project",
        "operationId": "GetProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Project"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Component under namespace",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      },
      "delete": {
        "summary": "Delete project",
        "operationId": "DeleteProject",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Component under namespace",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      }
    },
    "/api/v1/{owner}/{name}/activities": {
      "get": {
        "summary": "Get project activities",
        "operationId": "GetProjectActivities",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListActivitiesResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Entity managing the resource",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bookmarks",
            "description": "Filter by bookmarks.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "mode",
            "description": "Mode of the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      }
    },
    "/api/v1/{owner}/{name}/archive": {
      "post": {
        "summary": "Archive project",
        "operationId": "ArchiveProject",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Component under namespace",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      }
    },
    "/api/v1/{owner}/{name}/bookmark": {
      "post": {
        "summary": "Bookmark project",
        "operationId": "BookmarkProject",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Component under namespace",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      }
    },
    "/api/v1/{owner}/{name}/ci": {
      "delete": {
        "summary": "Disbale project CI",
        "operationId": "DisableProjectCI",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Component under namespace",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      },
      "post": {
        "summary": "Enable project CI",
        "operationId": "EnableProjectCI",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Component under namespace",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      }
    },
    "/api/v1/{owner}/{name}/dashboards": {
      "get": {
        "summary": "List project dashboards",
        "operationId": "ListProjectDashboards",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListDashboardsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Entity managing the resource",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bookmarks",
            "description": "Filter by bookmarks.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "mode",
            "description": "Mode of the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ProjectDashboardsV1"
        ]
      }
    },
    "/api/v1/{owner}/{name}/dashboards/names": {
      "get": {
        "summary": "List project dashboard",
        "operationId": "ListProjectDashboardNames",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListDashboardsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Entity managing the resource",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bookmarks",
            "description": "Filter by bookmarks.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "mode",
            "description": "Mode of the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ProjectDashboardsV1"
        ]
      }
    },
    "/api/v1/{owner}/{name}/restore": {
      "post": {
        "summary": "Restore project",
        "operationId": "RestoreProject",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Component under namespace",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      }
    },
    "/api/v1/{owner}/{name}/runs": {
      "get": {
        "summary": "List runs",
        "operationId": "ListRuns",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListRunsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Entity managing the resource",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bookmarks",
            "description": "Filter by bookmarks.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "mode",
            "description": "Mode of the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{name}/runs/approve": {
      "post": {
        "summary": "Approve runs",
        "operationId": "ApproveRuns",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Entity under namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Uuids of the entities",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Uuids"
            }
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{name}/runs/archive": {
      "post": {
        "summary": "Archive runs",
        "operationId": "ArchiveRuns",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Entity under namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Uuids of the entities",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Uuids"
            }
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{name}/runs/bookmark": {
      "post": {
        "summary": "Bookmark runs",
        "operationId": "BookmarkRuns",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Entity under namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Uuids of the entities",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Uuids"
            }
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{name}/runs/delete": {
      "delete": {
        "summary": "Delete runs",
        "operationId": "DeleteRuns",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Entity under namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Uuids of the entities",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Uuids"
            }
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{name}/runs/invalidate": {
      "post": {
        "summary": "Invalidate runs",
        "operationId": "InvalidateRuns",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Entity under namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Uuids of the entities",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Uuids"
            }
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{name}/runs/lineage/artifacts": {
      "get": {
        "summary": "Get runs artifacts lineage",
        "operationId": "GetRunsArtifactsLineage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListRunArtifactsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Entity managing the resource",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bookmarks",
            "description": "Filter by bookmarks.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "mode",
            "description": "Mode of the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{name}/runs/restore": {
      "post": {
        "summary": "Restore runs",
        "operationId": "RestoreRuns",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Entity under namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Uuids of the entities",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Uuids"
            }
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{name}/runs/skip": {
      "post": {
        "summary": "Skip runs",
        "operationId": "SkipRuns",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Entity under namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Uuids of the entities",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Uuids"
            }
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{name}/runs/stop": {
      "post": {
        "summary": "Stop runs",
        "operationId": "StopRuns",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Entity under namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Uuids of the entities",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Uuids"
            }
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{name}/runs/tag": {
      "post": {
        "summary": "Tag runs",
        "operationId": "TagRuns",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Entity under namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1EntitiesTags"
            }
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{name}/runs/transfer": {
      "post": {
        "summary": "Transfer runs",
        "operationId": "TransferRuns",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Entity under namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1EntitiesTransfer"
            }
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{name}/searches": {
      "get": {
        "summary": "List project searches",
        "operationId": "ListProjectSearches",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListSearchesResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Entity managing the resource",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bookmarks",
            "description": "Filter by bookmarks.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "mode",
            "description": "Mode of the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ProjectSearchesV1"
        ]
      }
    },
    "/api/v1/{owner}/{name}/searches/names": {
      "get": {
        "summary": "List project search names",
        "operationId": "ListProjectSearchNames",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListSearchesResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Entity managing the resource",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bookmarks",
            "description": "Filter by bookmarks.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "mode",
            "description": "Mode of the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_page",
            "description": "No pagination.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ProjectSearchesV1"
        ]
      }
    },
    "/api/v1/{owner}/{name}/settings": {
      "get": {
        "summary": "Get Project settings",
        "operationId": "GetProjectSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ProjectSettings"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Component under namespace",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      }
    },
    "/api/v1/{owner}/{name}/stats": {
      "get": {
        "summary": "Get project stats",
        "operationId": "GetProjectStats",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Entity managing the resource",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bookmarks",
            "description": "Filter by bookmarks.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "mode",
            "description": "Stats Mode.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "kind",
            "description": "Stats Kind.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "aggregate",
            "description": "Stats aggregate.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "groupby",
            "description": "Stats group.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "trunc",
            "description": "Stats trunc.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      }
    },
    "/api/v1/{owner}/{name}/unbookmark": {
      "delete": {
        "summary": "Unbookmark project",
        "operationId": "UnbookmarkProject",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Component under namespace",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project.name}": {
      "put": {
        "summary": "Update project",
        "operationId": "UpdateProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Project"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project.name",
            "description": "Required name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Project body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Project"
            }
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      },
      "patch": {
        "summary": "Patch project",
        "operationId": "PatchProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Project"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project.name",
            "description": "Required name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Project body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Project"
            }
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/dashboards": {
      "post": {
        "summary": "Create project dashboard",
        "operationId": "CreateProjectDashboard",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Dashboard"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project under namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Dashboard body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Dashboard"
            }
          }
        ],
        "tags": [
          "ProjectDashboardsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/dashboards/{dashboard.uuid}": {
      "put": {
        "summary": "Update project dashboard",
        "operationId": "UpdateProjectDashboard",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Dashboard"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project under namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "dashboard.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Dashboard body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Dashboard"
            }
          }
        ],
        "tags": [
          "ProjectDashboardsV1"
        ]
      },
      "patch": {
        "summary": "Patch project dashboard",
        "operationId": "PatchProjectDashboard",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Dashboard"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project under namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "dashboard.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Dashboard body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Dashboard"
            }
          }
        ],
        "tags": [
          "ProjectDashboardsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/runs": {
      "post": {
        "summary": "Create new run",
        "operationId": "CreateRun",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Run"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project where the run will be assigned",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "operation object",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1OperationBody"
            }
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/runs/sync": {
      "post": {
        "summary": "Sync offline run",
        "operationId": "SyncRun",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project where the run will be assigned",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Run object",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Run"
            }
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/runs/{run.uuid}": {
      "put": {
        "summary": "Update run",
        "operationId": "UpdateRun",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Run"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project where the run will be assigned",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "run.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Run object",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Run"
            }
          }
        ],
        "tags": [
          "RunsV1"
        ]
      },
      "patch": {
        "summary": "Patch run",
        "operationId": "PatchRun",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Run"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project where the run will be assigned",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "run.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Run object",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Run"
            }
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/runs/{run.uuid}/copy": {
      "post": {
        "summary": "Restart run with copy",
        "operationId": "CopyRun",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Run"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project where the run will be assigned",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "run.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Run object",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Run"
            }
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/runs/{run.uuid}/restart": {
      "post": {
        "summary": "Restart run",
        "operationId": "RestartRun",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Run"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project where the run will be assigned",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "run.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Run object",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Run"
            }
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/runs/{run.uuid}/resume": {
      "post": {
        "summary": "Resume run",
        "operationId": "ResumeRun",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Run"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project where the run will be assigned",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "run.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Run object",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Run"
            }
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/runs/{run.uuid}/transfer": {
      "post": {
        "summary": "Transfer run",
        "operationId": "TransferRun",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project where the run will be assigned",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "run.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Run object",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Run"
            }
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/runs/{uuid}/lineage/artifacts": {
      "post": {
        "summary": "Create bulk run artifacts lineage",
        "operationId": "CreateRunArtifactsLineage",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project where the run will be assigned",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Run Artifacts",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RunArtifacts"
            }
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/runs/{uuid}/lineage/artifacts/{name}": {
      "get": {
        "summary": "Get run artifacts lineage",
        "operationId": "GetRunArtifactLineage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RunArtifact"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project where the run will be assigned",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Artifact name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "namespace.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      },
      "delete": {
        "summary": "Delete run artifact lineage",
        "operationId": "DeleteRunArtifactLineage",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project where the run will be assigned",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Artifact name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "namespace.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/runs/{uuid}/lineage/edges": {
      "post": {
        "summary": "Set run edges graph lineage",
        "operationId": "SetRunEdgesLineage",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Run uuid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Run edges graph",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RunEdgesGraph"
            }
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/runs/{uuid}/statuses": {
      "post": {
        "summary": "Create new run status",
        "operationId": "CreateRunStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Status"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project where the run will be assigned",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1EntityStatusBodyRequest"
            }
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/searches": {
      "post": {
        "summary": "Create project search",
        "operationId": "CreateProjectSearch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Search"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project under namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Search body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Search"
            }
          }
        ],
        "tags": [
          "ProjectSearchesV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/searches/{search.uuid}": {
      "put": {
        "summary": "Update project search",
        "operationId": "UpdateProjectSearch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Search"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project under namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "search.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Search body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Search"
            }
          }
        ],
        "tags": [
          "ProjectSearchesV1"
        ]
      },
      "patch": {
        "summary": "Patch project search",
        "operationId": "PatchProjectSearch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Search"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project under namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "search.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Search body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Search"
            }
          }
        ],
        "tags": [
          "ProjectSearchesV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/settings": {
      "put": {
        "summary": "Update project settings",
        "operationId": "UpdateProjectSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ProjectSettings"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Project settings body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ProjectSettings"
            }
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      },
      "patch": {
        "summary": "Patch project settings",
        "operationId": "PatchProjectSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ProjectSettings"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Project settings body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ProjectSettings"
            }
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/versions/{version.kind}": {
      "post": {
        "summary": "Create version",
        "operationId": "CreateVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ProjectVersion"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version.kind",
            "description": "Optional kind to tell the kind of this version",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "component",
              "model",
              "artifact"
            ]
          },
          {
            "name": "body",
            "description": "Project version body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ProjectVersion"
            }
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/versions/{version.kind}/{version.name}": {
      "put": {
        "summary": "Update version",
        "operationId": "UpdateVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ProjectVersion"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version.kind",
            "description": "Optional kind to tell the kind of this version",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "component",
              "model",
              "artifact"
            ]
          },
          {
            "name": "version.name",
            "description": "Optional component name, should be a valid fully qualified value: name[:version]",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Project version body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ProjectVersion"
            }
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      },
      "patch": {
        "summary": "Patch version",
        "operationId": "PatchVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ProjectVersion"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version.kind",
            "description": "Optional kind to tell the kind of this version",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "component",
              "model",
              "artifact"
            ]
          },
          {
            "name": "version.name",
            "description": "Optional component name, should be a valid fully qualified value: name[:version]",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Project version body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ProjectVersion"
            }
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/versions/{version.kind}/{version.name}/transfer": {
      "post": {
        "summary": "Transfer version",
        "operationId": "TransferVersion",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version.kind",
            "description": "Optional kind to tell the kind of this version",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "component",
              "model",
              "artifact"
            ]
          },
          {
            "name": "version.name",
            "description": "Optional component name, should be a valid fully qualified value: name[:version]",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Project version body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ProjectVersion"
            }
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      }
    },
    "/api/v1/{owner}/{team}/projects/create": {
      "post": {
        "summary": "Create new project via team space",
        "operationId": "CreateTeamProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Project"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "team",
            "description": "Team",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Project body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Project"
            }
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      }
    },
    "/internal/v1/{namespace}/{owner}/agents/{uuid}/collect": {
      "post": {
        "summary": "collect agent",
        "operationId": "CollectAgentData",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "description": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AgentsV1"
        ]
      }
    },
    "/internal/v1/{namespace}/{owner}/{project}/runs/{uuid}/{kind}/logs": {
      "post": {
        "summary": "Internal API to collect run logs",
        "operationId": "CollectRunLogs",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project where the run will be assigned",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "kind",
            "description": "Kind of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/schemas": {
      "get": {
        "summary": "NoOp",
        "operationId": "NoOp",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Schemas"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "SchemasV1"
        ]
      }
    },
    "/streams/v1/{namespace}/orgs/{owner}/runs/multi/events/{kind}": {
      "get": {
        "summary": "Get multi runs events",
        "operationId": "GetOrganizationMultiRunEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1MultiEventsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "description": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "kind",
            "description": "The artifact kind",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "model",
              "audio",
              "video",
              "histogram",
              "image",
              "tensor",
              "dataframe",
              "chart",
              "csv",
              "tsv",
              "psv",
              "ssv",
              "metric",
              "env",
              "html",
              "text",
              "file",
              "dir",
              "dockerfile",
              "docker_image",
              "data",
              "coderef",
              "table",
              "tensorboard",
              "curve",
              "confusion",
              "analysis",
              "iteration",
              "markdown",
              "system",
              "span",
              "artifact"
            ]
          },
          {
            "name": "entity",
            "description": "Entity where the run will be assigned.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "names",
            "description": "Names query param.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "runs",
            "description": "Runs query param.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orient",
            "description": "Orient query param.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "force",
            "description": "Force query param.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "sample",
            "description": "Sample query param.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "connection",
            "description": "Connection to use.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "description": "Optional status.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "created",
              "resuming",
              "on_schedule",
              "compiled",
              "queued",
              "scheduled",
              "starting",
              "running",
              "processing",
              "stopping",
              "failed",
              "stopped",
              "succeeded",
              "skipped",
              "warning",
              "unschedulable",
              "upstream_failed",
              "retrying",
              "unknown",
              "done"
            ],
            "default": "created"
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      }
    },
    "/streams/v1/{namespace}/orgs/{owner}/runs/multi/importance": {
      "post": {
        "summary": "Get multi run importance",
        "operationId": "GetOrganizationMultiRunImportance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1MultiEventsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "description": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Params/Metrics data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "entity",
            "description": "Entity where the run will be assigned.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      }
    },
    "/streams/v1/{namespace}/orgs/{owner}/teams/{entity}/runs/multi/events/{kind}": {
      "get": {
        "summary": "Get multi runs events",
        "operationId": "GetTeamMultiRunEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1MultiEventsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "description": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity where the run will be assigned",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "kind",
            "description": "The artifact kind",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "model",
              "audio",
              "video",
              "histogram",
              "image",
              "tensor",
              "dataframe",
              "chart",
              "csv",
              "tsv",
              "psv",
              "ssv",
              "metric",
              "env",
              "html",
              "text",
              "file",
              "dir",
              "dockerfile",
              "docker_image",
              "data",
              "coderef",
              "table",
              "tensorboard",
              "curve",
              "confusion",
              "analysis",
              "iteration",
              "markdown",
              "system",
              "span",
              "artifact"
            ]
          },
          {
            "name": "names",
            "description": "Names query param.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "runs",
            "description": "Runs query param.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orient",
            "description": "Orient query param.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "force",
            "description": "Force query param.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "sample",
            "description": "Sample query param.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "connection",
            "description": "Connection to use.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "description": "Optional status.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "created",
              "resuming",
              "on_schedule",
              "compiled",
              "queued",
              "scheduled",
              "starting",
              "running",
              "processing",
              "stopping",
              "failed",
              "stopped",
              "succeeded",
              "skipped",
              "warning",
              "unschedulable",
              "upstream_failed",
              "retrying",
              "unknown",
              "done"
            ],
            "default": "created"
          }
        ],
        "tags": [
          "TeamsV1"
        ]
      }
    },
    "/streams/v1/{namespace}/orgs/{owner}/teams/{entity}/runs/multi/importance": {
      "post": {
        "summary": "Get multi run importance",
        "operationId": "GetTeamMultiRunImportance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1MultiEventsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "description": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity where the run will be assigned",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Params/Metrics data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "TeamsV1"
        ]
      }
    },
    "/streams/v1/{namespace}/{owner}/agents/{uuid}/k8s_inspect": {
      "get": {
        "summary": "Inspect an agent's service full conditions",
        "operationId": "InspectAgent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "description": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "service",
            "description": "Service.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_file",
            "description": "last_file.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "force",
            "description": "Force query param.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "connection",
            "description": "Connection to use.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AgentsV1"
        ]
      }
    },
    "/streams/v1/{namespace}/{owner}/agents/{uuid}/logs": {
      "get": {
        "summary": "Get run logs",
        "operationId": "GetAgentLogs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Logs"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "description": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "service",
            "description": "Service.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_file",
            "description": "last_file.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "force",
            "description": "Force query param.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "connection",
            "description": "Connection to use.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AgentsV1"
        ]
      }
    },
    "/streams/v1/{namespace}/{owner}/{entity}/runs/multi/events/{kind}": {
      "get": {
        "summary": "Get multi runs events",
        "operationId": "GetMultiRunEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1MultiEventsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "description": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity where the run will be assigned",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "kind",
            "description": "The artifact kind",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "model",
              "audio",
              "video",
              "histogram",
              "image",
              "tensor",
              "dataframe",
              "chart",
              "csv",
              "tsv",
              "psv",
              "ssv",
              "metric",
              "env",
              "html",
              "text",
              "file",
              "dir",
              "dockerfile",
              "docker_image",
              "data",
              "coderef",
              "table",
              "tensorboard",
              "curve",
              "confusion",
              "analysis",
              "iteration",
              "markdown",
              "system",
              "span",
              "artifact"
            ]
          },
          {
            "name": "names",
            "description": "Names query param.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "runs",
            "description": "Runs query param.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orient",
            "description": "Orient query param.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "force",
            "description": "Force query param.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "sample",
            "description": "Sample query param.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "connection",
            "description": "Connection to use.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "description": "Optional status.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "created",
              "resuming",
              "on_schedule",
              "compiled",
              "queued",
              "scheduled",
              "starting",
              "running",
              "processing",
              "stopping",
              "failed",
              "stopped",
              "succeeded",
              "skipped",
              "warning",
              "unschedulable",
              "upstream_failed",
              "retrying",
              "unknown",
              "done"
            ],
            "default": "created"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/streams/v1/{namespace}/{owner}/{entity}/runs/multi/importance": {
      "post": {
        "summary": "Get multi run importance",
        "operationId": "GetMultiRunImportance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1MultiEventsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "description": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "description": "Entity where the run will be assigned",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Params/Metrics data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/artifact": {
      "delete": {
        "summary": "Delete run artifact",
        "operationId": "DeleteRunArtifact",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "description": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project where the run will be assigned",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "path",
            "description": "Path query param.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "connection",
            "description": "Connection to use.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      },
      "get": {
        "summary": "Get run artifact",
        "operationId": "GetRunArtifact",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "string"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "description": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project where the entity will be assigned",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Unique integer identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "path",
            "description": "Artifact filepath.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "stream",
            "description": "Whether to stream the file.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "force",
            "description": "Whether to force reload.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "connection",
            "description": "Connection to use.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/artifacts": {
      "delete": {
        "summary": "Delete run artifacts",
        "operationId": "DeleteRunArtifacts",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "description": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project where the run will be assigned",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "path",
            "description": "Path query param.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "connection",
            "description": "Connection to use.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      },
      "get": {
        "summary": "Get run artifacts",
        "operationId": "GetRunArtifacts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "string"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "description": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project where the entity will be assigned",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Unique integer identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "path",
            "description": "Artifact filepath.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "force",
            "description": "Whether to force reload.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "connection",
            "description": "Connection to use.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/artifacts/tree": {
      "get": {
        "summary": "Get run artifacts tree",
        "operationId": "GetRunArtifactsTree",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ArtifactTree"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "description": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project where the run will be assigned",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "path",
            "description": "Path query param.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "connection",
            "description": "Connection to use.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/events/{kind}": {
      "get": {
        "summary": "Get run events",
        "operationId": "GetRunEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1EventsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "description": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project where the run will be assigned",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "kind",
            "description": "The artifact kind",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "model",
              "audio",
              "video",
              "histogram",
              "image",
              "tensor",
              "dataframe",
              "chart",
              "csv",
              "tsv",
              "psv",
              "ssv",
              "metric",
              "env",
              "html",
              "text",
              "file",
              "dir",
              "dockerfile",
              "docker_image",
              "data",
              "coderef",
              "table",
              "tensorboard",
              "curve",
              "confusion",
              "analysis",
              "iteration",
              "markdown",
              "system",
              "span",
              "artifact"
            ]
          },
          {
            "name": "names",
            "description": "Names query param.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orient",
            "description": "Orient query param.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "force",
            "description": "Force query param.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "sample",
            "description": "Sample query param.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "connection",
            "description": "Connection to use.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "description": "Optional status.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "created",
              "resuming",
              "on_schedule",
              "compiled",
              "queued",
              "scheduled",
              "starting",
              "running",
              "processing",
              "stopping",
              "failed",
              "stopped",
              "succeeded",
              "skipped",
              "warning",
              "unschedulable",
              "upstream_failed",
              "retrying",
              "unknown",
              "done"
            ],
            "default": "created"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/k8s_inspect": {
      "get": {
        "summary": "Inspect an active run full conditions",
        "operationId": "InspectRun",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "description": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project where the run will be assigned",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "names",
            "description": "Names query param.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tail",
            "description": "Query param flag to tail the values.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "force",
            "description": "Force query param.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "sample",
            "description": "Sample query param.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "connection",
            "description": "Connection to use.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "description": "Optional status.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "created",
              "resuming",
              "on_schedule",
              "compiled",
              "queued",
              "scheduled",
              "starting",
              "running",
              "processing",
              "stopping",
              "failed",
              "stopped",
              "succeeded",
              "skipped",
              "warning",
              "unschedulable",
              "upstream_failed",
              "retrying",
              "unknown",
              "done"
            ],
            "default": "created"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/logs": {
      "get": {
        "summary": "Get run logs",
        "operationId": "GetRunLogs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Logs"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project where the run will be assigned",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "last_time",
            "description": "last time.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "last_file",
            "description": "last file.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "force",
            "description": "Force query param.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "connection",
            "description": "Connection to use.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/notify": {
      "post": {
        "summary": "Notify run status",
        "operationId": "NotifyRunStatus",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "description": "Na,espace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project where the run will be assigned",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1EntityNotificationBody"
            }
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/resources": {
      "get": {
        "summary": "Get run resources events",
        "operationId": "GetRunResources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1EventsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "description": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project where the run will be assigned",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "names",
            "description": "Names query param.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tail",
            "description": "Query param flag to tail the values.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "force",
            "description": "Force query param.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "sample",
            "description": "Sample query param.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "connection",
            "description": "Connection to use.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "description": "Optional status.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "created",
              "resuming",
              "on_schedule",
              "compiled",
              "queued",
              "scheduled",
              "starting",
              "running",
              "processing",
              "stopping",
              "failed",
              "stopped",
              "succeeded",
              "skipped",
              "warning",
              "unschedulable",
              "upstream_failed",
              "retrying",
              "unknown",
              "done"
            ],
            "default": "created"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/catalogs/{owner}/artifacts/{uuid}/upload": {
      "post": {
        "summary": "Upload artifact to a store",
        "operationId": "UploadArtifact",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Unique integer identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uploadfile",
            "in": "formData",
            "required": true,
            "type": "file",
            "description": "The file to upload."
          },
          {
            "name": "path",
            "description": "File path query params.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "overwrite",
            "description": "File path query params.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ArtifactsStoresV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/artifacts/{uuid}/upload": {
      "post": {
        "summary": "Upload artifact to a store via project access",
        "operationId": "UploadProjectArtifact",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project having access to the store",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Unique integer identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uploadfile",
            "in": "formData",
            "required": true,
            "type": "file",
            "description": "The file to upload."
          },
          {
            "name": "path",
            "description": "File path query params.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "overwrite",
            "description": "File path query params.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/runs/{uuid}/logs/upload": {
      "post": {
        "summary": "Upload a logs file to a store via run access",
        "operationId": "UploadRunLogs",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project having access to the store",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Unique integer identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uploadfile",
            "in": "formData",
            "required": true,
            "type": "file",
            "description": "The file to upload."
          },
          {
            "name": "path",
            "description": "File path query params.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "overwrite",
            "description": "File path query params.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "connection",
            "description": "Connection to use.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/runs/{uuid}/artifacts/upload": {
      "post": {
        "summary": "Upload an artifact file to a store via run access",
        "operationId": "UploadRunArtifact",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project having access to the store",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Unique integer identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uploadfile",
            "in": "formData",
            "required": true,
            "type": "file",
            "description": "The file to upload."
          },
          {
            "name": "path",
            "description": "File path query params.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "overwrite",
            "description": "File path query params.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "connection",
            "description": "Connection to use.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    }
  },
  "definitions": {
    "AgentStateResponseAgentState": {
      "type": "object",
      "properties": {
        "schedules": {
          "type": "object",
          "title": "List of schdules runs"
        },
        "hooks": {
          "type": "object",
          "title": "List of hooks runs"
        },
        "watchdogs": {
          "type": "object",
          "title": "List of watchdogs runs"
        },
        "tuners": {
          "type": "object",
          "title": "List of tuners runs"
        },
        "queued": {
          "type": "object",
          "title": "List of queued runs"
        },
        "stopping": {
          "type": "object",
          "title": "List of stopping runs"
        },
        "deleting": {
          "type": "object",
          "title": "List of deleting runs"
        },
        "apply": {
          "type": "object",
          "title": "List of apply runs"
        },
        "checks": {
          "type": "object",
          "title": "List of run checks"
        },
        "full": {
          "type": "boolean",
          "title": "A flag to tell the agent that the queues are still full"
        }
      }
    },
    "MXJobMode": {
      "type": "string",
      "enum": [
        "MXTrain",
        "MXTune"
      ],
      "default": "MXTrain",
      "title": "- MXTrain: Train Mode, requires Server, Scheduler, Worker\n - MXTune: Tune Mode, requires Tuner"
    },
    "SearchView": {
      "type": "string",
      "enum": [
        "any",
        "runs",
        "selection",
        "analytics",
        "components",
        "models",
        "artifacts",
        "projects"
      ],
      "default": "any",
      "description": "- any: Any view\n - runs: Runs view\n - selection: Selection view\n - analytics: Analytics view\n - components: Components view\n - models: Models view\n - artifacts: Artifacts view\n - projects: Projects view",
      "title": "Search view"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "Must be a valid serialized protocol buffer of the above specified type."
        }
      },
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n    // or ...\n    if (any.isSameTypeAs(Foo.getDefaultInstance())) {\n      foo = any.unpack(Foo.getDefaultInstance());\n    }\n\nExample 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\nExample 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\nJSON\n\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1Activity": {
      "type": "object",
      "properties": {
        "actor": {
          "type": "string",
          "title": "Actor"
        },
        "owner": {
          "type": "string",
          "title": "Owner"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "Created at"
        },
        "event_action": {
          "type": "string",
          "title": "Event action"
        },
        "event_subject": {
          "type": "string",
          "title": "Event subject"
        },
        "object_name": {
          "type": "string",
          "title": "Object name"
        },
        "object_uuid": {
          "type": "string",
          "title": "Object uuid"
        },
        "object_parent": {
          "type": "string",
          "title": "Object parent"
        }
      },
      "title": "Activity specification"
    },
    "v1Affinity": {
      "type": "object",
      "title": "Placeholder for Affinity"
    },
    "v1Agent": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "title": "UUID"
        },
        "name": {
          "type": "string",
          "title": "Name"
        },
        "description": {
          "type": "string",
          "title": "Optional description"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional tags of this entity"
        },
        "live_state": {
          "type": "integer",
          "format": "int32",
          "title": "Current live state"
        },
        "namespace": {
          "type": "string",
          "title": "Namespace where the agent is deployed"
        },
        "version_api": {
          "type": "object",
          "title": "Optional version api"
        },
        "version": {
          "type": "string",
          "title": "Agent version"
        },
        "content": {
          "type": "string",
          "title": "Content of the agent config"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional time when the entity was created"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional last time the entity was updated"
        },
        "status": {
          "$ref": "#/definitions/v1Statuses",
          "title": "Optional latest status of this entity"
        },
        "status_conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1StatusCondition"
          },
          "title": "The status conditions timeline"
        },
        "is_replica": {
          "type": "boolean",
          "title": "Agent is in replica mode"
        },
        "is_ui_managed": {
          "type": "boolean",
          "title": "Agent is updatable and managed from the UI"
        },
        "hostname": {
          "type": "string",
          "title": "Agent hostname"
        },
        "settings": {
          "type": "object",
          "title": "Optional settings"
        },
        "stats": {
          "type": "object",
          "title": "Optional agent stats"
        }
      },
      "title": "Agent specification"
    },
    "v1AgentReconcileBodyRequest": {
      "type": "object",
      "properties": {
        "owner": {
          "type": "string",
          "title": "Owner of the namespace"
        },
        "uuid": {
          "type": "string",
          "title": "Uuid identifier of the entity"
        },
        "reconcile": {
          "type": "object",
          "title": "Reconcile reconcile"
        }
      },
      "title": "Request data to reconcile agent"
    },
    "v1AgentStateResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v1Statuses"
        },
        "state": {
          "$ref": "#/definitions/AgentStateResponseAgentState"
        },
        "live_state": {
          "type": "integer",
          "format": "int32"
        },
        "compatible_updates": {
          "type": "object"
        }
      },
      "title": "Contains the agents (queues/runs) state"
    },
    "v1AgentStatusBodyRequest": {
      "type": "object",
      "properties": {
        "owner": {
          "type": "string",
          "title": "Owner of the namespace"
        },
        "uuid": {
          "type": "string",
          "title": "Uuid identifier of the entity"
        },
        "condition": {
          "$ref": "#/definitions/v1StatusCondition",
          "title": "Status to set"
        }
      },
      "title": "Request data to create/update agent status"
    },
    "v1AnalyticsSpec": {
      "type": "object",
      "properties": {
        "view": {
          "type": "string",
          "title": "View"
        },
        "trunc": {
          "type": "string",
          "title": "Trunc field"
        },
        "groupby": {
          "type": "string",
          "title": "Groupby field"
        },
        "frequency": {
          "type": "string",
          "title": "Stats frequency"
        }
      },
      "title": "Analytics spec definition"
    },
    "v1ArtifactKind": {
      "type": "string",
      "enum": [
        "model",
        "audio",
        "video",
        "histogram",
        "image",
        "tensor",
        "dataframe",
        "chart",
        "csv",
        "tsv",
        "psv",
        "ssv",
        "metric",
        "env",
        "html",
        "text",
        "file",
        "dir",
        "dockerfile",
        "docker_image",
        "data",
        "coderef",
        "table",
        "tensorboard",
        "curve",
        "confusion",
        "analysis",
        "iteration",
        "markdown",
        "system",
        "span",
        "artifact"
      ],
      "default": "model",
      "description": "- model: Model asset/event\n - audio: Audio asset/event\n - video: Vidio asset/event\n - histogram: Histogram asset/event\n - image: Image asset/event\n - tensor: Tensor asset/event\n - dataframe: Dataframe asset/event\n - chart: plotly/bokeh/vega chart\n - csv: Comma separated values\n - tsv: Tab separated values\n - psv: Pipe separated values\n - ssv: Space separated values\n - metric: Metric asset/event\n - env: Env file\n - html: HTML asset/event\n - text: Text asset/event\n - file: File asset/lineage\n - dir: Dir asset/lineage\n - dockerfile: Dockerfile asset\n - docker_image: Docker image\n - data: Data asset/event\n - coderef: Coderef lineage\n - table: Table asset/event\n - tensorboard: Tensorboard lineage\n - curve: Curve event\n - confusion: Confusion matrix event\n - analysis: Analysis lineage\n - iteration: Iteration lineage\n - markdown: Mardown event\n - system: System event\n - span: Trace/Span event\n - artifact: Generic artifact",
      "title": "Artifact kind"
    },
    "v1ArtifactTree": {
      "type": "object",
      "properties": {
        "files": {
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int32"
          }
        },
        "dirs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "is_done": {
          "type": "boolean"
        }
      },
      "title": "Artifact tree response"
    },
    "v1ArtifactsMount": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of the artifact(connection)"
        },
        "paths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Paths to mount"
        }
      },
      "title": "Artifact mount specification"
    },
    "v1ArtifactsType": {
      "type": "object",
      "properties": {
        "files": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "title": "Optional files to initialize"
        },
        "dirs": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "title": "Optional dirs to initialize"
        },
        "workers": {
          "type": "integer",
          "format": "int32",
          "title": "Optional number of concurrent threads to use"
        }
      },
      "title": "Artifacts type specification"
    },
    "v1Auth": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "title": "token hash"
        }
      },
      "title": "Auth specification"
    },
    "v1AuthType": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string",
          "title": "Optional user"
        },
        "password": {
          "type": "string",
          "title": "Optional password"
        }
      },
      "title": "Auth type specification"
    },
    "v1Bayes": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of matrix, should be equal to \"bayes\"",
          "default": "bayes"
        },
        "params": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          },
          "title": "Hyperparams/Space definition of params to traverse"
        },
        "numInitialRuns": {
          "type": "integer",
          "format": "int32",
          "title": "Number of intial random observations to create"
        },
        "maxIterations": {
          "type": "integer",
          "format": "int32",
          "title": "Maximim number of iteration to produce new observations"
        },
        "utilityFunction": {
          "type": "object",
          "title": "A utility function to use for the bayesian optimization"
        },
        "metric": {
          "$ref": "#/definitions/v1OptimizationMetric",
          "title": "Metric to optimize during the iterations"
        },
        "seed": {
          "type": "integer",
          "format": "int32",
          "title": "Seed for the random generator"
        },
        "concurrency": {
          "type": "integer",
          "format": "int32",
          "title": "Number of concurrent runs"
        },
        "tuner": {
          "$ref": "#/definitions/v1Tuner",
          "title": "Tuner reference (hubRef) to use"
        },
        "earlyStopping": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "title": "A list of Early stopping objects, accpets both metric and failure early stopping mechanisms"
        }
      },
      "title": "Matrix based on Bayesian Optimization"
    },
    "v1BucketConnection": {
      "type": "object",
      "properties": {
        "bucket": {
          "type": "string",
          "title": "Bucket"
        }
      },
      "title": "Bucket connection schema validation specification"
    },
    "v1Build": {
      "type": "object",
      "properties": {
        "hubRef": {
          "type": "string",
          "title": "Component name to use"
        },
        "connection": {
          "type": "string",
          "title": "Connection to use"
        },
        "presets": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional list of presets to use for running this tuner"
        },
        "queue": {
          "type": "string",
          "title": "Optional queue to use for scheduling the tuner"
        },
        "namespace": {
          "type": "string",
          "title": "Optional namespace to use, uses agent's namespace by default"
        },
        "cache": {
          "$ref": "#/definitions/v1Cache",
          "title": "Optional flag to disable cache validation and force run this operation"
        },
        "params": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1Param"
          },
          "title": "Optional dict of params"
        },
        "runPatch": {
          "type": "object",
          "title": "Optional a run section to override the content of the run in the template"
        },
        "patchStrategy": {
          "$ref": "#/definitions/v1PatchStrategy",
          "title": "Optional patch strategy, default post_merge"
        }
      },
      "title": "Build definition"
    },
    "v1Cache": {
      "type": "object",
      "properties": {
        "disable": {
          "type": "boolean",
          "title": "Optional flag to disable cache, Cache is enabled by default"
        },
        "ttl": {
          "type": "integer",
          "format": "int32",
          "title": "Optional time to live for the cache before it gets invalidated automatically,\nthe TTL is calculated based on the time the run starts"
        },
        "io": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional Inputs/Outputs' names to consider for the cache, default behavior to consider all inputs/outputs"
        },
        "sections": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional sections to consider for the cache, default behavior to consider container(command, args), init section, and connections section"
        }
      },
      "title": "Cache specification\nCache is calculated based on inputs state as well as component version if used"
    },
    "v1ClaimConnection": {
      "type": "object",
      "properties": {
        "volumeClaim": {
          "type": "string",
          "title": "Claim name"
        },
        "mountPath": {
          "type": "string",
          "title": "Mount path"
        },
        "readOnly": {
          "type": "boolean",
          "title": "Read Only"
        },
        "kind": {
          "default": "volume_claim"
        }
      },
      "title": "Claim connection schema validation specification"
    },
    "v1CleanPodPolicy": {
      "type": "string",
      "enum": [
        "All",
        "Running",
        "None"
      ],
      "default": "All",
      "title": "CleanPodPolicy"
    },
    "v1Cloning": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "title": "Optional uuid of the original run"
        },
        "name": {
          "type": "string",
          "title": "Optional name of the original run"
        },
        "kind": {
          "$ref": "#/definitions/v1CloningKind",
          "title": "Optional if this run was restarted/copied/resumed/cached"
        }
      }
    },
    "v1CloningKind": {
      "type": "string",
      "enum": [
        "copy",
        "restart",
        "cache"
      ],
      "default": "copy"
    },
    "v1Compatibility": {
      "type": "object",
      "properties": {
        "cli": {
          "$ref": "#/definitions/v1Version"
        },
        "platform": {
          "$ref": "#/definitions/v1Version"
        },
        "agent": {
          "$ref": "#/definitions/v1Version"
        },
        "ui": {
          "$ref": "#/definitions/v1Version"
        }
      }
    },
    "v1CompiledOperation": {
      "type": "object",
      "properties": {
        "version": {
          "type": "number",
          "format": "float",
          "title": "Spec version"
        },
        "kind": {
          "type": "string",
          "title": "Optional component kind, should be equal to 'operation'"
        },
        "name": {
          "type": "string",
          "title": "Optional component name, should a valid slug"
        },
        "description": {
          "type": "string",
          "title": "Optional component description"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional component tags"
        },
        "presets": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional presets to use for running this component"
        },
        "queue": {
          "type": "string",
          "title": "Optional queue to use for running this component"
        },
        "cache": {
          "$ref": "#/definitions/v1Cache",
          "title": "Optional flag to disable cache validation and force run this component"
        },
        "namespace": {
          "type": "string",
          "title": "Optional namespace to use, uses agent's namespace by default"
        },
        "termination": {
          "$ref": "#/definitions/v1Termination",
          "title": "optional termination section"
        },
        "plugins": {
          "$ref": "#/definitions/v1Plugins",
          "title": "Optional plugins to enable"
        },
        "schedule": {
          "type": "object",
          "title": "Optional schedule section, must be a valid Schedule option (Cron/Interval/Repeatable/ExactTime)"
        },
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1EventTrigger"
          },
          "title": "Optional events section, must be a valid List of EventTrigger option (Run/Git/Alert/Webhook/Dataset)"
        },
        "build": {
          "$ref": "#/definitions/v1Build",
          "title": "Optional build process"
        },
        "hooks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Hook"
          },
          "title": "Optional hooks section"
        },
        "dependencies": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional graph dependencies of this op"
        },
        "trigger": {
          "$ref": "#/definitions/v1TriggerPolicy",
          "title": "Optional trigger policy"
        },
        "conditions": {
          "type": "string",
          "title": "An optional template containing conditions to check before starting the run"
        },
        "skipOnUpstreamSkip": {
          "type": "boolean",
          "title": "Optional flag to skip this run if upstream was skipped"
        },
        "matrix": {
          "type": "object",
          "title": "Optional matrix section, must be a valid matrix option (Random/Grid/BO/Hyperband/Hyperopt/Mapping/Iterative)"
        },
        "joins": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1Join"
          },
          "title": "Optional dict of joins"
        },
        "inputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1IO"
          },
          "title": "Optional inputs definition"
        },
        "outputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1IO"
          },
          "title": "Optional outputs definition"
        },
        "contexts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1IO"
          },
          "title": "Optional outputs definition"
        },
        "isApproved": {
          "type": "boolean",
          "title": "Optional flag to mark this specification requires approval before running"
        },
        "cost": {
          "type": "number",
          "format": "float",
          "title": "Optional field to assign cost to this Component"
        },
        "run": {
          "type": "object",
          "title": "Run definition, should be one of run composition: Container/Ray/Dask/Kubeflow/Dask/Dag"
        }
      },
      "title": "CompiledOperation specification"
    },
    "v1Component": {
      "type": "object",
      "properties": {
        "version": {
          "type": "number",
          "format": "float",
          "title": "Spec version"
        },
        "kind": {
          "type": "string",
          "title": "Optional component kind, should be equal to 'operation'"
        },
        "name": {
          "type": "string",
          "title": "Optional component name, should be a valid fully qualified value: name[:version]"
        },
        "description": {
          "type": "string",
          "title": "Optional component description"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional component tags"
        },
        "presets": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional presets to use for running this component"
        },
        "queue": {
          "type": "string",
          "title": "Optional queue to use for running this component"
        },
        "cache": {
          "$ref": "#/definitions/v1Cache",
          "title": "Optional flag to disable cache validation and force run this component"
        },
        "namespace": {
          "type": "string",
          "title": "Optional namespace to use, uses agent's namespace by default"
        },
        "termination": {
          "$ref": "#/definitions/v1Termination",
          "title": "optional termination section"
        },
        "plugins": {
          "$ref": "#/definitions/v1Plugins",
          "title": "Optional plugins to enable"
        },
        "hooks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Hook"
          },
          "title": "Optional hooks section"
        },
        "inputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1IO"
          },
          "title": "Optional inputs definition"
        },
        "outputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1IO"
          },
          "title": "Optional outputs definition"
        },
        "build": {
          "$ref": "#/definitions/v1Build",
          "title": "Optional build process"
        },
        "run": {
          "type": "object",
          "title": "Run definition, should be one of: Job/Service/Ray/Kubeflow/Dask/Dag"
        },
        "template": {
          "$ref": "#/definitions/v1Template",
          "title": "Optional flag to mark this specification as template"
        },
        "isApproved": {
          "type": "boolean",
          "title": "Optional flag to mark this specification requires approval before running"
        },
        "cost": {
          "type": "number",
          "format": "float",
          "title": "Optional field to assign cost to this Component"
        }
      },
      "title": "Component specification"
    },
    "v1ConnectionKind": {
      "type": "string",
      "enum": [
        "host_path",
        "volume_claim",
        "gcs",
        "s3",
        "wasb",
        "registry",
        "git",
        "aws",
        "gcp",
        "azure",
        "mysql",
        "postgres",
        "oracle",
        "vertica",
        "sqlite",
        "mssql",
        "redis",
        "presto",
        "mongo",
        "cassandra",
        "ftp",
        "grpc",
        "hdfs",
        "http",
        "pig_cli",
        "hive_cli",
        "hive_metastore",
        "hive_server2",
        "jdbc",
        "jenkins",
        "samba",
        "snowflake",
        "ssh",
        "cloudant",
        "databricks",
        "segment",
        "slack",
        "discord",
        "mattermost",
        "pagerduty",
        "hipchat",
        "webhook",
        "custom"
      ],
      "default": "host_path",
      "title": "Connection kinds"
    },
    "v1ConnectionResource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "mountPath": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "defaultMode": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "K8S resource schema validation"
    },
    "v1ConnectionResponse": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "title": "UUID"
        },
        "name": {
          "type": "string",
          "title": "Name"
        },
        "agent": {
          "type": "string",
          "title": "Agent"
        },
        "description": {
          "type": "string",
          "title": "Optional description"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional tags of this entity"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional time when the entity was created"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional last time the entity was updated"
        },
        "live_state": {
          "type": "integer",
          "format": "int32",
          "title": "Current live state"
        },
        "kind": {
          "$ref": "#/definitions/v1ConnectionKind",
          "title": "The connection kind"
        }
      },
      "title": "Connection specification"
    },
    "v1ConnectionSchema": {
      "type": "object",
      "properties": {
        "bucketConnection": {
          "$ref": "#/definitions/v1BucketConnection"
        },
        "hostPathConnection": {
          "$ref": "#/definitions/v1HostPathConnection"
        },
        "claimConnection": {
          "$ref": "#/definitions/v1ClaimConnection"
        },
        "hostConnection": {
          "$ref": "#/definitions/v1HostConnection"
        },
        "gitConnection": {
          "$ref": "#/definitions/v1GitConnection"
        }
      }
    },
    "v1ConnectionType": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Connection name"
        },
        "description": {
          "type": "string",
          "title": "Optional connection description"
        },
        "tags": {
          "type": "string",
          "title": "Optional connection tags"
        },
        "kind": {
          "$ref": "#/definitions/v1ConnectionKind",
          "title": "Connection kind"
        },
        "schema": {
          "type": "object",
          "title": "The connection schema should be a valid ConnectionSchema"
        },
        "secret": {
          "$ref": "#/definitions/v1ConnectionResource",
          "title": "Secret resource schema"
        },
        "configMap": {
          "$ref": "#/definitions/v1ConnectionResource",
          "title": "ConfigMap resource schema"
        },
        "env": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "title": "Environment variables"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Optional Metadata annotations to pass to k8s"
        }
      }
    },
    "v1Container": {
      "type": "object",
      "title": "Placeholder for Container"
    },
    "v1Credentials": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "title": "User username or email"
        },
        "password": {
          "type": "string",
          "title": "User password"
        }
      },
      "title": "Login"
    },
    "v1CronSchedule": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of schedule, should be equal to \"cron\"",
          "default": "cron"
        },
        "startAt": {
          "type": "string",
          "format": "date-time",
          "title": "Whan to start this cron schedule"
        },
        "endAt": {
          "type": "string",
          "format": "date-time",
          "title": "Whan to end this cron schedule"
        },
        "maxRuns": {
          "type": "integer",
          "format": "int32",
          "title": "Limit to stop executing this schedule"
        },
        "cron": {
          "type": "string",
          "title": "Cron definition, e.g. 0 1 * * *"
        },
        "dependsOnPast": {
          "type": "boolean",
          "title": "A flag to set a dependency on past executions"
        }
      },
      "title": "Cron schedule specification"
    },
    "v1Dag": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Optional component kind, should be equal to 'dag'",
          "default": "dag"
        },
        "operations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Operation"
          },
          "title": "Ops used in the graph"
        },
        "components": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Component"
          },
          "title": "Optional component refrences"
        },
        "concurrency": {
          "type": "integer",
          "format": "int32",
          "title": "Optional component description"
        },
        "earlyStopping": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "title": "Optional component tags"
        },
        "environment": {
          "$ref": "#/definitions/v1Environment",
          "title": "Optional environment section"
        },
        "connections": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional connections section"
        },
        "volumes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Volume"
          },
          "description": "Volumes is a list of volumes that can be mounted."
        }
      },
      "title": "Dag specificaiton"
    },
    "v1DagRef": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of reference, should be equal to \"dag_ref\"",
          "default": "dag_ref"
        },
        "name": {
          "type": "string",
          "title": "Value"
        }
      },
      "title": "Dag reference specification"
    },
    "v1Dashboard": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "title": "UUID"
        },
        "name": {
          "type": "string",
          "title": "Optional name"
        },
        "description": {
          "type": "string",
          "title": "Optional description"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional tags of this entity"
        },
        "live_state": {
          "type": "integer",
          "format": "int32",
          "title": "Current live state"
        },
        "spec": {
          "$ref": "#/definitions/v1DashboardSpec",
          "title": "Optional dashboard specification"
        },
        "org_level": {
          "type": "boolean",
          "title": "Optional dashboard level"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional time when the entity was created"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional last time the entity was updated"
        }
      },
      "title": "Dashboard specification"
    },
    "v1DashboardSpec": {
      "type": "object",
      "properties": {
        "sections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1SectionSpec"
          },
          "title": "Section Spec"
        },
        "xaxis": {
          "type": "string",
          "title": "xaxis"
        },
        "smoothing": {
          "type": "integer",
          "format": "int32",
          "title": "Smoothing"
        },
        "ignore_outliers": {
          "type": "boolean",
          "title": "Ignore outliers"
        },
        "sample_size": {
          "type": "integer",
          "format": "int32",
          "title": "Sample size"
        }
      },
      "title": "Dashboard spec definition"
    },
    "v1DaskJob": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Optional component kind, should be equal to 'daskjob'",
          "default": "daskjob"
        },
        "job": {
          "$ref": "#/definitions/v1DaskReplica",
          "title": "Job pod specification to execute"
        },
        "worker": {
          "$ref": "#/definitions/v1DaskReplica",
          "title": "Worker pod specification"
        },
        "scheduler": {
          "$ref": "#/definitions/v1DaskReplica",
          "title": "Scheduler pod specification"
        }
      },
      "title": "Dask specification"
    },
    "v1DaskReplica": {
      "type": "object",
      "properties": {
        "replicas": {
          "type": "integer",
          "format": "int32",
          "title": "Number of replicas"
        },
        "environment": {
          "$ref": "#/definitions/v1Environment",
          "title": "Optional environment section"
        },
        "connections": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional connections section"
        },
        "volumes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Volume"
          },
          "title": "Optional connections section"
        },
        "init": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Init"
          },
          "title": "Optional init connections section"
        },
        "sidecars": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Container"
          },
          "title": "Optional sidecars section"
        },
        "container": {
          "$ref": "#/definitions/v1Container",
          "title": "Optional container to run"
        }
      },
      "title": "Dask replica definition"
    },
    "v1DateTimeSchedule": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of schedule, should be equal to \"datetime\"",
          "default": "datetime"
        },
        "startAt": {
          "type": "string",
          "format": "date-time",
          "title": "Whan to start this cron schedule"
        }
      },
      "title": "DateTime schedule specification"
    },
    "v1DiffStoppingPolicy": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of this stopping policy, should be equal to \"average\""
        },
        "percent": {
          "type": "number",
          "format": "float",
          "title": "The diff factor, if not given than a zero tolerance policy is applied"
        },
        "evaluationInterval": {
          "type": "integer",
          "format": "int32",
          "description": "Interval/Frequency for applying the policy."
        },
        "minInterval": {
          "type": "integer",
          "format": "int32",
          "title": "Min interval (e.g steps) before starting the process"
        },
        "minSamples": {
          "type": "integer",
          "format": "int32",
          "title": "Min samples runs succeeded before starting the process"
        }
      },
      "description": "Early stopping with diff factor stopping, this policy computes checks runs against the best run\nand stops those whose performance is worse than the best by the factor defined by the user."
    },
    "v1DockerfileType": {
      "type": "object",
      "properties": {
        "image": {
          "type": "string",
          "title": "Docker image to use as a base"
        },
        "env": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "An optional list of tuples(key, value) for defining env vars, translate to an ENV statements"
        },
        "path": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "An optional list of strings for exporting paths, translate to a PATH statements"
        },
        "copy": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "title": "An optional list of strings or tuples for copying paths, translate to a COPY statements, if string is passed the path is copy to the workdir"
        },
        "post_run_copy": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "title": "An optional list of strings or tuples for copying paths post run commands to leverage the cache, translate to a COPY statements, if string is passed the path is copy to the workdir"
        },
        "run": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "An optional list of strings for executing Run commands, translate to a RUN statements"
        },
        "langEnv": {
          "type": "string",
          "title": "An optional string defining a language, e.g. en_US.UTF-8"
        },
        "uid": {
          "type": "integer",
          "format": "int32",
          "title": "A uid to use when creating the docker image"
        },
        "gid": {
          "type": "integer",
          "format": "int32",
          "title": "A gid to use when creating the docker image"
        },
        "username": {
          "type": "integer",
          "format": "int32",
          "title": "Optional username value to use, default to \"polyaxon\""
        },
        "filename": {
          "type": "string",
          "title": "A filename to give to the generated dockerfile"
        },
        "workdir": {
          "type": "string",
          "title": "A work dir to copy code to, default to /code"
        },
        "workdirPath": {
          "type": "string",
          "title": "An optional workdir path"
        },
        "shell": {
          "type": "string",
          "title": "An optional shell type, defaults to \"/bin/bash\""
        }
      },
      "title": "Dockerfile type specification"
    },
    "v1EarlyStopping": {
      "type": "object",
      "properties": {
        "median": {
          "$ref": "#/definitions/v1MedianStoppingPolicy"
        },
        "diff": {
          "$ref": "#/definitions/v1DiffStoppingPolicy"
        },
        "truncation": {
          "$ref": "#/definitions/v1TruncationStoppingPolicy"
        },
        "metric": {
          "$ref": "#/definitions/v1MetricEarlyStopping"
        },
        "failure": {
          "$ref": "#/definitions/v1FailureEarlyStopping"
        }
      },
      "title": "All Schemas message"
    },
    "v1EntitiesTags": {
      "type": "object",
      "properties": {
        "uuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1EntitiesTransfer": {
      "type": "object",
      "properties": {
        "uuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "project": {
          "type": "string"
        }
      }
    },
    "v1EntityNotificationBody": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "title": "Na,espace"
        },
        "owner": {
          "type": "string",
          "title": "Owner of the namespace"
        },
        "project": {
          "type": "string",
          "title": "Project where the run will be assigned"
        },
        "uuid": {
          "type": "string",
          "title": "Uuid identifier of the entity"
        },
        "name": {
          "type": "string",
          "title": "Optional name of the entity"
        },
        "condition": {
          "$ref": "#/definitions/v1StatusCondition",
          "title": "Status condition"
        },
        "connections": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Connections to notify"
        }
      },
      "title": "Request data to create/update entity status"
    },
    "v1EntityStageBodyRequest": {
      "type": "object",
      "properties": {
        "owner": {
          "type": "string",
          "title": "Owner of the namespace"
        },
        "entity": {
          "type": "string",
          "title": "Entity namespace"
        },
        "kind": {
          "type": "string",
          "title": "Optional kind, only required for an version entity"
        },
        "name": {
          "type": "string",
          "title": "Name of the entity to apply the stage to"
        },
        "condition": {
          "$ref": "#/definitions/v1StageCondition",
          "title": "Stage to set"
        }
      },
      "title": "Request data to create/update entity stage"
    },
    "v1EntityStatusBodyRequest": {
      "type": "object",
      "properties": {
        "owner": {
          "type": "string",
          "title": "Owner of the namespace"
        },
        "project": {
          "type": "string",
          "title": "Project where the run will be assigned"
        },
        "uuid": {
          "type": "string",
          "title": "Uuid identifier of the entity"
        },
        "condition": {
          "$ref": "#/definitions/v1StatusCondition",
          "title": "Status to set"
        },
        "force": {
          "type": "boolean",
          "title": "Force flag"
        }
      },
      "title": "Request data to create/update entity status"
    },
    "v1Environment": {
      "type": "object",
      "properties": {
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Optional Metadata labels to pass to k8s"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Optional Metadata annotations to pass to k8s"
        },
        "nodeSelector": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Optional NodeSelector is a selector which must be true for the pod to fit on a node.\nSelector which must match a node's labels for the pod to be scheduled on that node.\nMore info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/"
        },
        "affinity": {
          "$ref": "#/definitions/v1Affinity",
          "description": "Optional Affinity sets the scheduling constraints."
        },
        "tolerations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Toleration"
          },
          "description": "Optional Tolerations to apply."
        },
        "nodeName": {
          "type": "string",
          "description": "Optional NodeName is a request to schedule this pod onto a specific node. If it is non-empty,\nthe scheduler simply schedules this pod onto that node, assuming that it fits resource\nrequirements."
        },
        "serviceAccountName": {
          "type": "string",
          "title": "Optional service account name to use for this run"
        },
        "hostAliases": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1HostAlias"
          },
          "description": "Optional HostAliases is an optional list of hosts and IPs that will be injected into the pod spec."
        },
        "securityContext": {
          "$ref": "#/definitions/v1PodSecurityContext",
          "description": "PodSecurityContext holds pod-level security attributes and common container settings.\nSome fields are also present in container.securityContext.  Field values of\ncontainer.securityContext take precedence over field values of PodSecurityContext."
        },
        "imagePullSecrets": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional image pull secrets to use for this run\nImagePullSecrets is a list of references to secrets in the same namespace to use for pulling any images\nin pods that reference this ServiceAccount. ImagePullSecrets are distinct from Secrets because Secrets\ncan be mounted in the pod, but ImagePullSecrets are only accessed by the kubelet.\nMore info: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod"
        },
        "hostNetwork": {
          "type": "boolean",
          "description": "Host networking requested for this workflow pod. Default to false."
        },
        "hostPID": {
          "type": "string",
          "description": "Use the host's pid namespace. Default to false."
        },
        "dnsPolicy": {
          "type": "string",
          "description": "Set DNS policy for the pod.\nDefaults to \"ClusterFirst\".\nValid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'.\nDNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy.\nTo have DNS options set along with hostNetwork, you have to specify DNS policy\nexplicitly to 'ClusterFirstWithHostNet'."
        },
        "dnsConfig": {
          "$ref": "#/definitions/v1PodDNSConfig",
          "description": "PodDNSConfig defines the DNS parameters of a pod in addition to\nthose generated from DNSPolicy."
        },
        "schedulerName": {
          "type": "string",
          "title": "If specified, the pod will be dispatched by specified scheduler.\nOr it will be dispatched by workflow scope scheduler if specified.\nIf neither specified, the pod will be dispatched by default scheduler.\n+optional"
        },
        "priorityClassName": {
          "type": "string",
          "description": "If specified, indicates the pod's priority. \"system-node-critical\" and\n\"system-cluster-critical\" are two special keywords which indicate the\nhighest priorities with the former being the highest priority. Any other\nname must be defined by creating a PriorityClass object with that name.\nIf not specified, the pod priority will be default or zero if there is no\ndefault."
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "The priority value. Various system components use this field to find the\npriority of the pod. When Priority Admission Controller is enabled, it\nprevents users from setting this field. The admission controller populates\nthis field from PriorityClassName.\nThe higher the value, the higher the priority."
        },
        "restartPolicy": {
          "type": "string",
          "title": "A valid restart policy"
        }
      },
      "title": "Environment specification"
    },
    "v1Event": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "title": "Optional time when the entity was created"
        },
        "step": {
          "type": "integer",
          "format": "int32",
          "description": "Global step of the event."
        },
        "metric": {
          "type": "number",
          "format": "float"
        },
        "image": {
          "$ref": "#/definitions/v1EventImage"
        },
        "histogram": {
          "$ref": "#/definitions/v1EventHistogram"
        },
        "audio": {
          "$ref": "#/definitions/v1EventAudio"
        },
        "video": {
          "$ref": "#/definitions/v1EventVideo"
        },
        "html": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "chart": {
          "$ref": "#/definitions/v1EventChart"
        },
        "model": {
          "$ref": "#/definitions/v1EventModel"
        },
        "artifact": {
          "$ref": "#/definitions/v1EventArtifact"
        },
        "dataframe": {
          "$ref": "#/definitions/v1EventDataframe"
        },
        "curve": {
          "$ref": "#/definitions/v1EventCurve"
        },
        "confusion": {
          "$ref": "#/definitions/v1EventConfusionMatrix"
        },
        "span": {
          "$ref": "#/definitions/v1EventSpan"
        }
      },
      "title": "Event spec definition"
    },
    "v1EventArtifact": {
      "type": "object",
      "properties": {
        "kind": {
          "$ref": "#/definitions/v1ArtifactKind",
          "title": "Artifact kind"
        },
        "path": {
          "type": "string",
          "title": "Filepath"
        }
      },
      "title": "Artifact spec definition"
    },
    "v1EventAudio": {
      "type": "object",
      "properties": {
        "sample_rate": {
          "type": "number",
          "format": "float",
          "description": "Sample rate of the audio in Hz."
        },
        "num_channels": {
          "type": "integer",
          "format": "int32",
          "description": "Number of channels of audio."
        },
        "length_frames": {
          "type": "integer",
          "format": "int32",
          "description": "Length of the audio in frames (samples per channel)."
        },
        "content_type": {
          "type": "string",
          "title": "Content type of the audio"
        },
        "path": {
          "type": "string",
          "title": "/ Filepath"
        }
      },
      "title": "Audio spec definition"
    },
    "v1EventChart": {
      "type": "object",
      "properties": {
        "kind": {
          "$ref": "#/definitions/v1EventChartKind",
          "title": "Chart kind"
        },
        "figure": {
          "type": "object",
          "title": "Figure json object"
        }
      },
      "title": "Chart spec definition"
    },
    "v1EventChartKind": {
      "type": "string",
      "enum": [
        "plotly",
        "bokeh",
        "vega"
      ],
      "default": "plotly",
      "description": "- plotly: Plotly chart\n - bokeh: Bokeh chart\n - vega: Vega chart",
      "title": "Chart kind"
    },
    "v1EventConfusionMatrix": {
      "type": "object",
      "properties": {
        "x": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "title": "X"
        },
        "y": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "title": "Y"
        },
        "z": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "title": "Z"
        }
      },
      "title": "Cofusion matrix spec definition"
    },
    "v1EventCurve": {
      "type": "object",
      "properties": {
        "kind": {
          "$ref": "#/definitions/v1EventCurveKind",
          "title": "Curve kind"
        },
        "x": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          },
          "title": "X"
        },
        "y": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          },
          "title": "Y"
        },
        "annotation": {
          "type": "string",
          "title": "Annotation"
        }
      },
      "title": "Custom Curve spec definition"
    },
    "v1EventCurveKind": {
      "type": "string",
      "enum": [
        "roc",
        "pr",
        "custom"
      ],
      "default": "roc",
      "description": "- roc: ROC curve\n - pr: Precision Recall curve\n - custom: Custom curve",
      "title": "Curve kind"
    },
    "v1EventDataframe": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "title": "Filepath"
        },
        "content_type": {
          "type": "string",
          "title": "Format"
        }
      },
      "title": "Dataframe spec definition"
    },
    "v1EventHistogram": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "counts": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "title": "Histogram spec definition"
    },
    "v1EventImage": {
      "type": "object",
      "properties": {
        "height": {
          "type": "integer",
          "format": "int32",
          "description": "Height of the image."
        },
        "width": {
          "type": "integer",
          "format": "int32",
          "description": "Width of the image."
        },
        "colorspace": {
          "type": "integer",
          "format": "int32",
          "title": "Valid colorspace values are\n  1 - grayscale\n  2 - grayscale + alpha\n  3 - RGB\n  4 - RGBA\n  5 - DIGITAL_YUV\n  6 - BGRA"
        },
        "path": {
          "type": "string",
          "title": "Filepath"
        }
      },
      "title": "Image spec definition"
    },
    "v1EventKind": {
      "type": "string",
      "enum": [
        "run_status_created",
        "run_status_resuming",
        "run_status_compiled",
        "run_status_on_schedule",
        "run_status_queued",
        "run_status_scheduled",
        "run_status_starting",
        "run_status_running",
        "run_status_processing",
        "run_status_stopping",
        "run_status_failed",
        "run_status_stopped",
        "run_status_succeeded",
        "run_status_skipped",
        "run_status_warning",
        "run_status_unschedulable",
        "run_status_upstream_failed",
        "run_status_retrying",
        "run_status_unknown",
        "run_status_done",
        "run_approved_actor",
        "run_invalidated_actor",
        "run_new_artifacts",
        "connection_git_commit",
        "connection_dataset_version",
        "connection_registry_image",
        "alert_info",
        "alert_warning",
        "alert_critical",
        "model_version_new_metric",
        "project_custom_event",
        "org_custom_event"
      ],
      "default": "run_status_created"
    },
    "v1EventModel": {
      "type": "object",
      "properties": {
        "framework": {
          "type": "string",
          "title": "Model framwork"
        },
        "path": {
          "type": "string",
          "title": "Filepath"
        },
        "spec": {
          "type": "object",
          "title": "Model spec (a dictionnary defnining the requirement for the model)"
        }
      },
      "title": "Model spec definition"
    },
    "v1EventSpan": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "title": "UUID"
        },
        "name": {
          "type": "string",
          "title": "Name"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Tags"
        },
        "started_at": {
          "type": "string",
          "format": "date-time",
          "title": "Start time"
        },
        "finished_at": {
          "type": "string",
          "format": "date-time",
          "title": "End time"
        },
        "status": {
          "$ref": "#/definitions/v1Statuses",
          "title": "Status"
        },
        "status_conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1StatusCondition"
          },
          "title": "Status conditions"
        },
        "metadata": {
          "type": "object",
          "title": "Metadata"
        },
        "inputs": {
          "type": "object",
          "title": "Inputs"
        },
        "outputs": {
          "type": "object",
          "title": "Outputs"
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1EventSpan"
          },
          "title": "Child events"
        },
        "kind": {
          "$ref": "#/definitions/v1EventSpanKind",
          "title": "Span kind"
        }
      },
      "title": "Trace/Span spec definition"
    },
    "v1EventSpanKind": {
      "type": "string",
      "enum": [
        "llm",
        "chain",
        "agent",
        "tool",
        "embedding",
        "retriever"
      ],
      "default": "llm",
      "title": "Curve kind"
    },
    "v1EventTrigger": {
      "type": "object",
      "properties": {
        "kinds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1EventKind"
          },
          "title": "The event kinds to subscribe to for the current reference"
        },
        "ref": {
          "type": "string",
          "title": "Ref corresponds to a reference of an object"
        }
      },
      "title": "Event definition"
    },
    "v1EventType": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of the event"
        },
        "kind": {
          "$ref": "#/definitions/v1ArtifactKind",
          "title": "Type of the event"
        }
      },
      "title": "Event type specification"
    },
    "v1EventVideo": {
      "type": "object",
      "properties": {
        "height": {
          "type": "integer",
          "format": "int32",
          "description": "Height of the video."
        },
        "width": {
          "type": "integer",
          "format": "int32",
          "description": "Width of the video."
        },
        "colorspace": {
          "type": "integer",
          "format": "int32",
          "title": "Valid colorspace values are\n  1 - grayscale\n  2 - grayscale + alpha\n  3 - RGB\n  4 - RGBA\n  5 - DIGITAL_YUV\n  6 - BGRA"
        },
        "path": {
          "type": "string",
          "title": "Filepath"
        },
        "content_type": {
          "type": "string",
          "title": "Content type of the video"
        }
      },
      "title": "Video spec definition"
    },
    "v1EventsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "title": "Events data"
        }
      },
      "title": "Events response definition"
    },
    "v1FailureEarlyStopping": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of this metric early stopping policy, should be equal to \"failure_early_stopping\"",
          "default": "failure_early_stopping"
        },
        "percent": {
          "type": "integer",
          "format": "int32",
          "description": "The percentage of failed runs, at each evaluation interval.\ne.g. 1 - 99."
        }
      },
      "description": "FailureEarlyStoppingSchema specification\nEarly stopping based on failure config.\nthis policy stops based on a percentage of\nfailed runs at every evaluation."
    },
    "v1FileType": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string",
          "title": "File content"
        },
        "filename": {
          "type": "string",
          "title": "A name to give to the generated file"
        },
        "chmod": {
          "type": "string",
          "title": "An optional permissions to apply to the file after creation, e.g +x"
        },
        "kind": {
          "type": "string",
          "title": "An optional Artifact kind to log the lineage information"
        }
      },
      "title": "File type specification"
    },
    "v1GcsType": {
      "type": "object",
      "properties": {
        "bucket": {
          "type": "string",
          "title": "Optional container"
        },
        "blob": {
          "type": "string",
          "title": "Optional storage_account"
        }
      },
      "title": "Wasb type specification"
    },
    "v1GitConnection": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "title": "Url"
        },
        "revision": {
          "type": "boolean",
          "title": "revision"
        },
        "flags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Additional command flag"
        }
      },
      "title": "Git connection schema validation connection"
    },
    "v1GitType": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "title": "Optional Url"
        },
        "revision": {
          "type": "string",
          "title": "Optional revision"
        },
        "flags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Addional command flag"
        }
      },
      "title": "Git type specification, url or a connection is required"
    },
    "v1GridSearch": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of matrix, should be equal to \"grid\"",
          "default": "grid"
        },
        "params": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          },
          "title": "Hyperparams/Space definition of params to traverse"
        },
        "numRuns": {
          "type": "integer",
          "format": "int32",
          "title": "Number of runs to generate and search"
        },
        "seed": {
          "type": "integer",
          "format": "int32",
          "title": "Seed for the random generator"
        },
        "concurrency": {
          "type": "integer",
          "format": "int32",
          "title": "Number of concurrent runs"
        },
        "earlyStopping": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "title": "A list of Early stopping objects, accpets both metric and failure early stopping mechanisms"
        }
      },
      "title": "Matrix based on grid/cartesian product generated search space"
    },
    "v1Hook": {
      "type": "object",
      "properties": {
        "hubRef": {
          "type": "string",
          "title": "Component name to use"
        },
        "connection": {
          "type": "string",
          "title": "Connection to use"
        },
        "trigger": {
          "$ref": "#/definitions/v1Statuses",
          "title": "Optional trigger policy, default done"
        },
        "conditions": {
          "type": "string",
          "title": "An optional template containing conditions to check before starting the run"
        },
        "params": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1Param"
          },
          "title": "Optional dict of params"
        },
        "presets": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional preset to use for running this operation"
        },
        "queue": {
          "type": "string",
          "title": "Optional queue to use for scheduling the hook"
        },
        "namespace": {
          "type": "string",
          "title": "Optional namespace to use, uses agent's namespace by default"
        },
        "disableDefaults": {
          "type": "boolean",
          "title": "Optional params context from the main operation"
        }
      },
      "title": "Hook definition"
    },
    "v1HostAlias": {
      "type": "object",
      "title": "Placeholder for HostAlias"
    },
    "v1HostConnection": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "title": "Url"
        },
        "insecure": {
          "type": "boolean",
          "title": "insecure"
        }
      },
      "title": "Host connection schema validation connection"
    },
    "v1HostPathConnection": {
      "type": "object",
      "properties": {
        "hostPath": {
          "type": "string",
          "title": "host path"
        },
        "mountPath": {
          "type": "string",
          "title": "Mount path"
        },
        "readOnly": {
          "type": "boolean",
          "title": "Read Only"
        },
        "kind": {
          "default": "host_path"
        }
      },
      "title": "Host path connection schema validation specification"
    },
    "v1HpChoice": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of hp, should be equal to \"choice\"",
          "default": "choice"
        },
        "value": {
          "type": "object",
          "title": "Value"
        }
      },
      "title": "HP Choice specification"
    },
    "v1HpDateRange": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of hp, should be equal to \"daterange\"",
          "default": "daterange"
        },
        "value": {
          "type": "object",
          "title": "Value"
        }
      },
      "title": "DateRange specification"
    },
    "v1HpDateTimeRange": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of hp, should be equal to \"datetimerange\"",
          "default": "datetimerange"
        },
        "value": {
          "type": "object",
          "title": "Value"
        }
      },
      "title": "DateTimeRange specification"
    },
    "v1HpGeomSpace": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of hp, should be equal to \"geomspace\"",
          "default": "geomspace"
        },
        "value": {
          "type": "object",
          "title": "Value"
        }
      },
      "title": "HP Geom Space specification"
    },
    "v1HpLinSpace": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of hp, should be equal to \"linspace\"",
          "default": "linspace"
        },
        "value": {
          "type": "object",
          "title": "Value"
        }
      },
      "title": "HP Linear Space specification"
    },
    "v1HpLogNormal": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of hp, should be equal to \"lognormal\"",
          "default": "lognormal"
        },
        "value": {
          "type": "object",
          "title": "Value"
        }
      },
      "title": "HP Log Normal Dist specification"
    },
    "v1HpLogSpace": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of hp, should be equal to \"logspace\"",
          "default": "logspace"
        },
        "value": {
          "type": "object",
          "title": "Value"
        }
      },
      "title": "HP Log Space specification"
    },
    "v1HpLogUniform": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of hp, should be equal to \"loguniform\"",
          "default": "loguniform"
        },
        "value": {
          "type": "object",
          "title": "Value"
        }
      },
      "title": "HP Log Uniform Dist specification"
    },
    "v1HpNormal": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of hp, should be equal to \"normal\"",
          "default": "normal"
        },
        "value": {
          "type": "object",
          "title": "Value"
        }
      },
      "title": "HP Normal Dist specification"
    },
    "v1HpPChoice": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of hp, should be equal to \"pchoice\"",
          "default": "pchoice"
        },
        "value": {
          "type": "object",
          "title": "Value"
        }
      },
      "title": "HP Probabilistic Choice specification"
    },
    "v1HpParams": {
      "type": "object",
      "properties": {
        "choice": {
          "$ref": "#/definitions/v1HpChoice"
        },
        "pchoice": {
          "$ref": "#/definitions/v1HpPChoice"
        },
        "range": {
          "$ref": "#/definitions/v1HpRange"
        },
        "linspace": {
          "$ref": "#/definitions/v1HpLinSpace"
        },
        "logspace": {
          "$ref": "#/definitions/v1HpLogSpace"
        },
        "geomspace": {
          "$ref": "#/definitions/v1HpGeomSpace"
        },
        "uniform": {
          "$ref": "#/definitions/v1HpUniform"
        },
        "quniform": {
          "$ref": "#/definitions/v1HpQUniform"
        },
        "loguniform": {
          "$ref": "#/definitions/v1HpLogUniform"
        },
        "qloguniform": {
          "$ref": "#/definitions/v1HpQLogUniform"
        },
        "normal": {
          "$ref": "#/definitions/v1HpNormal"
        },
        "qnormal": {
          "$ref": "#/definitions/v1HpQNormal"
        },
        "lognormal": {
          "$ref": "#/definitions/v1HpLogNormal"
        },
        "qlognormal": {
          "$ref": "#/definitions/v1HpQLogNormal"
        },
        "daterange": {
          "$ref": "#/definitions/v1HpDateRange"
        },
        "datetimerange": {
          "$ref": "#/definitions/v1HpDateTimeRange"
        }
      },
      "title": "Hp Matrix specification"
    },
    "v1HpQLogNormal": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of hp, should be equal to \"qlognormal\"",
          "default": "qlognormal"
        },
        "value": {
          "type": "object",
          "title": "Value"
        }
      },
      "title": "HP Quantized Log Normal Dist specification"
    },
    "v1HpQLogUniform": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of hp, should be equal to \"qloguniform\"",
          "default": "qloguniform"
        },
        "value": {
          "type": "object",
          "title": "Value"
        }
      },
      "title": "HP Quantized Log Uniform Dist specification"
    },
    "v1HpQNormal": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of hp, should be equal to \"qnormal\"",
          "default": "qnormal"
        },
        "value": {
          "type": "object",
          "title": "Value"
        }
      },
      "title": "HP Quantized Normal Dist specification"
    },
    "v1HpQUniform": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of hp, should be equal to \"quniform\"",
          "default": "quniform"
        },
        "value": {
          "type": "object",
          "title": "Value"
        }
      },
      "title": "HP Quantized Uniform Dist specification"
    },
    "v1HpRange": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of hp, should be equal to \"range\"",
          "default": "range"
        },
        "value": {
          "type": "object",
          "title": "Value"
        }
      },
      "title": "HP Range specification"
    },
    "v1HpUniform": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of hp, should be equal to \"uniform\"",
          "default": "uniform"
        },
        "value": {
          "type": "object",
          "title": "Value"
        }
      },
      "title": "HP Uniform Dist specification"
    },
    "v1HubRef": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of reference, should be equal to \"hub_ref\"",
          "default": "hub_ref"
        },
        "name": {
          "type": "string",
          "title": "Value"
        }
      },
      "title": "Hub reference specification"
    },
    "v1Hyperband": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of matrix, should be equal to \"hyperband\"",
          "default": "hyperband"
        },
        "params": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          },
          "title": "Hyperparams/Space definition of params to traverse"
        },
        "maxIterations": {
          "type": "integer",
          "format": "int32",
          "title": "Maximim number of iteration to produce new observations"
        },
        "eta": {
          "type": "integer",
          "format": "int32",
          "title": "Eta"
        },
        "resource": {
          "$ref": "#/definitions/v1OptimizationResource",
          "title": "Resource to optimize (should be an integer or a float)"
        },
        "metric": {
          "$ref": "#/definitions/v1OptimizationMetric",
          "title": "Metric to optimize during the iterations"
        },
        "resume": {
          "type": "boolean",
          "title": "A flag to resume or restart the selected runs"
        },
        "seed": {
          "type": "integer",
          "format": "int32",
          "title": "Seed for the random generator"
        },
        "concurrency": {
          "type": "integer",
          "format": "int32",
          "title": "Number of concurrent runs"
        },
        "tuner": {
          "$ref": "#/definitions/v1Tuner",
          "title": "Tuner reference (hubRef) to use"
        },
        "earlyStopping": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "title": "A list of Early stopping objects, accpets both metric and failure early stopping mechanisms"
        }
      },
      "title": "Matrix based on hyperband"
    },
    "v1Hyperopt": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of matrix, should be equal to \"hyperopt\"",
          "default": "hyperopt"
        },
        "algorithm": {
          "$ref": "#/definitions/v1HyperoptAlgorithms",
          "title": "Algorithm to use from the hyperopt library"
        },
        "params": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          },
          "title": "Hyperparams/Space definition of params to traverse"
        },
        "numRuns": {
          "type": "integer",
          "format": "int32",
          "title": "Number of runs to generate and search"
        },
        "maxIterations": {
          "type": "integer",
          "format": "int32",
          "title": "Maximum number of iteration to produce new observations"
        },
        "metric": {
          "$ref": "#/definitions/v1OptimizationMetric",
          "title": "Metric to optimize during the iterations"
        },
        "seed": {
          "type": "integer",
          "format": "int32",
          "title": "Seed for the random generator"
        },
        "concurrency": {
          "type": "integer",
          "format": "int32",
          "title": "Number of concurrent runs"
        },
        "tuner": {
          "$ref": "#/definitions/v1Tuner",
          "title": "Tuner reference (hubRef) to use"
        },
        "earlyStopping": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "title": "A list of Early stopping objects, accepts both metric and failure early stopping mechanisms"
        }
      },
      "title": "Matrix based on hyperopt"
    },
    "v1HyperoptAlgorithms": {
      "type": "string",
      "enum": [
        "tpe",
        "rand",
        "anneal"
      ],
      "default": "tpe",
      "description": "- tpe: tpe algorithm\n - rand: random algorithm\n - anneal: anneal algorithm",
      "title": "Hyperopt algorithms enum"
    },
    "v1IO": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name for the input/output"
        },
        "description": {
          "type": "string",
          "title": "Description for the input/output"
        },
        "type": {
          "type": "string",
          "title": "The type of the input/output"
        },
        "value": {
          "type": "object",
          "title": "The value of the input/output should be compatible with the type"
        },
        "isOptional": {
          "type": "boolean",
          "title": "A flag to tell if this input/output is optional"
        },
        "isList": {
          "type": "boolean",
          "title": "A flag to tell if this input/output is list"
        },
        "isFlag": {
          "type": "boolean",
          "title": "A flag to tell if this input/output is flag, only valid for bool type"
        },
        "argFormat": {
          "type": "string",
          "title": "An optional argFromat of the input/output to be used instead of passing the value as is"
        },
        "connection": {
          "type": "string",
          "title": "A flag to signal to Polyaxon that this io is used with a connection"
        },
        "toInit": {
          "type": "boolean",
          "title": "A flag to signal to Polyaxon that this io must be tranformed to an init container"
        },
        "toEnv": {
          "type": "string",
          "title": "A flag to signal to Polyaxon that this io must be tranformed to the environment variable passed"
        },
        "validation": {
          "$ref": "#/definitions/v1Validation",
          "title": "Optional validation for this input/output"
        },
        "delayValidation": {
          "type": "boolean",
          "title": "(Deprecated) A flag to tell if param validation for this input/output should be delayed"
        },
        "options": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "title": "(Deprecated) An optional field to provide possible values for validation"
        }
      },
      "title": "Inputs/Outputs specification"
    },
    "v1Init": {
      "type": "object",
      "properties": {
        "artifacts": {
          "$ref": "#/definitions/v1ArtifactsType",
          "title": "Artifacts initializer"
        },
        "paths": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "title": "Paths initializer"
        },
        "git": {
          "$ref": "#/definitions/v1GitType",
          "title": "Override for git connections"
        },
        "dockerfile": {
          "$ref": "#/definitions/v1DockerfileType",
          "title": "Schema of the dockerfile to init"
        },
        "file": {
          "$ref": "#/definitions/v1FileType",
          "title": "File initializer"
        },
        "tensorboard": {
          "$ref": "#/definitions/v1TensorboardType",
          "title": "Tensorboard initializer"
        },
        "lineageRef": {
          "type": "string",
          "title": "Lineage reference initializer"
        },
        "artifactRef": {
          "type": "string",
          "title": "Artifact version initializer"
        },
        "modelRef": {
          "type": "string",
          "title": "Model version initializer"
        },
        "connection": {
          "type": "string",
          "title": "Optional, connection to use with this initializer"
        },
        "path": {
          "type": "string",
          "title": "Optional context path, the path to mount to main the container"
        },
        "container": {
          "$ref": "#/definitions/v1Container",
          "title": "Container to override"
        }
      },
      "title": "Initializer specification"
    },
    "v1Installation": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "dist": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "hmac": {
          "type": "string"
        },
        "mode": {
          "type": "string"
        },
        "orgs": {
          "type": "boolean"
        },
        "singleUrl": {
          "type": "boolean"
        },
        "defaultStreamsUrl": {
          "type": "string"
        },
        "auth": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1IntervalSchedule": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of schedule, should be equal to \"interval\"",
          "default": "interval"
        },
        "startAt": {
          "type": "string",
          "format": "date-time",
          "title": "When to start this interval schedule"
        },
        "endAt": {
          "type": "string",
          "format": "date-time",
          "title": "Whan to end this interval schedule"
        },
        "maxRuns": {
          "type": "integer",
          "format": "int32",
          "title": "Limit to stop executing this schedule"
        },
        "frequency": {
          "type": "integer",
          "format": "int32",
          "title": "Frequency (timedelta) at which to execute the runs"
        },
        "dependsOnPast": {
          "type": "boolean",
          "title": "A flag to set a dependency on past executions"
        }
      },
      "title": "Interval schedule specification"
    },
    "v1Iterative": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of matrix, should be equal to \"iterative\"",
          "default": "iterative"
        },
        "params": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          },
          "title": "Hyperparam/Space definition of params to traverse"
        },
        "maxIterations": {
          "type": "integer",
          "format": "int32",
          "title": "Maximum number of iteration to produce new observations"
        },
        "seed": {
          "type": "integer",
          "format": "int32",
          "title": "Seed for the random generator"
        },
        "concurrency": {
          "type": "integer",
          "format": "int32",
          "title": "Number of concurrent runs"
        },
        "tuner": {
          "$ref": "#/definitions/v1Tuner",
          "title": "Tuner reference (hubRef) to use"
        },
        "earlyStopping": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "title": "A list of Early stopping objects, accepts both metric and failure early stopping mechanisms"
        }
      },
      "title": "Matrix based on a custom iterative algorithm (suggestions -> mapping -> reduce -> repeat)"
    },
    "v1Job": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Optional component kind, should be equal to 'job'",
          "default": "job"
        },
        "environment": {
          "$ref": "#/definitions/v1Environment",
          "title": "Optional environment section"
        },
        "connections": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional connections section"
        },
        "volumes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Volume"
          },
          "description": "Volumes is a list of volumes that can be mounted."
        },
        "init": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Init"
          },
          "title": "Optional init connections/containers section"
        },
        "sidecars": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Container"
          },
          "title": "Optional sidecars section"
        },
        "container": {
          "$ref": "#/definitions/v1Container",
          "title": "Optional container to run"
        }
      },
      "title": "Job specification"
    },
    "v1Join": {
      "type": "object",
      "properties": {
        "ref": {
          "type": "string",
          "title": "An optional ref to an already saved search"
        },
        "query": {
          "type": "string",
          "title": "The search query"
        },
        "sort": {
          "type": "string",
          "title": "The search sort"
        },
        "limit": {
          "type": "integer",
          "format": "int32",
          "title": "The search limit"
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "title": "The search offset"
        },
        "params": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1JoinParam"
          },
          "title": "The params mapping keys to the values to pull from the join"
        }
      },
      "title": "Join specification"
    },
    "v1JoinParam": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "title": "The value to pass, if no ref or search is passed then it corresponds to a literal value"
        },
        "connection": {
          "type": "string",
          "title": "A flag to signal to Polyaxon that this param is used with a connection"
        },
        "toInit": {
          "type": "boolean",
          "title": "A flag to signal to Polyaxon that this param must be tranformed to an init container"
        },
        "toEnv": {
          "type": "string",
          "title": "A flag to signal to Polyaxon that this param must be tranformed to the environment variable passed"
        },
        "contextOnly": {
          "type": "boolean",
          "title": "A flag to signal to Polyaxon that this param should not be validated against io"
        }
      },
      "title": "JoinParam specification"
    },
    "v1KFReplica": {
      "type": "object",
      "properties": {
        "replicas": {
          "type": "integer",
          "format": "int32",
          "title": "Number of replicas"
        },
        "environment": {
          "$ref": "#/definitions/v1Environment",
          "title": "Optional environment section"
        },
        "connections": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional connections section"
        },
        "volumes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Volume"
          },
          "title": "Optional connections section"
        },
        "init": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Init"
          },
          "title": "Optional init connections section"
        },
        "sidecars": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Container"
          },
          "title": "Optional sidecars section"
        },
        "container": {
          "$ref": "#/definitions/v1Container",
          "title": "Optional container to run"
        }
      },
      "title": "Distributed Replica specification"
    },
    "v1ListActivitiesResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "Count of the entities"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Activity"
          },
          "title": "List of all entities"
        },
        "previous": {
          "type": "string",
          "title": "Previous page"
        },
        "next": {
          "type": "string",
          "title": "Next page"
        }
      },
      "title": "Contains list of activities"
    },
    "v1ListAgentsResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "Count of the entities"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Agent"
          },
          "title": "List of all entities"
        },
        "previous": {
          "type": "string",
          "title": "Previous page"
        },
        "next": {
          "type": "string",
          "title": "Next page"
        }
      },
      "title": "Contains list of agents"
    },
    "v1ListBookmarksResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "Count of the entities"
        },
        "results": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "title": "List of all entities"
        },
        "previous": {
          "type": "string",
          "title": "Previous page"
        },
        "next": {
          "type": "string",
          "title": "Next page"
        }
      },
      "title": "Contains list of of bookmarks"
    },
    "v1ListConnectionsResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "Count of the entities"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ConnectionResponse"
          },
          "title": "List of all entities"
        },
        "previous": {
          "type": "string",
          "title": "Previous page"
        },
        "next": {
          "type": "string",
          "title": "Next page"
        }
      },
      "title": "Contains list of connections"
    },
    "v1ListDashboardsResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "Count of the entities"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Dashboard"
          },
          "title": "List of all entities"
        },
        "previous": {
          "type": "string",
          "title": "Previous page"
        },
        "next": {
          "type": "string",
          "title": "Next page"
        }
      },
      "title": "Contains list of dashboards"
    },
    "v1ListOrganizationMembersResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "Count of the entities"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1OrganizationMember"
          },
          "title": "List of all entities"
        },
        "previous": {
          "type": "string",
          "title": "Previous page"
        },
        "next": {
          "type": "string",
          "title": "Next page"
        }
      },
      "title": "Contains list of organization members"
    },
    "v1ListOrganizationsResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "Count of the entities"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Organization"
          },
          "title": "List of all entities"
        },
        "previous": {
          "type": "string",
          "title": "Previous page"
        },
        "next": {
          "type": "string",
          "title": "Next page"
        }
      },
      "title": "Contains list of organizations"
    },
    "v1ListPoliciesResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "Count of the entities"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Policy"
          },
          "title": "List of all entities"
        },
        "previous": {
          "type": "string",
          "title": "Previous page"
        },
        "next": {
          "type": "string",
          "title": "Next page"
        }
      },
      "title": "Contains list of policies"
    },
    "v1ListPresetsResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "Count of the entities"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Preset"
          },
          "title": "List of all entities"
        },
        "previous": {
          "type": "string",
          "title": "Previous page"
        },
        "next": {
          "type": "string",
          "title": "Next page"
        }
      },
      "title": "Contains list of scheduling presets"
    },
    "v1ListProjectVersionsResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "Count of the entities"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ProjectVersion"
          },
          "title": "List of all entities"
        },
        "previous": {
          "type": "string",
          "title": "Previous page"
        },
        "next": {
          "type": "string",
          "title": "Next page"
        }
      },
      "title": "Contains list of component hub"
    },
    "v1ListProjectsResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "Count of the entities"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Project"
          },
          "title": "List of all entities"
        },
        "previous": {
          "type": "string",
          "title": "Previous page"
        },
        "next": {
          "type": "string",
          "title": "Next page"
        }
      },
      "title": "Contains list of projects"
    },
    "v1ListQueuesResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "Count of the entities"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Queue"
          },
          "title": "List of all entities"
        },
        "previous": {
          "type": "string",
          "title": "Previous page"
        },
        "next": {
          "type": "string",
          "title": "Next page"
        }
      },
      "title": "Contains list of agents"
    },
    "v1ListRunArtifactsResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "Count of the entities"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1RunArtifact"
          },
          "title": "List of all entities"
        },
        "previous": {
          "type": "string",
          "title": "Previous page"
        },
        "next": {
          "type": "string",
          "title": "Next page"
        }
      },
      "title": "Contains list of run artifacts"
    },
    "v1ListRunConnectionsResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "Count of the entities"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1RunConnection"
          },
          "title": "List of all entities"
        },
        "previous": {
          "type": "string",
          "title": "Previous page"
        },
        "next": {
          "type": "string",
          "title": "Next page"
        }
      },
      "title": "Contains list of runs"
    },
    "v1ListRunEdgesResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "Count of the entities"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1RunEdge"
          },
          "title": "List of all entities"
        },
        "previous": {
          "type": "string",
          "title": "Previous page"
        },
        "next": {
          "type": "string",
          "title": "Next page"
        }
      },
      "title": "Contains list of run edges"
    },
    "v1ListRunsResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "Count of the entities"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Run"
          },
          "title": "List of all entities"
        },
        "previous": {
          "type": "string",
          "title": "Previous page"
        },
        "next": {
          "type": "string",
          "title": "Next page"
        }
      },
      "title": "Contains list of runs"
    },
    "v1ListSearchesResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "Count of the entities"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Search"
          },
          "title": "List of all entities"
        },
        "previous": {
          "type": "string",
          "title": "Previous page"
        },
        "next": {
          "type": "string",
          "title": "Next page"
        }
      },
      "title": "Contains list of searches"
    },
    "v1ListServiceAccountsResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "Count of the entities"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ServiceAccount"
          },
          "title": "List of all entities"
        },
        "previous": {
          "type": "string",
          "title": "Previous page"
        },
        "next": {
          "type": "string",
          "title": "Next page"
        }
      },
      "title": "Contains list of service accounts"
    },
    "v1ListTagsResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "Count of the entities"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Tag"
          },
          "title": "List of all entities"
        },
        "previous": {
          "type": "string",
          "title": "Previous page"
        },
        "next": {
          "type": "string",
          "title": "Next page"
        }
      },
      "title": "Contains list of tags"
    },
    "v1ListTeamMembersResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "Count of the entities"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1TeamMember"
          },
          "title": "List of all entities"
        },
        "previous": {
          "type": "string",
          "title": "Previous page"
        },
        "next": {
          "type": "string",
          "title": "Next page"
        }
      },
      "title": "Contains list of organization members"
    },
    "v1ListTeamsResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "Count of the entities"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Team"
          },
          "title": "List of all entities"
        },
        "previous": {
          "type": "string",
          "title": "Previous page"
        },
        "next": {
          "type": "string",
          "title": "Next page"
        }
      },
      "title": "Contains list of teams"
    },
    "v1ListTokenResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "Count of the entities"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Token"
          },
          "title": "List of all entities"
        },
        "previous": {
          "type": "string",
          "title": "Previous page"
        },
        "next": {
          "type": "string",
          "title": "Next page"
        }
      },
      "title": "Contains list of tokens"
    },
    "v1Log": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "title": "Optional time when the entity was created"
        },
        "node": {
          "type": "string",
          "title": "Node name"
        },
        "pod": {
          "type": "string",
          "title": "Pod name"
        },
        "container": {
          "type": "string",
          "title": "Container id"
        },
        "value": {
          "type": "string",
          "title": "Log line"
        }
      },
      "title": "Log spec definition"
    },
    "v1LogHandler": {
      "type": "object",
      "properties": {
        "dsn": {
          "type": "string"
        },
        "environment": {
          "type": "string"
        }
      }
    },
    "v1Logs": {
      "type": "object",
      "properties": {
        "logs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Log"
          },
          "title": "Log lines"
        },
        "last_time": {
          "type": "string",
          "format": "date-time",
          "title": "Last log time"
        },
        "last_file": {
          "type": "string",
          "title": "Last log file"
        },
        "files": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Log files"
        }
      },
      "title": "Logs"
    },
    "v1MPIJob": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Optional component kind, should be equal to 'mpijob'",
          "default": "mpijob"
        },
        "cleanPodPolicy": {
          "$ref": "#/definitions/v1CleanPodPolicy",
          "title": "optional clean pod policy section"
        },
        "schedulingPolicy": {
          "$ref": "#/definitions/v1SchedulingPolicy",
          "title": "optional scheduling policy section"
        },
        "slotsPerWorker": {
          "type": "integer",
          "format": "int32",
          "title": "Optional slots per worker"
        },
        "worker": {
          "$ref": "#/definitions/v1KFReplica",
          "title": "Worker replicas definition"
        },
        "launcher": {
          "$ref": "#/definitions/v1KFReplica",
          "title": "Launcher replicas definition"
        }
      },
      "title": "MPI Job specification"
    },
    "v1MXJob": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Optional component kind, should be equal to 'mxjob'",
          "default": "mxjob"
        },
        "cleanPodPolicy": {
          "$ref": "#/definitions/v1CleanPodPolicy",
          "title": "optional clean pod policy section"
        },
        "schedulingPolicy": {
          "$ref": "#/definitions/v1SchedulingPolicy",
          "title": "optional scheduling policy section"
        },
        "mode": {
          "$ref": "#/definitions/MXJobMode",
          "description": "MXJob mode \"MXTrain\" and \"MXTune\"."
        },
        "scheduler": {
          "$ref": "#/definitions/v1KFReplica",
          "title": "Scheduler replicas definition"
        },
        "server": {
          "$ref": "#/definitions/v1KFReplica",
          "title": "Server replicas definition"
        },
        "worker": {
          "$ref": "#/definitions/v1KFReplica",
          "title": "Worker replicas definition"
        },
        "tuner_tracker": {
          "$ref": "#/definitions/v1KFReplica",
          "title": "TunerTracker replicas definition"
        },
        "tuner_server": {
          "$ref": "#/definitions/v1KFReplica",
          "title": "TunerServer replicas definition"
        },
        "tuner": {
          "$ref": "#/definitions/v1KFReplica",
          "title": "Tuner replicas definition"
        }
      },
      "title": "MXNet Job specification"
    },
    "v1ManagedBy": {
      "type": "string",
      "enum": [
        "client",
        "cli",
        "agent"
      ],
      "default": "client"
    },
    "v1Mapping": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of matrix, should be equal to \"mapping\"",
          "default": "mapping"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "title": "The mapping values"
        },
        "concurrency": {
          "type": "integer",
          "format": "int32",
          "title": "Number of concurrent runs"
        },
        "earlyStopping": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "title": "A list of Early stopping objects, accpets both metric and failure early stopping mechanisms"
        }
      },
      "title": "Matrix based on map/array either specified manually by the user or passed from another step"
    },
    "v1Matrix": {
      "type": "object",
      "properties": {
        "random": {
          "$ref": "#/definitions/v1RandomSearch"
        },
        "grid": {
          "$ref": "#/definitions/v1GridSearch"
        },
        "hyperband": {
          "$ref": "#/definitions/v1Hyperband"
        },
        "bayes": {
          "$ref": "#/definitions/v1Bayes"
        },
        "hyperopt": {
          "$ref": "#/definitions/v1Hyperopt"
        },
        "iterative": {
          "$ref": "#/definitions/v1Iterative"
        },
        "mapping": {
          "$ref": "#/definitions/v1Mapping"
        }
      },
      "title": "All Schemas message"
    },
    "v1MatrixKind": {
      "type": "string",
      "enum": [
        "random",
        "grid",
        "hyperband",
        "bayes",
        "hyperopt",
        "iterative",
        "mapping"
      ],
      "default": "random"
    },
    "v1MedianStoppingPolicy": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of this stopping policy, should be equal to \"median\"",
          "default": "median"
        },
        "evaluationInterval": {
          "type": "integer",
          "format": "int32",
          "description": "Interval/Frequency for applying the policy."
        },
        "minInterval": {
          "type": "integer",
          "format": "int32",
          "title": "Min interval (e.g steps) before starting the process"
        },
        "minSamples": {
          "type": "integer",
          "format": "int32",
          "title": "Min samples runs succeeded before starting the process"
        }
      },
      "description": "Early stopping with median stopping, this policy computes running medians across\nall runs and stops those whose best performance is worse than the median\nof the running runs."
    },
    "v1MetricEarlyStopping": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of this metric early stopping policy, should be equal to \"metric_early_stopping\"",
          "default": "metric_early_stopping"
        },
        "metric": {
          "type": "string",
          "description": "Metric name to use for early stopping."
        },
        "value": {
          "type": "string",
          "description": "Metric value to use for the condition."
        },
        "optimization": {
          "$ref": "#/definitions/v1Optimization",
          "description": "Optimization to do: maximize or minimize."
        },
        "policy": {
          "type": "object",
          "title": "Policy to use, should be one of the stopping policies:\nMedianStoppingPolicy, AverageStoppingPolicy, TruncationStoppingPolicy"
        }
      },
      "description": "MetricEarlyStoppingSchema specification\nEarly stopping based on metric config."
    },
    "v1MultiEventsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "title": "Events data"
        }
      },
      "title": "Multi Run Events response definition"
    },
    "v1Notification": {
      "type": "object",
      "properties": {
        "connections": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Connections to use for notification"
        },
        "trigger": {
          "$ref": "#/definitions/v1Statuses",
          "title": "Optional trigger policy, default done"
        }
      },
      "title": "Notification message"
    },
    "v1Operation": {
      "type": "object",
      "properties": {
        "version": {
          "type": "number",
          "format": "float",
          "title": "Spec version"
        },
        "kind": {
          "type": "string",
          "title": "Optional component kind, should be equal to 'operation'"
        },
        "name": {
          "type": "string",
          "title": "Optional component name override, should a valid slug"
        },
        "description": {
          "type": "string",
          "title": "Optional component description override"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional component tags override"
        },
        "presets": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional list of presets to use for running this operation"
        },
        "queue": {
          "type": "string",
          "title": "Optional queue to use for running this operation"
        },
        "cache": {
          "$ref": "#/definitions/v1Cache",
          "title": "Optional flag to disable cache validation and force run this operation"
        },
        "namespace": {
          "type": "string",
          "title": "Optional namespace to use, uses agent's namespace by default"
        },
        "termination": {
          "$ref": "#/definitions/v1Termination",
          "title": "optional termination section"
        },
        "plugins": {
          "$ref": "#/definitions/v1Plugins",
          "title": "Optional plugins to enable"
        },
        "schedule": {
          "type": "object",
          "title": "Optional schedule section, must be a valid Schedule option (Cron/Interval/Repeatable/ExactTime)"
        },
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1EventTrigger"
          },
          "title": "Optional events section, must be a valid List of EventTrigger option (Run/Git/Alert/Webhook/Dataset)"
        },
        "hooks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Hook"
          },
          "title": "Optional hooks section"
        },
        "dependencies": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional graph dependencies of this op"
        },
        "trigger": {
          "$ref": "#/definitions/v1TriggerPolicy",
          "title": "Optional trigger policy"
        },
        "conditions": {
          "type": "string",
          "title": "An optional template containing conditions to check before starting the run"
        },
        "skipOnUpstreamSkip": {
          "type": "boolean",
          "title": "Optional flag to skip this run if upstream was skipped"
        },
        "matrix": {
          "type": "object",
          "title": "Optional matrix section, must be a valid matrix option (Random/Grid/BO/Hyperband/Hyperopt/Mapping/Iterative)"
        },
        "joins": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1Join"
          },
          "title": "Optional dict of joins"
        },
        "params": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1Param"
          },
          "title": "Optional dict of params"
        },
        "runPatch": {
          "type": "object",
          "title": "Optional a run section to override the content of the run in the template\nshould be one of: Job/Service/Ray/Kubeflow/Dask/Dag"
        },
        "patchStrategy": {
          "$ref": "#/definitions/v1PatchStrategy",
          "title": "Optional patch strategy, default post_merge"
        },
        "isPreset": {
          "type": "boolean",
          "title": "Optional flag to mark this specification as preset"
        },
        "isApproved": {
          "type": "boolean",
          "title": "Optional flag to mark this specification requires approval before running"
        },
        "template": {
          "$ref": "#/definitions/v1Template",
          "title": "Optional to mark this specification as template with instructions"
        },
        "build": {
          "$ref": "#/definitions/v1Build",
          "title": "Optional build process"
        },
        "cost": {
          "type": "number",
          "format": "float",
          "title": "Optional field to assign cost to this Component"
        },
        "pathRef": {
          "type": "string"
        },
        "hubRef": {
          "type": "string"
        },
        "dagRef": {
          "type": "string"
        },
        "urlRef": {
          "type": "string"
        },
        "component": {
          "$ref": "#/definitions/v1Component"
        }
      },
      "title": "Operation specification"
    },
    "v1OperationBody": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string",
          "title": "The Operation body content as dump string"
        },
        "is_managed": {
          "type": "boolean",
          "title": "Optional, if the run is managed, true by default, this flag should be false if starting a non-managed run"
        },
        "managed_by": {
          "$ref": "#/definitions/v1ManagedBy",
          "title": "Optional flag of the managing service"
        },
        "pending": {
          "$ref": "#/definitions/v1RunPending",
          "title": "Optional, if the run is approved, true by default, this flag should be false if a run requires human validation"
        },
        "name": {
          "type": "string",
          "title": "Optional"
        },
        "description": {
          "type": "string",
          "title": "Optional"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional"
        },
        "meta_info": {
          "type": "object",
          "title": "Meta"
        }
      },
      "title": "Operation creation"
    },
    "v1Optimization": {
      "type": "string",
      "enum": [
        "maximize",
        "minimize"
      ],
      "default": "maximize",
      "description": "- maximize: Minimize a metric\n - minimize: Minimize a metric",
      "title": "Optimization enum for metrics"
    },
    "v1OptimizationMetric": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of the metric to optimize"
        },
        "optimization": {
          "$ref": "#/definitions/v1Optimization",
          "title": "Optimization to use fot the metric"
        }
      },
      "title": "OptimizationMetric specification"
    },
    "v1OptimizationResource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of the resource to allocate"
        },
        "type": {
          "$ref": "#/definitions/v1ResourceType",
          "title": "Type to use fot the resource"
        }
      },
      "title": "OptimizationResource specification"
    },
    "v1Organization": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string",
          "title": "User"
        },
        "user_email": {
          "type": "string",
          "title": "Read-only User email"
        },
        "name": {
          "type": "string",
          "title": "Name"
        },
        "is_public": {
          "type": "boolean",
          "title": "Optional flag to tell if this organization is public"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional time when the entity was created"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional last time the entity was updated"
        },
        "support_revoke_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional time to revoke support access"
        },
        "expiration": {
          "type": "integer",
          "format": "int32",
          "title": "Optional expiration for support"
        },
        "role": {
          "type": "string",
          "title": "Current user's role in this org"
        },
        "queue": {
          "type": "string",
          "title": "Default queue"
        },
        "default_presets": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Default presets"
        },
        "default_presets_ordered": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Default presets ordered"
        },
        "is_cloud_viewable": {
          "type": "boolean",
          "title": "Setting to enable viewable metadata on cloud"
        },
        "archived_deletion_interval": {
          "type": "integer",
          "format": "int32",
          "title": "Setting to configure default archived deletion interval"
        },
        "auth": {
          "type": "object",
          "title": "Auth Settings"
        },
        "plan": {
          "type": "object",
          "title": "Plan settings"
        },
        "usage": {
          "type": "object",
          "title": "Usage info"
        }
      },
      "title": "Organization specification"
    },
    "v1OrganizationMember": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string",
          "title": "User"
        },
        "user_email": {
          "type": "string",
          "title": "Read-only User email"
        },
        "role": {
          "type": "string",
          "title": "Role"
        },
        "kind": {
          "type": "string",
          "title": "Kind"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional time when the entity was created"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional last time the entity was updated"
        }
      },
      "title": "Organization member specification"
    },
    "v1PaddleElasticPolic": {
      "type": "object",
      "properties": {
        "minReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "maxReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "maxRestarts": {
          "type": "integer",
          "format": "int32"
        },
        "metrics": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "title": "Paddle elastic policy"
    },
    "v1PaddleJob": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Optional component kind, should be equal to 'paddlejob'",
          "default": "paddlejob"
        },
        "cleanPodPolicy": {
          "$ref": "#/definitions/v1CleanPodPolicy",
          "title": "optional clean pod policy section"
        },
        "schedulingPolicy": {
          "$ref": "#/definitions/v1SchedulingPolicy",
          "title": "optional scheduling policy section"
        },
        "elasticPolicy": {
          "$ref": "#/definitions/v1PaddleElasticPolic",
          "title": "Optional elastic policy section"
        },
        "master": {
          "$ref": "#/definitions/v1KFReplica",
          "title": "Master replicas definition"
        },
        "worker": {
          "$ref": "#/definitions/v1KFReplica",
          "title": "Worker replicas definition"
        }
      },
      "title": "Paddle Job specification"
    },
    "v1Param": {
      "type": "object",
      "properties": {
        "value": {
          "type": "object",
          "title": "The value to pass, if no ref or search is passed then it corresponds to a literal value"
        },
        "ref": {
          "type": "string",
          "title": "Ref corresponds to a reference of an object"
        },
        "connection": {
          "type": "string",
          "title": "A flag to signal to Polyaxon that this param is used with a connection"
        },
        "toInit": {
          "type": "boolean",
          "title": "A flag to signal to Polyaxon that this param must be tranformed to an init container"
        },
        "toEnv": {
          "type": "string",
          "title": "A flag to signal to Polyaxon that this io must be tranformed to the environment variable passed"
        },
        "contextOnly": {
          "type": "boolean",
          "title": "A flag to signal to Polyaxon that this param should not be validated against io"
        }
      },
      "title": "Param specification"
    },
    "v1PasswordChange": {
      "type": "object",
      "properties": {
        "old_password": {
          "type": "string",
          "title": "Old password"
        },
        "new_password1": {
          "type": "string",
          "title": "New password"
        },
        "new_password2": {
          "type": "string",
          "title": "New password confirmation"
        }
      },
      "title": "User password change"
    },
    "v1PatchStrategy": {
      "type": "string",
      "enum": [
        "replace",
        "isnull",
        "post_merge",
        "pre_merge"
      ],
      "default": "replace",
      "description": "- replace: Replaces the keys\n - isnull: Only set the keys if they do not exist or if they are null\n - post_merge: Merge the all keys and replace by new one\n - pre_merge: Merge the all keys and keep old ones",
      "title": "PatchStrategy"
    },
    "v1PathRef": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of reference, should be equal to \"path_ref\"",
          "default": "path_ref"
        },
        "path": {
          "type": "string",
          "title": "Value"
        }
      },
      "title": "Path reference specification"
    },
    "v1Pipeline": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "title": "Optional uuid of the pipeline run"
        },
        "name": {
          "type": "string",
          "title": "Optional name of the pipeline run"
        },
        "kind": {
          "$ref": "#/definitions/v1PipelineKind",
          "title": "Optional if the pipeline kind dag/matrix"
        }
      }
    },
    "v1PipelineKind": {
      "type": "string",
      "enum": [
        "dag",
        "matrix"
      ],
      "default": "dag"
    },
    "v1Plugins": {
      "type": "object",
      "properties": {
        "auth": {
          "type": "boolean",
          "title": "Optional flag to tell Polyaxon if it should set an auth context for the run, default true"
        },
        "docker": {
          "type": "boolean",
          "title": "Optional flag to tell Polyaxon if it should set a docker socket context for the run, default false"
        },
        "shm": {
          "type": "boolean",
          "title": "Optional flag to tell Polyaxon if it should set a shm context for the run, default false"
        },
        "mountArtifactsStore": {
          "type": "boolean",
          "title": "Optional flag to mount the artifacts store to the main container"
        },
        "collectArtifacts": {
          "type": "boolean",
          "title": "Optional flag to tell Polyaxon to collect artifacts and outputs"
        },
        "collectLogs": {
          "type": "boolean",
          "title": "Optional flag to tell Polyaxon to collect logs"
        },
        "collectResources": {
          "type": "boolean",
          "title": "Optional flag to tell Polyaxon to collect container resources (cpu/memory/gpu)"
        },
        "syncStatuses": {
          "type": "boolean",
          "title": "Optional flag to tell Polyaxon to sync statuses"
        },
        "autoResume": {
          "type": "boolean",
          "title": "Auto resume a run's artifacts (applies to resume and retries), works if collects_artifacts is enabled"
        },
        "logLevel": {
          "type": "string",
          "title": "Optional log level"
        },
        "externalHost": {
          "type": "boolean",
          "title": "Optional flag to tell Polyaxon to connect to the control plan via the external host"
        },
        "sidecar": {
          "$ref": "#/definitions/v1PolyaxonSidecarContainer",
          "title": "Optional to override the sidecar's default config"
        },
        "notifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Notification"
          },
          "title": "Option Notifications: Deprecated"
        }
      },
      "title": "Plugins specification"
    },
    "v1PodDNSConfig": {
      "type": "object",
      "title": "Placeholder for PodDNSConfig"
    },
    "v1PodSecurityContext": {
      "type": "object",
      "title": "Placeholder for PodSecurityContext"
    },
    "v1Policy": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "title": "UUID"
        },
        "owner": {
          "type": "string",
          "title": "Owner/namespace where the project was created"
        },
        "name": {
          "type": "string",
          "title": "Required name"
        },
        "description": {
          "type": "string",
          "title": "Optional description"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional tags of this entity"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional time when the entity was created"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional last time the entity was updated"
        },
        "excluded_features": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional project excluded features"
        },
        "excluded_runtimes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional project excluded runtimes"
        },
        "archived_deletion_interval": {
          "type": "integer",
          "format": "int32",
          "title": "Optional project archived deletion interval"
        },
        "connections": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Authorized connections"
        },
        "default_presets": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Default Presets"
        },
        "default_presets_ordered": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Default Presets ordered"
        },
        "presets": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Authorized Presets"
        },
        "queue": {
          "type": "string",
          "title": "Default Queue"
        },
        "queues": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Authorized queues"
        },
        "agents": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Authorized agents"
        },
        "namespaces": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Authorized namespaces"
        },
        "user_accesses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1UserAccess"
          },
          "title": "Authorized users"
        },
        "teams": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Authorized teams"
        },
        "projects": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Authorized projects"
        },
        "connected_projects": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Connected projects"
        }
      },
      "title": "Organization policy"
    },
    "v1PolyaxonInitContainer": {
      "type": "object",
      "properties": {
        "image": {
          "type": "string"
        },
        "imageTag": {
          "type": "string"
        },
        "imagePullPolicy": {
          "type": "string"
        },
        "resources": {
          "$ref": "#/definitions/v1ResourceRequirements"
        }
      },
      "title": "Polyaxon init specification"
    },
    "v1PolyaxonSidecarContainer": {
      "type": "object",
      "properties": {
        "image": {
          "type": "string"
        },
        "imageTag": {
          "type": "string"
        },
        "imagePullPolicy": {
          "type": "string"
        },
        "sleepInterval": {
          "type": "integer",
          "format": "int32"
        },
        "syncInterval": {
          "type": "integer",
          "format": "int32"
        },
        "monitorLogs": {
          "type": "boolean"
        },
        "monitorSpec": {
          "type": "boolean"
        },
        "resources": {
          "$ref": "#/definitions/v1ResourceRequirements"
        }
      },
      "title": "Polyaxon sidecar specification"
    },
    "v1Preset": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "title": "UUID"
        },
        "name": {
          "type": "string",
          "title": "Name"
        },
        "description": {
          "type": "string",
          "title": "Optional description"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional tags of this entity"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional time when the entity was created"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional last time the entity was updated"
        },
        "live_state": {
          "type": "integer",
          "format": "int32",
          "title": "Current live state"
        },
        "content": {
          "type": "string",
          "title": "The content of the preset"
        },
        "settings": {
          "$ref": "#/definitions/v1PresetSettings",
          "title": "settings"
        }
      },
      "title": "Preset specification"
    },
    "v1PresetSettings": {
      "type": "object",
      "properties": {
        "projects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1SettingsCatalog"
          },
          "title": "Projects"
        },
        "runs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1SettingsCatalog"
          },
          "title": "Component hubs"
        }
      },
      "title": "Preset Settings specification"
    },
    "v1Project": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "title": "UUID"
        },
        "owner": {
          "type": "string",
          "title": "Owner/namespace where the project was created"
        },
        "name": {
          "type": "string",
          "title": "Required name"
        },
        "description": {
          "type": "string",
          "title": "Optional description"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional tags of this entity"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional time when the entity was created"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional last time the entity was updated"
        },
        "is_public": {
          "type": "boolean",
          "title": "Optional flag to tell if this project is public"
        },
        "bookmarked": {
          "type": "boolean",
          "title": "Optional if this entity was bookmarked"
        },
        "readme": {
          "type": "string",
          "title": "Optional Markdown description/readme"
        },
        "excluded_features": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional project excluded features"
        },
        "excluded_runtimes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional project excluded runtimes"
        },
        "archived_deletion_interval": {
          "type": "integer",
          "format": "int32",
          "title": "Optional project archived deletion interval"
        },
        "settings": {
          "$ref": "#/definitions/v1ProjectSettings",
          "title": "Optional project settings"
        },
        "role": {
          "type": "string",
          "title": "Current user's role in this (org/teams)/project"
        },
        "live_state": {
          "type": "integer",
          "format": "int32",
          "title": "Current live state"
        },
        "contributors": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "title": "Contributors"
        }
      },
      "title": "Project specification"
    },
    "v1ProjectSettings": {
      "type": "object",
      "properties": {
        "connections": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Authorized connections"
        },
        "default_presets": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Default Presets"
        },
        "default_presets_ordered": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Default Presets ordered"
        },
        "presets": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Authorized Presets"
        },
        "queue": {
          "type": "string",
          "title": "Default Queue"
        },
        "queues": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Authorized queues"
        },
        "agents": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Authorized agents"
        },
        "namespaces": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Authorized namespaces"
        },
        "user_accesses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1UserAccess"
          },
          "title": "Authorized users"
        },
        "teams": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Authorized teams"
        },
        "projects": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Authorized projects"
        },
        "policy": {
          "type": "string",
          "title": "Attached policy"
        }
      },
      "title": "Project Settings specification"
    },
    "v1ProjectVersion": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "title": "UUID"
        },
        "name": {
          "type": "string",
          "title": "Optional component name, should be a valid fully qualified value: name[:version]"
        },
        "description": {
          "type": "string",
          "title": "Optional description"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional tags of this entity"
        },
        "owner": {
          "type": "string",
          "title": "Owner of this entity"
        },
        "project": {
          "type": "string",
          "title": "Project name"
        },
        "connection": {
          "type": "string",
          "title": "Connection name"
        },
        "run": {
          "type": "string",
          "title": "Run lineage"
        },
        "artifacts": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Artifacts lineage"
        },
        "meta_info": {
          "type": "object",
          "description": "Extra information related to the run, lineage, artifacts, ..."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional time when the entity was created"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional last time the entity was updated"
        },
        "stage": {
          "$ref": "#/definitions/v1Stages",
          "title": "Optional latest stage of this entity"
        },
        "kind": {
          "$ref": "#/definitions/v1ProjectVersionKind",
          "title": "Optional kind to tell the kind of this version"
        },
        "stage_conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1StageCondition"
          },
          "title": "The status conditions timeline"
        },
        "content": {
          "type": "string",
          "title": "The metadata/content body"
        },
        "readme": {
          "type": "string",
          "title": "Optional Markdown description/readme"
        },
        "state": {
          "type": "string",
          "title": "The version state read-only"
        },
        "role": {
          "type": "string",
          "title": "Current user's role in this (org/teams)/hub/version"
        },
        "contributors": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "title": "Contributors"
        }
      },
      "title": "component hub specification"
    },
    "v1ProjectVersionKind": {
      "type": "string",
      "enum": [
        "component",
        "model",
        "artifact"
      ],
      "default": "component"
    },
    "v1PytorchElasticPolicy": {
      "type": "object",
      "properties": {
        "minReplicas": {
          "type": "integer",
          "format": "int32",
          "description": "minReplicas is the lower limit for the number of replicas to which the training job can scale down."
        },
        "maxReplicas": {
          "type": "integer",
          "format": "int32",
          "description": "upper limit for the number of pods that can be set by the autoscaler; cannot be smaller than MinReplicas, defaults to null."
        },
        "rdvzBackend": {
          "type": "string"
        },
        "rdvzPort": {
          "type": "integer",
          "format": "int32"
        },
        "rdvzHost": {
          "type": "string"
        },
        "rdvzId": {
          "type": "string"
        },
        "rdvzConf": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "description": "RDZVConf contains additional rendezvous configuration (<key1>=<value1>,<key2>=<value2>,...)."
        },
        "standalone": {
          "type": "boolean",
          "description": "Start a local standalone rendezvous backend that is represented by a C10d TCP store\non port 29400. Useful when launching single-node, multi-worker job. If specified\n--rdzv_backend, --rdzv_endpoint, --rdzv_id are auto-assigned; any explicitly set values\nare ignored."
        },
        "nProcPerNode": {
          "type": "integer",
          "format": "int32",
          "description": "Number of workers per node; supported values: [auto, cpu, gpu, int].\nDeprecated: This API is deprecated in v1.7+\nUse .spec.nprocPerNode instead."
        },
        "maxRestarts": {
          "type": "integer",
          "format": "int32"
        },
        "Metrics": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "description": "Metrics contains the specifications which are used to calculate the\ndesired replica count (the maximum replica count across all metrics will\nbe used).  The desired replica count is calculated with multiplying the\nratio between the target value and the current value by the current\nnumber of pods. Ergo, metrics used must decrease as the pod count is\nincreased, and vice-versa.  See the individual metric source types for\nmore information about how each type of metric must respond.\nIf not set, the HPA will not be created."
        }
      }
    },
    "v1PytorchJob": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Optional component kind, should be equal to 'pytorchjob'",
          "default": "pytorchjob"
        },
        "cleanPodPolicy": {
          "$ref": "#/definitions/v1CleanPodPolicy",
          "title": "optional clean pod policy section"
        },
        "schedulingPolicy": {
          "$ref": "#/definitions/v1SchedulingPolicy",
          "title": "optional scheduling policy section"
        },
        "elasticPolicy": {
          "$ref": "#/definitions/v1PytorchElasticPolicy",
          "title": "Optional elastic policy section"
        },
        "master": {
          "$ref": "#/definitions/v1KFReplica",
          "title": "Master replicas definition"
        },
        "worker": {
          "$ref": "#/definitions/v1KFReplica",
          "title": "Worker replicas definition"
        },
        "nProcPerNode": {
          "type": "string"
        }
      },
      "title": "Pytorch Job specification"
    },
    "v1Queue": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "title": "UUID"
        },
        "agent": {
          "type": "string",
          "title": "Agent"
        },
        "name": {
          "type": "string",
          "title": "Name"
        },
        "description": {
          "type": "string",
          "title": "Optional description"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional tags of this entity"
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "title": "The queue priority"
        },
        "concurrency": {
          "type": "integer",
          "format": "int32",
          "title": "The queue concurrency"
        },
        "resource": {
          "type": "string",
          "title": "Optional queue resource"
        },
        "quota": {
          "type": "string",
          "title": "Optional queue quota"
        },
        "stats": {
          "type": "object",
          "title": "Optional queue stats"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional time when the entity was created"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional last time the entity was updated"
        }
      },
      "title": "Queue specification"
    },
    "v1RandomSearch": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of matrix, should be equal to \"random\"",
          "default": "random"
        },
        "params": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          },
          "title": "Hyperparams/Space definition of params to traverse"
        },
        "numRuns": {
          "type": "integer",
          "format": "int32",
          "title": "Number of runs to generate and search"
        },
        "seed": {
          "type": "integer",
          "format": "int32",
          "title": "Seed for the random generator"
        },
        "concurrency": {
          "type": "integer",
          "format": "int32",
          "title": "Number of concurrent runs"
        },
        "earlyStopping": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "title": "A list of Early stoppings, accpets both metric and failure early stopping mechanisms"
        }
      },
      "title": "Matrix based on randomly generated search space"
    },
    "v1RayJob": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of runtime, should be equal to \"rayjob\"",
          "default": "rayjob"
        },
        "entrypoint": {
          "type": "string",
          "title": "Entrypoint of the ray application, e.g. python path/to/run.py"
        },
        "runtimeEnv": {
          "type": "object",
          "title": "Optional run environment section to install pip packages or expose env vars"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Optional metadata section"
        },
        "rayVersion": {
          "type": "string",
          "title": "Cluster ray version, must be equal to the ray image version"
        },
        "head": {
          "$ref": "#/definitions/v1RayReplica",
          "title": "Ray head goupr section"
        },
        "workers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1RayReplica"
          },
          "title": "Ray workers group section"
        }
      },
      "title": "Ray specification"
    },
    "v1RayReplica": {
      "type": "object",
      "properties": {
        "replicas": {
          "type": "integer",
          "format": "int32",
          "title": "Number of replicas"
        },
        "minReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "maxReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "groupName": {
          "type": "string"
        },
        "rayStartParams": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "environment": {
          "$ref": "#/definitions/v1Environment",
          "title": "Optional environment section"
        },
        "connections": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional connections section"
        },
        "volumes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Volume"
          },
          "description": "Volumes is a list of volumes that can be mounted."
        },
        "init": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Init"
          },
          "title": "Optional init connections section"
        },
        "sidecars": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Container"
          },
          "title": "Optional sidecars section"
        },
        "container": {
          "$ref": "#/definitions/v1Container",
          "title": "Optional container to run"
        }
      },
      "title": "Ray replica definition"
    },
    "v1Reference": {
      "type": "object",
      "properties": {
        "hubRef": {
          "$ref": "#/definitions/v1HubRef"
        },
        "dagRef": {
          "$ref": "#/definitions/v1DagRef"
        },
        "urlRef": {
          "$ref": "#/definitions/v1UrlRef"
        },
        "pathRef": {
          "$ref": "#/definitions/v1PathRef"
        }
      },
      "title": "Reference specification"
    },
    "v1ResourceRequirements": {
      "type": "object",
      "title": "Placeholder Resource Requirements"
    },
    "v1ResourceType": {
      "type": "string",
      "enum": [
        "int",
        "float"
      ],
      "default": "int",
      "description": "- int: Int resource\n - float: Float resource",
      "title": "ResourceTypes enum for optmiztion resources"
    },
    "v1Run": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "title": "UUID"
        },
        "name": {
          "type": "string",
          "title": "Optional name"
        },
        "description": {
          "type": "string",
          "title": "Optional description"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional tags of this entity"
        },
        "user": {
          "type": "string",
          "title": "Required name of user started this entity"
        },
        "owner": {
          "type": "string",
          "title": "Required name of owner of this entity"
        },
        "project": {
          "type": "string",
          "title": "Required project name"
        },
        "schedule_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional last time the entity was started"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional time when the entity was created"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional last time the entity was updated"
        },
        "started_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional last time the entity was started"
        },
        "finished_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional last time the entity was started"
        },
        "wait_time": {
          "type": "number",
          "format": "float",
          "title": "Optional wait time of the entity"
        },
        "duration": {
          "type": "number",
          "format": "float",
          "title": "Optional duration of the entity"
        },
        "managed_by": {
          "$ref": "#/definitions/v1ManagedBy",
          "title": "Optional flag of the managing service"
        },
        "is_managed": {
          "type": "boolean",
          "title": "Optional flag to tell if this entity is managed by the platform"
        },
        "is_approved": {
          "type": "boolean",
          "title": "Deprecated flag that was replaced by \"pending\", and it will be completely dropped after v1.15"
        },
        "pending": {
          "$ref": "#/definitions/v1RunPending",
          "title": "Optional to tell if this entity requires approval before it should be scheduled"
        },
        "content": {
          "type": "string",
          "title": "Optional content of the entity's spec"
        },
        "raw_content": {
          "type": "string",
          "title": "Optional content of the entity's spec"
        },
        "status": {
          "$ref": "#/definitions/v1Statuses",
          "title": "Optional latest status of this entity"
        },
        "bookmarked": {
          "type": "boolean",
          "title": "Optional if this entity was bookmarked"
        },
        "live_state": {
          "type": "integer",
          "format": "int32",
          "title": "Current live state"
        },
        "readme": {
          "type": "string",
          "title": "Optional Markdown description/readme"
        },
        "meta_info": {
          "type": "object",
          "title": "Optional run meta info"
        },
        "kind": {
          "$ref": "#/definitions/v1RunKind",
          "title": "Optional kind to tell the kind of this run"
        },
        "runtime": {
          "$ref": "#/definitions/v1RunKind",
          "title": "Optional meta kind to tell the nature of this run"
        },
        "inputs": {
          "type": "object",
          "title": "Optional inputs of this entity"
        },
        "outputs": {
          "type": "object",
          "title": "Optional outputs of this entity"
        },
        "original": {
          "$ref": "#/definitions/v1Cloning",
          "title": "Optional original run meta information"
        },
        "pipeline": {
          "$ref": "#/definitions/v1Pipeline",
          "title": "Optional pipeline run meta information"
        },
        "status_conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1StatusCondition"
          },
          "title": "The status conditions timeline"
        },
        "role": {
          "type": "string",
          "title": "Current user's role in this (org/teams)/project/runs"
        },
        "contributors": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "title": "Contributors"
        },
        "settings": {
          "$ref": "#/definitions/v1RunSettings",
          "title": "Optional settings"
        },
        "resources": {
          "$ref": "#/definitions/v1RunResources",
          "title": "Options resources"
        },
        "graph": {
          "type": "object",
          "title": "Optional graph definition"
        },
        "merge": {
          "type": "boolean",
          "title": "Optional merge flag"
        }
      },
      "title": "Run specification"
    },
    "v1RunArtifact": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Artifact name"
        },
        "state": {
          "type": "string",
          "title": "State"
        },
        "kind": {
          "$ref": "#/definitions/v1ArtifactKind",
          "title": "Artifact type"
        },
        "path": {
          "type": "string",
          "title": "Artifact path"
        },
        "connection": {
          "type": "string",
          "title": "Optional Connection"
        },
        "run": {
          "type": "string",
          "title": "Optional Run"
        },
        "summary": {
          "type": "object",
          "title": "Artifact schema"
        },
        "is_input": {
          "type": "boolean",
          "title": "Optional flag to check the use of the artifact in a context"
        },
        "meta_info": {
          "type": "object",
          "title": "Optional meta information"
        }
      },
      "title": "Run Artifact spec definition"
    },
    "v1RunArtifacts": {
      "type": "object",
      "properties": {
        "artifacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1RunArtifact"
          },
          "title": "Run Artifacts"
        }
      },
      "title": "Run Artifacts spec definition"
    },
    "v1RunConnection": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "title": "Uuid"
        },
        "name": {
          "type": "string",
          "title": "Name"
        },
        "kind": {
          "type": "string",
          "title": "Kind"
        }
      }
    },
    "v1RunEdge": {
      "type": "object",
      "properties": {
        "upstream": {
          "$ref": "#/definitions/v1Run",
          "title": "Optional uuid of the edge run"
        },
        "downstream": {
          "$ref": "#/definitions/v1Run",
          "title": "Optional name of the edge run"
        },
        "kind": {
          "$ref": "#/definitions/v1RunEdgeKind",
          "title": "Optional edge run kind"
        },
        "values": {
          "type": "object",
          "title": "Optional edge values"
        },
        "statuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Statuses"
          },
          "title": "Options statuses events"
        }
      }
    },
    "v1RunEdgeKind": {
      "type": "string",
      "enum": [
        "action",
        "event",
        "hook",
        "dag",
        "join",
        "run",
        "tb",
        "build",
        "manual"
      ],
      "default": "action"
    },
    "v1RunEdgeLineage": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "title": "Run uuid to link"
        },
        "is_upstream": {
          "type": "boolean",
          "title": "Optional edge run direction"
        },
        "values": {
          "type": "object",
          "title": "Optional edge values"
        }
      },
      "title": "single run edge"
    },
    "v1RunEdgesGraph": {
      "type": "object",
      "properties": {
        "edges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1RunEdgeLineage"
          },
          "title": "Run edges"
        }
      }
    },
    "v1RunKind": {
      "type": "string",
      "enum": [
        "job",
        "service",
        "dag",
        "daskjob",
        "rayjob",
        "mpijob",
        "tfjob",
        "pytorchjob",
        "mxjob",
        "xgbjob",
        "paddlejob",
        "matrix",
        "schedule",
        "tuner",
        "watchdog",
        "notifier",
        "builder",
        "cleaner"
      ],
      "default": "job",
      "title": "Run kind enum\nKinds: job, service, dag, matrix, schedule\nRuntime kinds: job, service, dag, dask, ray, mpijob, tfjob\nhelper kinds: tuner, watchdog, notifier, cleaner, build"
    },
    "v1RunPending": {
      "type": "string",
      "enum": [
        "approval",
        "upload",
        "cache",
        "build"
      ],
      "default": "approval"
    },
    "v1RunReferenceCatalog": {
      "type": "object",
      "properties": {
        "owner": {
          "type": "string",
          "title": "Owner"
        },
        "project": {
          "type": "string",
          "title": "Project"
        },
        "name": {
          "type": "string",
          "title": "Name"
        },
        "state": {
          "type": "string",
          "title": "State"
        }
      },
      "title": "Run Settings catalog specification"
    },
    "v1RunResources": {
      "type": "object",
      "properties": {
        "cpu": {
          "type": "number",
          "format": "float"
        },
        "memory": {
          "type": "number",
          "format": "float"
        },
        "gpu": {
          "type": "number",
          "format": "float"
        },
        "custom": {
          "type": "number",
          "format": "float"
        },
        "cost": {
          "type": "number",
          "format": "float"
        }
      },
      "title": "Run Resources specification"
    },
    "v1RunSchema": {
      "type": "object",
      "properties": {
        "job": {
          "$ref": "#/definitions/v1Job"
        },
        "service": {
          "$ref": "#/definitions/v1Service"
        },
        "dag": {
          "$ref": "#/definitions/v1Dag"
        },
        "tfJob": {
          "$ref": "#/definitions/v1TFJob"
        },
        "pytorchJob": {
          "$ref": "#/definitions/v1PytorchJob"
        },
        "mpiJob": {
          "$ref": "#/definitions/v1MPIJob"
        },
        "mxJob": {
          "$ref": "#/definitions/v1MXJob"
        },
        "xgboostJob": {
          "$ref": "#/definitions/v1XGBoostJob"
        },
        "paddleJob": {
          "$ref": "#/definitions/v1PaddleJob"
        },
        "daskJob": {
          "$ref": "#/definitions/v1DaskJob"
        },
        "rayJob": {
          "$ref": "#/definitions/v1RayJob"
        }
      }
    },
    "v1RunSettings": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "title": "Namespace"
        },
        "agent": {
          "$ref": "#/definitions/v1SettingsCatalog",
          "title": "Agent"
        },
        "queue": {
          "$ref": "#/definitions/v1SettingsCatalog",
          "title": "Queue"
        },
        "artifacts_store": {
          "$ref": "#/definitions/v1SettingsCatalog",
          "title": "Artifacts Store"
        },
        "tensorboard": {
          "type": "object",
          "title": "Latest Tensorboard reference, if it exists"
        },
        "build": {
          "type": "object",
          "title": "Build reference, if it exists"
        },
        "component": {
          "type": "object",
          "title": "Component reference"
        },
        "models": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1RunReferenceCatalog"
          },
          "title": "Model version references"
        },
        "artifacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1RunReferenceCatalog"
          },
          "title": "Artifact version references"
        }
      },
      "title": "Run Settings specification"
    },
    "v1S3Type": {
      "type": "object",
      "properties": {
        "bucket": {
          "type": "string",
          "title": "Optional container"
        },
        "key": {
          "type": "string",
          "title": "Optional storage_account"
        }
      },
      "title": "Wasb type specification"
    },
    "v1Schedule": {
      "type": "object",
      "properties": {
        "cron": {
          "$ref": "#/definitions/v1CronSchedule"
        },
        "datetime": {
          "$ref": "#/definitions/v1DateTimeSchedule"
        },
        "interval": {
          "$ref": "#/definitions/v1IntervalSchedule"
        }
      },
      "title": "All Schemas message"
    },
    "v1ScheduleKind": {
      "type": "string",
      "enum": [
        "cron",
        "interval",
        "datetime"
      ],
      "default": "cron"
    },
    "v1SchedulingPolicy": {
      "type": "object",
      "properties": {
        "minAvailable": {
          "type": "integer",
          "format": "int32"
        },
        "queue": {
          "type": "string"
        },
        "minResources": {
          "type": "object"
        },
        "priorityClass": {
          "type": "string"
        },
        "scheduleTimeoutSeconds": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1Schemas": {
      "type": "object",
      "properties": {
        "earlyStopping": {
          "$ref": "#/definitions/v1EarlyStopping"
        },
        "matrix": {
          "$ref": "#/definitions/v1Matrix"
        },
        "run": {
          "$ref": "#/definitions/v1RunSchema"
        },
        "operation": {
          "$ref": "#/definitions/v1Operation"
        },
        "compiledOperation": {
          "$ref": "#/definitions/v1CompiledOperation"
        },
        "schedule": {
          "$ref": "#/definitions/v1Schedule"
        },
        "connectionSchema": {
          "$ref": "#/definitions/v1ConnectionSchema"
        },
        "hpParams": {
          "$ref": "#/definitions/v1HpParams"
        },
        "reference": {
          "$ref": "#/definitions/v1Reference"
        },
        "artifactsMount": {
          "$ref": "#/definitions/v1ArtifactsMount"
        },
        "polyaxonSidecarContainer": {
          "$ref": "#/definitions/v1PolyaxonSidecarContainer"
        },
        "polyaxonInitContainer": {
          "$ref": "#/definitions/v1PolyaxonInitContainer"
        },
        "artifacs": {
          "$ref": "#/definitions/v1ArtifactsType"
        },
        "wasb": {
          "$ref": "#/definitions/v1WasbType"
        },
        "gcs": {
          "$ref": "#/definitions/v1GcsType"
        },
        "s3": {
          "$ref": "#/definitions/v1S3Type"
        },
        "auth": {
          "$ref": "#/definitions/v1AuthType"
        },
        "uri": {
          "$ref": "#/definitions/v1UriType"
        },
        "resource": {
          "$ref": "#/definitions/v1ConnectionResource"
        },
        "connection": {
          "$ref": "#/definitions/v1ConnectionType"
        },
        "eventType": {
          "$ref": "#/definitions/v1EventType"
        },
        "matrixKind": {
          "$ref": "#/definitions/v1MatrixKind"
        },
        "scheduleKind": {
          "$ref": "#/definitions/v1ScheduleKind"
        },
        "event": {
          "$ref": "#/definitions/v1Event"
        }
      }
    },
    "v1Search": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "title": "UUID"
        },
        "name": {
          "type": "string",
          "title": "Optional name"
        },
        "description": {
          "type": "string",
          "title": "Optional description"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional tags of this entity"
        },
        "live_state": {
          "type": "integer",
          "format": "int32",
          "title": "Current live state"
        },
        "view": {
          "$ref": "#/definitions/SearchView",
          "title": "Optional search view"
        },
        "spec": {
          "$ref": "#/definitions/v1SearchSpec",
          "title": "Search spec"
        },
        "org_level": {
          "type": "boolean",
          "title": "Optional search level"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional time when the entity was created"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional last time the entity was updated"
        }
      },
      "title": "Search specification"
    },
    "v1SearchSpec": {
      "type": "object",
      "properties": {
        "query": {
          "type": "string",
          "title": "Search query"
        },
        "sort": {
          "type": "string",
          "title": "Search sort"
        },
        "limit": {
          "type": "integer",
          "format": "int32",
          "title": "Limit size"
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "title": "Offset value"
        },
        "groupby": {
          "type": "string",
          "title": "Search group bys"
        },
        "columns": {
          "type": "string",
          "title": "Search columns"
        },
        "layout": {
          "type": "string",
          "title": "Search layout"
        },
        "sections": {
          "type": "string",
          "title": "Search sections"
        },
        "compares": {
          "type": "string",
          "title": "Compare Flags"
        },
        "heat": {
          "type": "string",
          "title": "Optional heat fields"
        },
        "events": {
          "$ref": "#/definitions/v1DashboardSpec",
          "title": "Optional events specification"
        },
        "histograms": {
          "type": "object",
          "title": "Optional histograms specification"
        },
        "trends": {
          "type": "object",
          "title": "Optional trends specification"
        },
        "analytics": {
          "$ref": "#/definitions/v1AnalyticsSpec",
          "title": "Optional analytics specification"
        }
      },
      "title": "Search spec definition"
    },
    "v1SectionSpec": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Section name"
        },
        "is_minimized": {
          "type": "boolean",
          "title": "Minimize"
        },
        "is_frozen": {
          "type": "boolean",
          "title": "Freeze"
        },
        "columns": {
          "type": "integer",
          "format": "int32",
          "title": "Number of columns"
        },
        "height": {
          "type": "integer",
          "format": "int32",
          "title": "Height"
        },
        "xaxis": {
          "type": "string",
          "title": "xaxis"
        },
        "smoothing": {
          "type": "integer",
          "format": "int32",
          "title": "Smoothing"
        },
        "ignore_outliers": {
          "type": "boolean",
          "title": "Ignore outliers"
        },
        "sample_size": {
          "type": "integer",
          "format": "int32",
          "title": "Sample size"
        },
        "widgets": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "title": "Section's widgets"
        },
        "page_index": {
          "type": "integer",
          "format": "int32",
          "title": "Page index"
        },
        "page_size": {
          "type": "integer",
          "format": "int32",
          "title": "Page size"
        }
      },
      "title": "Dashboard section definition"
    },
    "v1Service": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Optional component kind, should be equal to 'service'",
          "default": "service"
        },
        "environment": {
          "$ref": "#/definitions/v1Environment",
          "title": "Optional environment section"
        },
        "connections": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional connections section"
        },
        "volumes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Volume"
          },
          "description": "Volumes is a list of volumes that can be mounted."
        },
        "init": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Init"
          },
          "title": "Optional init connections/containers section"
        },
        "sidecars": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Container"
          },
          "title": "Optional sidecars section"
        },
        "container": {
          "$ref": "#/definitions/v1Container",
          "title": "Optional container to notification"
        },
        "ports": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "title": "Optional service section"
        },
        "rewritePath": {
          "type": "boolean",
          "description": "Rewrite path to remove polyaxon base url(i.e. /v1/services/namespace/owner/project/).\nDefault is false, the service shoud handle a base url."
        },
        "isExternal": {
          "type": "boolean",
          "description": "Optional flag to signal to Polyaxon that this service should not go through Polyaxon's auth\nDefault is false, the service will be controlled by Polyaxon's auth."
        },
        "replicas": {
          "type": "integer",
          "format": "int32",
          "title": "Optional value to provision more than a single replica for the service"
        }
      },
      "title": "Service specification"
    },
    "v1ServiceAccount": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "title": "UUID"
        },
        "name": {
          "type": "string",
          "title": "Name"
        },
        "description": {
          "type": "string",
          "title": "Optional description"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional tags of this entity"
        },
        "live_state": {
          "type": "integer",
          "format": "int32",
          "title": "Current live state"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional time when the entity was created"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional last time the entity was updated"
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional scopes allowed for this service account"
        },
        "services": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional services allowed for this service account"
        }
      },
      "title": "ServiceAccount specification"
    },
    "v1SettingsCatalog": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "title": "Uuid"
        },
        "name": {
          "type": "string",
          "title": "Name"
        },
        "version": {
          "type": "string",
          "title": "Version"
        },
        "url": {
          "type": "string",
          "title": "Url"
        }
      },
      "title": "Settings catalog specification"
    },
    "v1Stage": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "title": "The uuid of the stage"
        },
        "stage": {
          "$ref": "#/definitions/v1Stages",
          "title": "The current stage"
        },
        "stage_conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1StageCondition"
          },
          "title": "The stage conditions timeline"
        }
      },
      "title": "Stage specification"
    },
    "v1StageCondition": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1Stages",
          "title": "Status type"
        },
        "status": {
          "type": "string",
          "title": "Status state"
        },
        "reason": {
          "type": "string",
          "title": "Status reason"
        },
        "message": {
          "type": "string",
          "title": "Status message"
        },
        "last_update_time": {
          "type": "string",
          "format": "date-time",
          "title": "last update time"
        },
        "last_transition_time": {
          "type": "string",
          "format": "date-time",
          "title": "last transition time"
        },
        "meta_info": {
          "type": "object",
          "title": "Optional meta_info"
        }
      },
      "title": "stage condition specification"
    },
    "v1Stages": {
      "type": "string",
      "enum": [
        "testing",
        "staging",
        "production",
        "disabled"
      ],
      "default": "testing"
    },
    "v1Status": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "title": "The uuid of the status"
        },
        "status": {
          "$ref": "#/definitions/v1Statuses",
          "title": "The current status"
        },
        "status_conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1StatusCondition"
          },
          "title": "The status conditions timeline"
        },
        "meta_info": {
          "type": "object",
          "title": "Additional optional meta_info"
        }
      },
      "title": "Status specification"
    },
    "v1StatusCondition": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1Statuses",
          "title": "Status type"
        },
        "status": {
          "type": "string",
          "title": "Status state"
        },
        "reason": {
          "type": "string",
          "title": "Status reason"
        },
        "message": {
          "type": "string",
          "title": "Status message"
        },
        "last_update_time": {
          "type": "string",
          "format": "date-time",
          "title": "last update time"
        },
        "last_transition_time": {
          "type": "string",
          "format": "date-time",
          "title": "last transition time"
        },
        "meta_info": {
          "type": "object",
          "title": "Optional meta_info"
        }
      },
      "title": "Status condition specification"
    },
    "v1Statuses": {
      "type": "string",
      "enum": [
        "created",
        "resuming",
        "on_schedule",
        "compiled",
        "queued",
        "scheduled",
        "starting",
        "running",
        "processing",
        "stopping",
        "failed",
        "stopped",
        "succeeded",
        "skipped",
        "warning",
        "unschedulable",
        "upstream_failed",
        "retrying",
        "unknown",
        "done"
      ],
      "default": "created"
    },
    "v1TFJob": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Optional component kind, should be equal to 'tfjob'",
          "default": "tfjob"
        },
        "cleanPodPolicy": {
          "$ref": "#/definitions/v1CleanPodPolicy",
          "title": "optional clean pod policy section"
        },
        "schedulingPolicy": {
          "$ref": "#/definitions/v1SchedulingPolicy",
          "title": "optional scheduling policy section"
        },
        "successPolicy": {
          "type": "string",
          "title": "optiona success policy"
        },
        "enableDynamicWorker": {
          "type": "boolean",
          "title": "optional flag to enable dynamic worker"
        },
        "chief": {
          "$ref": "#/definitions/v1KFReplica",
          "title": "Chief replicas definition"
        },
        "worker": {
          "$ref": "#/definitions/v1KFReplica",
          "title": "Worker replicas definition"
        },
        "ps": {
          "$ref": "#/definitions/v1KFReplica",
          "title": "PS replicas definition"
        },
        "evaluator": {
          "$ref": "#/definitions/v1KFReplica",
          "title": "Evaluator replicas definition"
        }
      },
      "title": "TF Job specification"
    },
    "v1Tag": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "title": "UUID"
        },
        "name": {
          "type": "string",
          "title": "Tag name"
        },
        "color": {
          "type": "string",
          "title": "Optional Tag color"
        },
        "description": {
          "type": "string",
          "title": "Optional tag description"
        },
        "icon": {
          "type": "string",
          "title": "Optional tag icon"
        },
        "stats": {
          "type": "object",
          "title": "Optional tag stats"
        }
      },
      "title": "Tag specification"
    },
    "v1Team": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "title": "Uuid"
        },
        "owner": {
          "type": "string",
          "title": "Owner/namespace where the team was created"
        },
        "name": {
          "type": "string",
          "title": "Name"
        },
        "projects": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "projects"
        },
        "component_hubs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "hubs"
        },
        "model_registries": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "registries"
        },
        "settings": {
          "$ref": "#/definitions/v1TeamSettings",
          "title": "settings"
        },
        "policy": {
          "type": "string",
          "title": "Attached policy"
        },
        "role": {
          "type": "string",
          "title": "Current user's role in this (org/teams)/project"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional time when the entity was created"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional last time the entity was updated"
        }
      },
      "title": "Team specification"
    },
    "v1TeamMember": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string",
          "title": "User"
        },
        "user_email": {
          "type": "string",
          "title": "User email"
        },
        "role": {
          "type": "string",
          "title": "Role"
        },
        "org_role": {
          "type": "string",
          "title": "Organization Role"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional time when the entity was created"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional last time the entity was updated"
        }
      },
      "title": "Team member specification"
    },
    "v1TeamSettings": {
      "type": "object",
      "properties": {
        "projects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1SettingsCatalog"
          },
          "title": "Projects"
        },
        "hubs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1SettingsCatalog"
          },
          "title": "Component hubs"
        },
        "registries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1SettingsCatalog"
          },
          "title": "Model registries"
        }
      },
      "title": "Team Settings specification"
    },
    "v1Template": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "description": {
          "type": "string",
          "title": "Template description"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Fields that require customization"
        }
      },
      "title": "Template specification"
    },
    "v1TensorboardType": {
      "type": "object",
      "properties": {
        "port": {
          "type": "integer",
          "format": "int32",
          "title": "Port to expose the tensorboard service"
        },
        "uuids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A comma separated list of operation's uuids to load the tensorboard logs from"
        },
        "use_names": {
          "type": "boolean",
          "title": "A flag to initialize the paths under the operation's names"
        },
        "path_prefix": {
          "type": "string",
          "title": "An optional path prefix to use for exposing the service"
        },
        "plugins": {
          "type": "string",
          "title": "An optional comma separated list of plugins to install before starting the tensorboard service"
        }
      },
      "title": "Tensorboard type specification"
    },
    "v1Termination": {
      "type": "object",
      "properties": {
        "maxRetries": {
          "type": "integer",
          "format": "int32",
          "title": "Max retries for a specific run"
        },
        "ttl": {
          "type": "integer",
          "format": "int32",
          "title": "A TTL definition"
        },
        "timeout": {
          "type": "integer",
          "format": "int32",
          "title": "A timeout in seconds"
        }
      },
      "description": "Termination specification, it defines how to handle failures, job runtime, and cleanup policy."
    },
    "v1Token": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "title": "UUID"
        },
        "key": {
          "type": "string",
          "title": "Key"
        },
        "name": {
          "type": "string",
          "title": "Optional token name"
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional scopes allowed for this token"
        },
        "services": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional services allowed for this token"
        },
        "started_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional time when the entity was created"
        },
        "expires_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional time when the entity was created"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional time when the entity was created"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional last time the entity was updated"
        },
        "expiration": {
          "type": "integer",
          "format": "int32",
          "title": "Write only expiration day"
        }
      },
      "title": "Token specification"
    },
    "v1Toleration": {
      "type": "object",
      "title": "Placeholder for Toleration"
    },
    "v1TrialStart": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name"
        },
        "email": {
          "type": "string",
          "title": "Email"
        },
        "organization": {
          "type": "string",
          "title": "Organization"
        },
        "plan": {
          "type": "string",
          "title": "Plan"
        },
        "seats": {
          "type": "integer",
          "format": "int32",
          "title": "Sets"
        },
        "details": {
          "type": "object",
          "title": "Details"
        }
      },
      "title": "Trial start"
    },
    "v1TriggerPolicy": {
      "type": "string",
      "enum": [
        "all_succeeded",
        "all_failed",
        "all_done",
        "one_succeeded",
        "one_failed",
        "one_done"
      ],
      "default": "all_succeeded",
      "title": "TriggerPolicy enum"
    },
    "v1TruncationStoppingPolicy": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of this stopping policy, should be equal to \"truncation\"",
          "default": "truncation"
        },
        "percent": {
          "type": "integer",
          "format": "int32",
          "description": "The percentage of runs to stop, at each evaluation interval.\ne.g. 1 - 99."
        },
        "evaluationInterval": {
          "type": "integer",
          "format": "int32",
          "description": "Interval/Frequency for applying the policy."
        },
        "minInterval": {
          "type": "integer",
          "format": "int32",
          "title": "Min interval (e.g steps) before starting the process"
        },
        "minSamples": {
          "type": "integer",
          "format": "int32",
          "title": "Min samples runs succeeded before starting the process"
        },
        "includeSucceeded": {
          "type": "boolean",
          "title": "Flag to include or not the succeeded runs in the calculation"
        }
      },
      "description": "Early stopping with truncation stopping, this policy stops a percentage of\nall running runs at every evaluation."
    },
    "v1Tuner": {
      "type": "object",
      "properties": {
        "hubRef": {
          "type": "string",
          "title": "Component name to use"
        },
        "presets": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional list of presets to use for running this tuner"
        },
        "queue": {
          "type": "string",
          "title": "Optional queue to use for scheduling the tuner"
        },
        "namespace": {
          "type": "string",
          "title": "Optional namespace to use, uses agent's namespace by default"
        },
        "params": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1Param"
          },
          "title": "Optional dict of params"
        }
      },
      "title": "Tuner definition"
    },
    "v1UriType": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string",
          "title": "Optional user"
        },
        "password": {
          "type": "string",
          "title": "Optional password"
        },
        "host": {
          "type": "boolean",
          "title": "Optional host"
        }
      },
      "title": "Uri type specification"
    },
    "v1UrlRef": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of reference, should be equal to \"url_ref\"",
          "default": "url_ref"
        },
        "url": {
          "type": "string",
          "title": "Value"
        }
      },
      "title": "Url reference specification"
    },
    "v1User": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "title": "Username"
        },
        "email": {
          "type": "string",
          "title": "Email"
        },
        "name": {
          "type": "string",
          "title": "Name"
        },
        "kind": {
          "type": "string",
          "title": "Kind"
        },
        "theme": {
          "type": "integer",
          "format": "int32",
          "title": "Theme"
        },
        "organization": {
          "type": "string",
          "title": "Default organization"
        }
      },
      "title": "Auth specification"
    },
    "v1UserAccess": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string",
          "title": "User to give access to"
        },
        "user_data": {
          "$ref": "#/definitions/v1UserAccessData",
          "title": "Optional graph definition"
        },
        "queue": {
          "type": "string",
          "title": "Optional queue to configure for user"
        },
        "default_presets": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional default presets to configure for user"
        },
        "default_presets_ordered": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Default presets ordered"
        },
        "namespace": {
          "type": "string",
          "title": "Optiona namespace to configure for user"
        }
      },
      "title": "User request"
    },
    "v1UserAccessData": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "title": "Username"
        },
        "is_sa": {
          "type": "boolean",
          "title": "Is service account"
        }
      }
    },
    "v1UserEmail": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "title": "User username"
        }
      },
      "title": "User email"
    },
    "v1UserSingup": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "title": "User username"
        },
        "email": {
          "type": "string",
          "title": "User email"
        },
        "organization": {
          "type": "string",
          "title": "User organization"
        },
        "password": {
          "type": "string",
          "title": "User password"
        },
        "invitation_key": {
          "type": "string",
          "title": "Invitation key"
        }
      },
      "title": "User singup"
    },
    "v1Uuids": {
      "type": "object",
      "properties": {
        "uuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1Validation": {
      "type": "object",
      "properties": {
        "delay": {
          "type": "boolean",
          "title": "Validation delay"
        },
        "gt": {
          "type": "integer",
          "format": "int32",
          "title": "Numeric Constraints (these constraints are also applied item wise for lists and for dict values)"
        },
        "ge": {
          "type": "integer",
          "format": "int32"
        },
        "lt": {
          "type": "integer",
          "format": "int32"
        },
        "le": {
          "type": "integer",
          "format": "int32"
        },
        "multipleOf": {
          "type": "integer",
          "format": "int32"
        },
        "minDigits": {
          "type": "integer",
          "format": "int32",
          "title": "Decimal Constraints (these constraints are also applied item wise for lists and for dict values)"
        },
        "maxDigits": {
          "type": "integer",
          "format": "int32"
        },
        "decimalPlaces": {
          "type": "integer",
          "format": "int32"
        },
        "regex": {
          "type": "string",
          "title": "String Constraints (these constraints are also applied item wise for lists and for dict values)"
        },
        "minLength": {
          "type": "integer",
          "format": "int32"
        },
        "maxLength": {
          "type": "integer",
          "format": "int32"
        },
        "contains": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "title": "Generic"
        },
        "excludes": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "options": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "minItems": {
          "type": "integer",
          "format": "int32",
          "title": "Items Constraints"
        },
        "maxItems": {
          "type": "integer",
          "format": "int32"
        },
        "keys": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Dict keys Constraints"
        },
        "containsKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "excludesKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Validation specification based on pydantic"
    },
    "v1Version": {
      "type": "object",
      "properties": {
        "min": {
          "type": "string",
          "title": "Min version"
        },
        "latest": {
          "type": "string",
          "title": "Latest version"
        }
      },
      "title": "Version specification"
    },
    "v1Volume": {
      "type": "object",
      "title": "Placeholder for Volume"
    },
    "v1WasbType": {
      "type": "object",
      "properties": {
        "container": {
          "type": "string",
          "title": "Optional container"
        },
        "storageAccount": {
          "type": "string",
          "title": "Optional storage_account"
        },
        "path": {
          "type": "boolean",
          "title": "Optional path"
        }
      },
      "title": "Wasb type specification"
    },
    "v1XGBoostJob": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Optional component kind, should be equal to 'xgboostjob'",
          "default": "xgboostjob"
        },
        "cleanPodPolicy": {
          "$ref": "#/definitions/v1CleanPodPolicy",
          "title": "optional clean pod policy section"
        },
        "schedulingPolicy": {
          "$ref": "#/definitions/v1SchedulingPolicy",
          "title": "optional scheduling policy section"
        },
        "master": {
          "$ref": "#/definitions/v1KFReplica",
          "title": "Master replicas definition"
        },
        "worker": {
          "$ref": "#/definitions/v1KFReplica",
          "title": "Worker replicas definition"
        }
      },
      "title": "XGBoost Job specification"
    },
    "v1AverageStoppingPolicy": {
      "properties": {
        "kind": {
          "default": "average"
        }
      }
    }
  },
  "securityDefinitions": {
    "ApiKey": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "ApiKey": []
    }
  ]
}
