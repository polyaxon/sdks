{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Polyaxon SDKs and REST API specification.",
    "description" : "   ",
    "contact" : {
      "name" : "Polyaxon sdk",
      "url" : "https://github.com/polyaxon/polyaxon",
      "email" : "contact@polyaxon.com"
    },
    "version" : "2.10.0"
  },
  "servers" : [ {
    "url" : "/"
  } ],
  "security" : [ {
    "ApiKey" : [ ]
  } ],
  "paths" : {
    "/api/v1/archives/{user}/projects" : {
      "get" : {
        "tags" : [ "ProjectsV1" ],
        "summary" : "List archived projects for user",
        "operationId" : "ListArchivedProjects",
        "parameters" : [ {
          "name" : "user",
          "in" : "path",
          "description" : "User",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListProjectsResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/archives/{user}/runs" : {
      "get" : {
        "tags" : [ "RunsV1" ],
        "summary" : "List archived runs for user",
        "operationId" : "ListArchivedRuns",
        "parameters" : [ {
          "name" : "user",
          "in" : "path",
          "description" : "User",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListRunsResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/change-password" : {
      "post" : {
        "tags" : [ "AuthV1" ],
        "summary" : "Change password",
        "operationId" : "ChangePassword",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1PasswordChange"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/auth/reset-password" : {
      "post" : {
        "tags" : [ "AuthV1" ],
        "summary" : "Reset password",
        "operationId" : "ResetPassword",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1UserEmail"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/auth/reset-password-confirm" : {
      "post" : {
        "tags" : [ "AuthV1" ],
        "summary" : "Reset password confirm",
        "operationId" : "ResetPasswordConfirm",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1PasswordChange"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Auth"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/auth/signup" : {
      "post" : {
        "tags" : [ "AuthV1" ],
        "summary" : "Signup",
        "operationId" : "Signup",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1UserSingup"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Auth"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/auth/token" : {
      "post" : {
        "tags" : [ "AuthV1" ],
        "summary" : "Login",
        "operationId" : "Login",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Credentials"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Auth"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/auth/trial" : {
      "post" : {
        "tags" : [ "AuthV1" ],
        "summary" : "Trial Start",
        "operationId" : "Trial",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1TrialStart"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/bookmarks/{user}/projects" : {
      "get" : {
        "tags" : [ "ProjectsV1" ],
        "summary" : "List bookmarked projects for user",
        "operationId" : "ListBookmarkedProjects",
        "parameters" : [ {
          "name" : "user",
          "in" : "path",
          "description" : "User",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListBookmarksResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bookmarks/{user}/runs" : {
      "get" : {
        "tags" : [ "RunsV1" ],
        "summary" : "List bookmarked runs for user",
        "operationId" : "ListBookmarkedRuns",
        "parameters" : [ {
          "name" : "user",
          "in" : "path",
          "description" : "User",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListBookmarksResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/compatibility/{uuid}/{version}/{service}" : {
      "get" : {
        "tags" : [ "VersionsV1" ],
        "summary" : "Get compatibility versions",
        "operationId" : "GetCompatibility",
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "UUid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version",
          "in" : "path",
          "description" : "Version",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "service",
          "in" : "path",
          "description" : "Service",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Compatibility"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/installation" : {
      "get" : {
        "tags" : [ "VersionsV1" ],
        "summary" : "Get installation versions",
        "operationId" : "GetInstallation",
        "parameters" : [ {
          "name" : "auth",
          "in" : "query",
          "description" : "auth.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "orgs",
          "in" : "query",
          "description" : "orgs.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Installation"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/log_handler" : {
      "get" : {
        "tags" : [ "VersionsV1" ],
        "summary" : "Get log handler versions",
        "operationId" : "GetLogHandler",
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1LogHandler"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/create" : {
      "post" : {
        "tags" : [ "OrganizationsV1" ],
        "summary" : "Create organization",
        "operationId" : "CreateOrganization",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Organization"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Organization"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/list" : {
      "get" : {
        "tags" : [ "OrganizationsV1" ],
        "summary" : "List organizations",
        "operationId" : "ListOrganizations",
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListOrganizationsResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/names" : {
      "get" : {
        "tags" : [ "OrganizationsV1" ],
        "summary" : "List organizations names",
        "operationId" : "ListOrganizationNames",
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListOrganizationsResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/{owner}" : {
      "get" : {
        "tags" : [ "OrganizationsV1" ],
        "summary" : "Get organization",
        "operationId" : "GetOrganization",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "usage",
          "in" : "query",
          "description" : "Owner usage query param.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Organization"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "OrganizationsV1" ],
        "summary" : "Update organization",
        "operationId" : "UpdateOrganization",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Organization body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Organization"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Organization"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      },
      "delete" : {
        "tags" : [ "OrganizationsV1" ],
        "summary" : "Delete organization",
        "operationId" : "DeleteOrganization",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "usage",
          "in" : "query",
          "description" : "Owner usage query param.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "OrganizationsV1" ],
        "summary" : "Patch organization",
        "operationId" : "PatchOrganization",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Organization body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Organization"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Organization"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/activities" : {
      "get" : {
        "tags" : [ "OrganizationsV1" ],
        "summary" : "Get organization activities",
        "operationId" : "GetOrganizationActivities",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bookmarks",
          "in" : "query",
          "description" : "Filter by bookmarks.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "Mode of the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListActivitiesResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/{owner}/agents" : {
      "get" : {
        "tags" : [ "AgentsV1" ],
        "summary" : "List agents",
        "operationId" : "ListAgents",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bookmarks",
          "in" : "query",
          "description" : "Filter by bookmarks.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "Mode of the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListAgentsResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "AgentsV1" ],
        "summary" : "Create agent",
        "operationId" : "CreateAgent",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Agent body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Agent"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Agent"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/agents/cron" : {
      "post" : {
        "tags" : [ "AgentsV1" ],
        "summary" : "Global Cron",
        "operationId" : "CronAgent",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Cron body",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1AgentStateResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/agents/names" : {
      "get" : {
        "tags" : [ "AgentsV1" ],
        "summary" : "List agents names",
        "operationId" : "ListAgentNames",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bookmarks",
          "in" : "query",
          "description" : "Filter by bookmarks.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "Mode of the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListAgentsResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/{owner}/agents/state" : {
      "get" : {
        "tags" : [ "AgentsV1" ],
        "summary" : "Get Global State (queues/runs)",
        "operationId" : "GetGlobalState",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1AgentStateResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/{owner}/agents/{agent.uuid}" : {
      "put" : {
        "tags" : [ "AgentsV1" ],
        "summary" : "Update agent",
        "operationId" : "UpdateAgent",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "agent.uuid",
          "in" : "path",
          "description" : "UUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Agent body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Agent"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Agent"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      },
      "patch" : {
        "tags" : [ "AgentsV1" ],
        "summary" : "Patch agent",
        "operationId" : "PatchAgent",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "agent.uuid",
          "in" : "path",
          "description" : "UUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Agent body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Agent"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Agent"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/agents/{agent.uuid}/config" : {
      "patch" : {
        "tags" : [ "AgentsV1" ],
        "summary" : "Update agent config",
        "operationId" : "UpdateAgentConfig",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "agent.uuid",
          "in" : "path",
          "description" : "UUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Agent body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Agent"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Agent"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/agents/{agent.uuid}/sync" : {
      "patch" : {
        "tags" : [ "AgentsV1" ],
        "summary" : "Sync agent",
        "operationId" : "SyncAgent",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "agent.uuid",
          "in" : "path",
          "description" : "UUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Agent body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Agent"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/agents/{agent}/queues" : {
      "post" : {
        "tags" : [ "QueuesV1" ],
        "summary" : "Create queue",
        "operationId" : "CreateQueue",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "agent",
          "in" : "path",
          "description" : "Agent that consumes the queue",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Queue body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Queue"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Queue"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/agents/{agent}/queues/{queue.uuid}" : {
      "put" : {
        "tags" : [ "QueuesV1" ],
        "summary" : "Update queue",
        "operationId" : "UpdateQueue",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "agent",
          "in" : "path",
          "description" : "Agent that consumes the queue",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "queue.uuid",
          "in" : "path",
          "description" : "UUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Queue body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Queue"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Queue"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      },
      "patch" : {
        "tags" : [ "QueuesV1" ],
        "summary" : "Patch queue",
        "operationId" : "PatchQueue",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "agent",
          "in" : "path",
          "description" : "Agent that consumes the queue",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "queue.uuid",
          "in" : "path",
          "description" : "UUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Queue body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Queue"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Queue"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/agents/{entity}/queues/{uuid}" : {
      "get" : {
        "tags" : [ "QueuesV1" ],
        "summary" : "Get queue",
        "operationId" : "GetQueue",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Entity: project name, hub name, registry name, ...",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the sub-entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Queue"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "QueuesV1" ],
        "summary" : "Delete queue",
        "operationId" : "DeleteQueue",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Entity: project name, hub name, registry name, ...",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the sub-entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/{owner}/agents/{entity}/queues/{uuid}/stats" : {
      "get" : {
        "tags" : [ "QueuesV1" ],
        "summary" : "Get queue stats",
        "operationId" : "GetQueueStats",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Entity name under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "SubEntity uuid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bookmarks",
          "in" : "query",
          "description" : "Filter by bookmarks.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "Stats Mode.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "kind",
          "in" : "query",
          "description" : "Stats Kind.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "aggregate",
          "in" : "query",
          "description" : "Stats aggregate.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupby",
          "in" : "query",
          "description" : "Stats group.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "trunc",
          "in" : "query",
          "description" : "Stats trunc.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "start_date",
          "in" : "query",
          "description" : "Stats start date.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "end_date",
          "in" : "query",
          "description" : "Stats end date.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boundary",
          "in" : "query",
          "description" : "Stats boundary.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/{owner}/agents/{entity}/token" : {
      "put" : {
        "tags" : [ "AgentsV1" ],
        "summary" : "Update agent token",
        "operationId" : "UpdateAgentToken",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Token body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Token"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Token"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      },
      "patch" : {
        "tags" : [ "AgentsV1" ],
        "summary" : "Patch agent token",
        "operationId" : "PatchAgentToken",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Token body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Token"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Token"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/agents/{name}/queues" : {
      "get" : {
        "tags" : [ "QueuesV1" ],
        "summary" : "List queues",
        "operationId" : "ListQueues",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Entity managing the resource",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bookmarks",
          "in" : "query",
          "description" : "Filter by bookmarks.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "Mode of the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListQueuesResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/{owner}/agents/{name}/queues/names" : {
      "get" : {
        "tags" : [ "QueuesV1" ],
        "summary" : "List queues names",
        "operationId" : "ListQueueNames",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Entity managing the resource",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bookmarks",
          "in" : "query",
          "description" : "Filter by bookmarks.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "Mode of the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListQueuesResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/{owner}/agents/{uuid}" : {
      "get" : {
        "tags" : [ "AgentsV1" ],
        "summary" : "Get agent",
        "operationId" : "GetAgent",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the sub-entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "query",
          "description" : "Entity: project name, hub name, registry name, ...",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Agent"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AgentsV1" ],
        "summary" : "Delete agent",
        "operationId" : "DeleteAgent",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the sub-entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "query",
          "description" : "Entity: project name, hub name, registry name, ...",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/{owner}/agents/{uuid}/config" : {
      "get" : {
        "tags" : [ "AgentsV1" ],
        "summary" : "Get agent config",
        "operationId" : "GetAgentConfig",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the sub-entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "query",
          "description" : "Entity: project name, hub name, registry name, ...",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Agent"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/{owner}/agents/{uuid}/reconcile" : {
      "patch" : {
        "tags" : [ "AgentsV1" ],
        "summary" : "Reconcile agent",
        "operationId" : "ReconcileAgent",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1AgentReconcileBodyRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/agents/{uuid}/state" : {
      "get" : {
        "tags" : [ "AgentsV1" ],
        "summary" : "Get State (queues/runs)",
        "operationId" : "GetAgentState",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1AgentStateResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/{owner}/agents/{uuid}/stats" : {
      "get" : {
        "tags" : [ "AgentsV1" ],
        "summary" : "Get agent stats",
        "operationId" : "GetAgentStats",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "SubEntity uuid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "query",
          "description" : "Entity name under namespace.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bookmarks",
          "in" : "query",
          "description" : "Filter by bookmarks.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "Stats Mode.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "kind",
          "in" : "query",
          "description" : "Stats Kind.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "aggregate",
          "in" : "query",
          "description" : "Stats aggregate.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupby",
          "in" : "query",
          "description" : "Stats group.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "trunc",
          "in" : "query",
          "description" : "Stats trunc.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "start_date",
          "in" : "query",
          "description" : "Stats start date.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "end_date",
          "in" : "query",
          "description" : "Stats end date.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boundary",
          "in" : "query",
          "description" : "Stats boundary.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/{owner}/agents/{uuid}/statuses" : {
      "get" : {
        "tags" : [ "AgentsV1" ],
        "summary" : "Get Agent statuses",
        "operationId" : "GetAgentStatuses",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the sub-entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "query",
          "description" : "Entity: project name, hub name, registry name, ...",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Status"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "AgentsV1" ],
        "summary" : "Create new agent status",
        "operationId" : "CreateAgentStatus",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1AgentStatusBodyRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Status"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/agents/{uuid}/token" : {
      "get" : {
        "tags" : [ "AgentsV1" ],
        "summary" : "Get agent token",
        "operationId" : "GetAgentToken",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Token"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/{owner}/connections" : {
      "get" : {
        "tags" : [ "ConnectionsV1" ],
        "summary" : "List connections",
        "operationId" : "ListConnections",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bookmarks",
          "in" : "query",
          "description" : "Filter by bookmarks.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "Mode of the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListConnectionsResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "ConnectionsV1" ],
        "summary" : "Create connection",
        "operationId" : "CreateConnection",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Connection body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1ConnectionResponse"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ConnectionResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/connections/names" : {
      "get" : {
        "tags" : [ "ConnectionsV1" ],
        "summary" : "List connections names",
        "operationId" : "ListConnectionNames",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bookmarks",
          "in" : "query",
          "description" : "Filter by bookmarks.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "Mode of the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListConnectionsResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/{owner}/connections/{connection.uuid}" : {
      "put" : {
        "tags" : [ "ConnectionsV1" ],
        "summary" : "Update connection",
        "operationId" : "UpdateConnection",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "connection.uuid",
          "in" : "path",
          "description" : "UUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Connection body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1ConnectionResponse"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ConnectionResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      },
      "patch" : {
        "tags" : [ "ConnectionsV1" ],
        "summary" : "Patch connection",
        "operationId" : "PatchConnection",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "connection.uuid",
          "in" : "path",
          "description" : "UUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Connection body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1ConnectionResponse"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ConnectionResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/connections/{uuid}" : {
      "get" : {
        "tags" : [ "ConnectionsV1" ],
        "summary" : "Get connection",
        "operationId" : "GetConnection",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ConnectionResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ConnectionsV1" ],
        "summary" : "Delete connection",
        "operationId" : "DeleteConnection",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/{owner}/dashboards" : {
      "get" : {
        "tags" : [ "DashboardsV1" ],
        "summary" : "List dashboards",
        "operationId" : "ListDashboards",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bookmarks",
          "in" : "query",
          "description" : "Filter by bookmarks.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "Mode of the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListDashboardsResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "DashboardsV1" ],
        "summary" : "Create dashboard",
        "operationId" : "CreateDashboard",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Dashboard body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Dashboard"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Dashboard"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/dashboards/names" : {
      "get" : {
        "tags" : [ "DashboardsV1" ],
        "summary" : "List dashboard names",
        "operationId" : "ListDashboardNames",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bookmarks",
          "in" : "query",
          "description" : "Filter by bookmarks.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "Mode of the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListDashboardsResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/{owner}/dashboards/{dashboard.uuid}" : {
      "put" : {
        "tags" : [ "DashboardsV1" ],
        "summary" : "Update dashboard",
        "operationId" : "UpdateDashboard",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dashboard.uuid",
          "in" : "path",
          "description" : "UUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Dashboard body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Dashboard"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Dashboard"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      },
      "patch" : {
        "tags" : [ "DashboardsV1" ],
        "summary" : "Patch dashboard",
        "operationId" : "PatchDashboard",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dashboard.uuid",
          "in" : "path",
          "description" : "UUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Dashboard body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Dashboard"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Dashboard"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/dashboards/{uuid}" : {
      "get" : {
        "tags" : [ "DashboardsV1" ],
        "summary" : "Get dashboard",
        "operationId" : "GetDashboard",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Dashboard"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "DashboardsV1" ],
        "summary" : "Delete dashboard",
        "operationId" : "DeleteDashboard",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/{owner}/invitations" : {
      "get" : {
        "tags" : [ "OrganizationsV1" ],
        "summary" : "Get organization invitation details",
        "operationId" : "GetOrganizationInvitation",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "member.user",
          "in" : "query",
          "description" : "User.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "member.user_email",
          "in" : "query",
          "description" : "Read-only User email.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "member.role",
          "in" : "query",
          "description" : "Role.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "member.kind",
          "in" : "query",
          "description" : "Kind.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "member.created_at",
          "in" : "query",
          "description" : "Optional time when the entity was created.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "member.updated_at",
          "in" : "query",
          "description" : "Optional last time the entity was updated.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "email",
          "in" : "query",
          "description" : "Optional email.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1OrganizationMember"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "OrganizationsV1" ],
        "summary" : "Update organization invitation",
        "operationId" : "UpdateOrganizationInvitation",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "email",
          "in" : "query",
          "description" : "Optional email.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Organization body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1OrganizationMember"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1OrganizationMember"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      },
      "post" : {
        "tags" : [ "OrganizationsV1" ],
        "summary" : "Resend organization invitation",
        "operationId" : "ResendOrganizationInvitation",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "email",
          "in" : "query",
          "description" : "Optional email.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Organization body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1OrganizationMember"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1OrganizationMember"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      },
      "delete" : {
        "tags" : [ "OrganizationsV1" ],
        "summary" : "Delete organization invitation details",
        "operationId" : "DeleteOrganizationInvitation",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "member.user",
          "in" : "query",
          "description" : "User.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "member.user_email",
          "in" : "query",
          "description" : "Read-only User email.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "member.role",
          "in" : "query",
          "description" : "Role.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "member.kind",
          "in" : "query",
          "description" : "Kind.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "member.created_at",
          "in" : "query",
          "description" : "Optional time when the entity was created.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "member.updated_at",
          "in" : "query",
          "description" : "Optional last time the entity was updated.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "email",
          "in" : "query",
          "description" : "Optional email.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "OrganizationsV1" ],
        "summary" : "Patch organization invitation",
        "operationId" : "PatchOrganizationInvitation",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "email",
          "in" : "query",
          "description" : "Optional email.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Organization body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1OrganizationMember"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1OrganizationMember"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/license" : {
      "post" : {
        "tags" : [ "OrganizationsV1" ],
        "summary" : "Organization license",
        "operationId" : "OrganizationLicense",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Organization body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Organization"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Organization"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/members" : {
      "get" : {
        "tags" : [ "OrganizationsV1" ],
        "summary" : "Get organization members",
        "operationId" : "ListOrganizationMembers",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bookmarks",
          "in" : "query",
          "description" : "Filter by bookmarks.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "Mode of the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListOrganizationMembersResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "OrganizationsV1" ],
        "summary" : "Create organization member",
        "operationId" : "CreateOrganizationMember",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "email",
          "in" : "query",
          "description" : "Optional email.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Organization body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1OrganizationMember"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1OrganizationMember"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/members/names" : {
      "get" : {
        "tags" : [ "OrganizationsV1" ],
        "summary" : "Get organization member names",
        "operationId" : "ListOrganizationMemberNames",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bookmarks",
          "in" : "query",
          "description" : "Filter by bookmarks.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "Mode of the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListOrganizationMembersResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/{owner}/members/{member.user}" : {
      "put" : {
        "tags" : [ "OrganizationsV1" ],
        "summary" : "Update organization member",
        "operationId" : "UpdateOrganizationMember",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "member.user",
          "in" : "path",
          "description" : "User",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "email",
          "in" : "query",
          "description" : "Optional email.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Organization body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1OrganizationMember"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1OrganizationMember"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      },
      "patch" : {
        "tags" : [ "OrganizationsV1" ],
        "summary" : "Patch organization member",
        "operationId" : "PatchOrganizationMember",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "member.user",
          "in" : "path",
          "description" : "User",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "email",
          "in" : "query",
          "description" : "Optional email.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Organization body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1OrganizationMember"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1OrganizationMember"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/members/{name}" : {
      "get" : {
        "tags" : [ "OrganizationsV1" ],
        "summary" : "Get organization member details",
        "operationId" : "GetOrganizationMember",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Component under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1OrganizationMember"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "OrganizationsV1" ],
        "summary" : "Delete organization member details",
        "operationId" : "DeleteOrganizationMember",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Component under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/{owner}/plan" : {
      "post" : {
        "tags" : [ "OrganizationsV1" ],
        "summary" : "Organization plan",
        "operationId" : "OrganizationPlan",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Organization body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Organization"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Organization"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/policies" : {
      "get" : {
        "tags" : [ "PoliciesV1" ],
        "summary" : "List Policies",
        "operationId" : "ListPolicies",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bookmarks",
          "in" : "query",
          "description" : "Filter by bookmarks.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "Mode of the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListPoliciesResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "PoliciesV1" ],
        "summary" : "Create Policy",
        "operationId" : "CreatePolicy",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Policy body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Policy"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Policy"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/policies/names" : {
      "get" : {
        "tags" : [ "PoliciesV1" ],
        "summary" : "List scheduling policies names",
        "operationId" : "ListPolicyNames",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bookmarks",
          "in" : "query",
          "description" : "Filter by bookmarks.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "Mode of the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListPoliciesResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/{owner}/policies/{policy.uuid}" : {
      "put" : {
        "tags" : [ "PoliciesV1" ],
        "summary" : "Update Policy",
        "operationId" : "UpdatePolicy",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "policy.uuid",
          "in" : "path",
          "description" : "UUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Policy body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Policy"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Policy"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      },
      "patch" : {
        "tags" : [ "PoliciesV1" ],
        "summary" : "Patch Policy",
        "operationId" : "PatchPolicy",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "policy.uuid",
          "in" : "path",
          "description" : "UUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Policy body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Policy"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Policy"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/policies/{uuid}" : {
      "get" : {
        "tags" : [ "PoliciesV1" ],
        "summary" : "Get Policy",
        "operationId" : "GetPolicy",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the sub-entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "query",
          "description" : "Entity: project name, hub name, registry name, ...",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Policy"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "PoliciesV1" ],
        "summary" : "Delete scheduling preset",
        "operationId" : "DeletePolicy",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the sub-entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "query",
          "description" : "Entity: project name, hub name, registry name, ...",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/{owner}/presets" : {
      "get" : {
        "tags" : [ "PresetsV1" ],
        "summary" : "List scheduling presets",
        "operationId" : "ListPresets",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bookmarks",
          "in" : "query",
          "description" : "Filter by bookmarks.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "Mode of the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListPresetsResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "PresetsV1" ],
        "summary" : "Create scheduling presets",
        "operationId" : "CreatePreset",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Preset body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Preset"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Preset"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/presets/names" : {
      "get" : {
        "tags" : [ "PresetsV1" ],
        "summary" : "List scheduling presets names",
        "operationId" : "ListPresetNames",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bookmarks",
          "in" : "query",
          "description" : "Filter by bookmarks.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "Mode of the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListPresetsResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/{owner}/presets/{preset.uuid}" : {
      "put" : {
        "tags" : [ "PresetsV1" ],
        "summary" : "Update scheduling preset",
        "operationId" : "UpdatePreset",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "preset.uuid",
          "in" : "path",
          "description" : "UUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Preset body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Preset"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Preset"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      },
      "patch" : {
        "tags" : [ "PresetsV1" ],
        "summary" : "Patch scheduling preset",
        "operationId" : "PatchPreset",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "preset.uuid",
          "in" : "path",
          "description" : "UUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Preset body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Preset"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Preset"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/presets/{uuid}" : {
      "get" : {
        "tags" : [ "PresetsV1" ],
        "summary" : "Get scheduling preset",
        "operationId" : "GetPreset",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the sub-entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "query",
          "description" : "Entity: project name, hub name, registry name, ...",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Preset"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "PresetsV1" ],
        "summary" : "Delete scheduling preset",
        "operationId" : "DeletePreset",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the sub-entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "query",
          "description" : "Entity: project name, hub name, registry name, ...",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/{owner}/queues" : {
      "get" : {
        "tags" : [ "QueuesV1" ],
        "summary" : "List organization level queues",
        "operationId" : "ListOrganizationQueues",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bookmarks",
          "in" : "query",
          "description" : "Filter by bookmarks.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "Mode of the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListQueuesResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/{owner}/queues/names" : {
      "get" : {
        "tags" : [ "QueuesV1" ],
        "summary" : "List organization level queues names",
        "operationId" : "ListOrganizationQueueNames",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bookmarks",
          "in" : "query",
          "description" : "Filter by bookmarks.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "Mode of the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListQueuesResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/{owner}/runs" : {
      "get" : {
        "tags" : [ "OrganizationsV1" ],
        "summary" : "Get all runs in an organization",
        "operationId" : "GetOrganizationRuns",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bookmarks",
          "in" : "query",
          "description" : "Filter by bookmarks.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "Mode of the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListRunsResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/{owner}/runs/Skip" : {
      "post" : {
        "tags" : [ "OrganizationsV1" ],
        "summary" : "Skip cross-project runs selection",
        "operationId" : "SkipOrganizationRuns",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Uuids of the entities",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Uuids"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/runs/approve" : {
      "post" : {
        "tags" : [ "OrganizationsV1" ],
        "summary" : "Approve cross-project runs selection",
        "operationId" : "ApproveOrganizationRuns",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Uuids of the entities",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Uuids"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/runs/archive" : {
      "post" : {
        "tags" : [ "OrganizationsV1" ],
        "summary" : "Archive cross-project runs selection",
        "operationId" : "ArchiveOrganizationRuns",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Uuids of the entities",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Uuids"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/runs/bookmark" : {
      "post" : {
        "tags" : [ "OrganizationsV1" ],
        "summary" : "Bookmark cross-project runs selection",
        "operationId" : "BookmarkOrganizationRuns",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Uuids of the entities",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Uuids"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/runs/delete" : {
      "delete" : {
        "tags" : [ "OrganizationsV1" ],
        "summary" : "Delete cross-project runs selection",
        "operationId" : "DeleteOrganizationRuns",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Uuids of the entities",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Uuids"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/runs/invalidate" : {
      "post" : {
        "tags" : [ "OrganizationsV1" ],
        "summary" : "Invalidate cross-project runs selection",
        "operationId" : "InvalidateOrganizationRuns",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Uuids of the entities",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Uuids"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/runs/lineage/artifacts" : {
      "get" : {
        "tags" : [ "OrganizationsV1" ],
        "summary" : "Get runs artifacts lineage",
        "operationId" : "GetOrganizationRunsArtifactsLineage",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "Entity managing the resource.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bookmarks",
          "in" : "query",
          "description" : "Filter by bookmarks.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "Mode of the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListRunArtifactsResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/{owner}/runs/restore" : {
      "post" : {
        "tags" : [ "OrganizationsV1" ],
        "summary" : "Restore cross-project runs selection",
        "operationId" : "RestoreOrganizationRuns",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Uuids of the entities",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Uuids"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/runs/stop" : {
      "post" : {
        "tags" : [ "OrganizationsV1" ],
        "summary" : "Stop cross-project runs selection",
        "operationId" : "StopOrganizationRuns",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Uuids of the entities",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Uuids"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/runs/tag" : {
      "post" : {
        "tags" : [ "OrganizationsV1" ],
        "summary" : "Tag cross-project runs selection",
        "operationId" : "TagOrganizationRuns",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1EntitiesTags"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/runs/transfer" : {
      "post" : {
        "tags" : [ "OrganizationsV1" ],
        "summary" : "Transfer cross-project runs selection to a new project",
        "operationId" : "TransferOrganizationRuns",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1EntitiesTransfer"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/runs/{uuid}" : {
      "get" : {
        "tags" : [ "OrganizationsV1" ],
        "summary" : "Get a run in an organization",
        "operationId" : "GetOrganizationRun",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Run"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/{owner}/sa" : {
      "get" : {
        "tags" : [ "ServiceAccountsV1" ],
        "summary" : "List service accounts",
        "operationId" : "ListServiceAccounts",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bookmarks",
          "in" : "query",
          "description" : "Filter by bookmarks.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "Mode of the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListServiceAccountsResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "ServiceAccountsV1" ],
        "summary" : "Create service account",
        "operationId" : "CreateServiceAccount",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "ServiceAccount body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1ServiceAccount"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ServiceAccount"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/sa/names" : {
      "get" : {
        "tags" : [ "ServiceAccountsV1" ],
        "summary" : "List service accounts names",
        "operationId" : "ListServiceAccountNames",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bookmarks",
          "in" : "query",
          "description" : "Filter by bookmarks.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "Mode of the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListServiceAccountsResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/{owner}/sa/{entity}/tokens" : {
      "post" : {
        "tags" : [ "ServiceAccountsV1" ],
        "summary" : "Create service account token",
        "operationId" : "CreateServiceAccountToken",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Token body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Token"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Token"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/sa/{entity}/tokens/{token.uuid}" : {
      "put" : {
        "tags" : [ "ServiceAccountsV1" ],
        "summary" : "Update service account token",
        "operationId" : "UpdateServiceAccountToken",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "token.uuid",
          "in" : "path",
          "description" : "UUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Token body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Token"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Token"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      },
      "patch" : {
        "tags" : [ "ServiceAccountsV1" ],
        "summary" : "Patch service account token",
        "operationId" : "PatchServiceAccountToken",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "token.uuid",
          "in" : "path",
          "description" : "UUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Token body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Token"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Token"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/sa/{entity}/tokens/{uuid}" : {
      "get" : {
        "tags" : [ "ServiceAccountsV1" ],
        "summary" : "Get service account token",
        "operationId" : "GetServiceAccountToken",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Entity: project name, hub name, registry name, ...",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the sub-entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Token"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ServiceAccountsV1" ],
        "summary" : "Delete service account token",
        "operationId" : "DeleteServiceAccountToken",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Entity: project name, hub name, registry name, ...",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the sub-entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/{owner}/sa/{sa.uuid}" : {
      "put" : {
        "tags" : [ "ServiceAccountsV1" ],
        "summary" : "Update service account",
        "operationId" : "UpdateServiceAccount",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sa.uuid",
          "in" : "path",
          "description" : "UUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "ServiceAccount body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1ServiceAccount"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ServiceAccount"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      },
      "patch" : {
        "tags" : [ "ServiceAccountsV1" ],
        "summary" : "Patch service account",
        "operationId" : "PatchServiceAccount",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sa.uuid",
          "in" : "path",
          "description" : "UUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "ServiceAccount body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1ServiceAccount"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ServiceAccount"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/sa/{uuid}" : {
      "get" : {
        "tags" : [ "ServiceAccountsV1" ],
        "summary" : "Get service account",
        "operationId" : "GetServiceAccount",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ServiceAccount"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ServiceAccountsV1" ],
        "summary" : "Delete service account",
        "operationId" : "DeleteServiceAccount",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/{owner}/sa/{uuid}/tokens" : {
      "get" : {
        "tags" : [ "ServiceAccountsV1" ],
        "summary" : "List service account tokens",
        "operationId" : "ListServiceAccountTokens",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "SubEntity uuid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "query",
          "description" : "Entity name under namespace.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListTokenResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/{owner}/searches" : {
      "get" : {
        "tags" : [ "SearchesV1" ],
        "summary" : "List searches",
        "operationId" : "ListSearches",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bookmarks",
          "in" : "query",
          "description" : "Filter by bookmarks.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "Mode of the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListSearchesResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "SearchesV1" ],
        "summary" : "Create search",
        "operationId" : "CreateSearch",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Search body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Search"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Search"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/searches/names" : {
      "get" : {
        "tags" : [ "SearchesV1" ],
        "summary" : "List search names",
        "operationId" : "ListSearchNames",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bookmarks",
          "in" : "query",
          "description" : "Filter by bookmarks.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "Mode of the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListSearchesResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/{owner}/searches/{search.uuid}" : {
      "put" : {
        "tags" : [ "SearchesV1" ],
        "summary" : "Update search",
        "operationId" : "UpdateSearch",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "search.uuid",
          "in" : "path",
          "description" : "UUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Search body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Search"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Search"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      },
      "patch" : {
        "tags" : [ "SearchesV1" ],
        "summary" : "Patch search",
        "operationId" : "PatchSearch",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "search.uuid",
          "in" : "path",
          "description" : "UUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Search body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Search"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Search"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/searches/{uuid}" : {
      "get" : {
        "tags" : [ "SearchesV1" ],
        "summary" : "Get search",
        "operationId" : "GetSearch",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Search"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "SearchesV1" ],
        "summary" : "Delete search",
        "operationId" : "DeleteSearch",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/{owner}/settings" : {
      "get" : {
        "tags" : [ "OrganizationsV1" ],
        "summary" : "Get organization settings",
        "operationId" : "GetOrganizationSettings",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "organization.user",
          "in" : "query",
          "description" : "User.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "organization.user_email",
          "in" : "query",
          "description" : "Read-only User email.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "organization.name",
          "in" : "query",
          "description" : "Name.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "organization.is_public",
          "in" : "query",
          "description" : "Optional flag to tell if this organization is public.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "organization.created_at",
          "in" : "query",
          "description" : "Optional time when the entity was created.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "organization.updated_at",
          "in" : "query",
          "description" : "Optional last time the entity was updated.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "organization.support_revoke_at",
          "in" : "query",
          "description" : "Optional time to revoke support access.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "organization.expiration",
          "in" : "query",
          "description" : "Optional expiration for support.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "organization.role",
          "in" : "query",
          "description" : "Current user's role in this org.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "organization.queue",
          "in" : "query",
          "description" : "Default queue.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "organization.default_presets",
          "in" : "query",
          "description" : "Default presets.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "organization.default_presets_ordered",
          "in" : "query",
          "description" : "Default presets ordered.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "organization.is_cloud_viewable",
          "in" : "query",
          "description" : "Setting to enable viewable metadata on cloud.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "organization.archived_deletion_interval",
          "in" : "query",
          "description" : "Setting to configure default archived deletion interval.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Organization"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "OrganizationsV1" ],
        "summary" : "Update organization settings",
        "operationId" : "UpdateOrganizationSettings",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Organization body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Organization"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Organization"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      },
      "patch" : {
        "tags" : [ "OrganizationsV1" ],
        "summary" : "Patch oranization settings",
        "operationId" : "PatchOrganizationSettings",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Organization body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Organization"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Organization"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/stats" : {
      "get" : {
        "tags" : [ "OrganizationsV1" ],
        "summary" : "Get organization stats",
        "operationId" : "GetOrganizationStats",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bookmarks",
          "in" : "query",
          "description" : "Filter by bookmarks.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "Stats Mode.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "kind",
          "in" : "query",
          "description" : "Stats Kind.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "aggregate",
          "in" : "query",
          "description" : "Stats aggregate.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupby",
          "in" : "query",
          "description" : "Stats group.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "trunc",
          "in" : "query",
          "description" : "Stats trunc.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "start_date",
          "in" : "query",
          "description" : "Stats start date.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "end_date",
          "in" : "query",
          "description" : "Stats end date.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boundary",
          "in" : "query",
          "description" : "Stats boundary.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/{owner}/tags" : {
      "get" : {
        "tags" : [ "TagsV1" ],
        "summary" : "List tags",
        "operationId" : "ListTags",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bookmarks",
          "in" : "query",
          "description" : "Filter by bookmarks.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "Mode of the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListTagsResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "TagsV1" ],
        "summary" : "Create tag",
        "operationId" : "CreateTag",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Tag body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Tag"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Tag"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/tags/load" : {
      "get" : {
        "tags" : [ "TagsV1" ],
        "summary" : "Load tags",
        "operationId" : "LoadTags",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bookmarks",
          "in" : "query",
          "description" : "Filter by bookmarks.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "Mode of the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/{owner}/tags/sync" : {
      "post" : {
        "tags" : [ "TagsV1" ],
        "summary" : "Sync tags",
        "operationId" : "SyncTags",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1EntitiesTags"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/tags/{tag.uuid}" : {
      "put" : {
        "tags" : [ "TagsV1" ],
        "summary" : "Update tag",
        "operationId" : "UpdateTag",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tag.uuid",
          "in" : "path",
          "description" : "UUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Tag body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Tag"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Tag"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      },
      "patch" : {
        "tags" : [ "TagsV1" ],
        "summary" : "Patch tag",
        "operationId" : "PatchTag",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tag.uuid",
          "in" : "path",
          "description" : "UUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Tag body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Tag"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Tag"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/tags/{uuid}" : {
      "get" : {
        "tags" : [ "TagsV1" ],
        "summary" : "Get tag",
        "operationId" : "GetTag",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Tag"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "TagsV1" ],
        "summary" : "Delete tag",
        "operationId" : "DeleteTag",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cascade",
          "in" : "query",
          "description" : "Flag to handle sub-entities.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/{owner}/teams" : {
      "get" : {
        "tags" : [ "TeamsV1" ],
        "summary" : "List teams",
        "operationId" : "ListTeams",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bookmarks",
          "in" : "query",
          "description" : "Filter by bookmarks.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "Mode of the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListTeamsResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "TeamsV1" ],
        "summary" : "Create team",
        "operationId" : "CreateTeam",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Team body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Team"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Team"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/teams/names" : {
      "get" : {
        "tags" : [ "TeamsV1" ],
        "summary" : "List teams names",
        "operationId" : "ListTeamNames",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bookmarks",
          "in" : "query",
          "description" : "Filter by bookmarks.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "Mode of the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListTeamsResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/{owner}/teams/{entity}/runs/{uuid}" : {
      "get" : {
        "tags" : [ "TeamsV1" ],
        "summary" : "Get a run in a team",
        "operationId" : "GetTeamRun",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Entity: project name, hub name, registry name, ...",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the sub-entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Run"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/{owner}/teams/{entity}/versions/{kind}" : {
      "get" : {
        "tags" : [ "TeamsV1" ],
        "summary" : "Get all runs in a team",
        "operationId" : "GetTeamVersions",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Entity name under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "kind",
          "in" : "path",
          "description" : "Version Kind",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListProjectVersionsResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/{owner}/teams/{name}" : {
      "get" : {
        "tags" : [ "TeamsV1" ],
        "summary" : "Get team",
        "operationId" : "GetTeam",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Component under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Team"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "TeamsV1" ],
        "summary" : "Delete team",
        "operationId" : "DeleteTeam",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Component under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/{owner}/teams/{name}/activities" : {
      "get" : {
        "tags" : [ "TeamsV1" ],
        "summary" : "Get organization activities",
        "operationId" : "GetTeamActivities",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Entity managing the resource",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bookmarks",
          "in" : "query",
          "description" : "Filter by bookmarks.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "Mode of the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListActivitiesResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/{owner}/teams/{name}/members" : {
      "get" : {
        "tags" : [ "TeamsV1" ],
        "summary" : "Get team members",
        "operationId" : "ListTeamMembers",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Entity managing the resource",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bookmarks",
          "in" : "query",
          "description" : "Filter by bookmarks.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "Mode of the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListTeamMembersResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/{owner}/teams/{name}/runs" : {
      "get" : {
        "tags" : [ "TeamsV1" ],
        "summary" : "Get all runs in a team",
        "operationId" : "GetTeamRuns",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Entity managing the resource",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bookmarks",
          "in" : "query",
          "description" : "Filter by bookmarks.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "Mode of the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListRunsResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/{owner}/teams/{name}/runs/Skip" : {
      "post" : {
        "tags" : [ "TeamsV1" ],
        "summary" : "Skip cross-project runs selection",
        "operationId" : "SkipTeamRuns",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Entity under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Uuids of the entities",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Uuids"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/teams/{name}/runs/approve" : {
      "post" : {
        "tags" : [ "TeamsV1" ],
        "summary" : "Approve cross-project runs selection",
        "operationId" : "ApproveTeamRuns",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Entity under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Uuids of the entities",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Uuids"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/teams/{name}/runs/archive" : {
      "post" : {
        "tags" : [ "TeamsV1" ],
        "summary" : "Archive cross-project runs selection",
        "operationId" : "ArchiveTeamRuns",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Entity under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Uuids of the entities",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Uuids"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/teams/{name}/runs/bookmark" : {
      "post" : {
        "tags" : [ "TeamsV1" ],
        "summary" : "Bookmark cross-project runs selection",
        "operationId" : "BookmarkTeamRuns",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Entity under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Uuids of the entities",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Uuids"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/teams/{name}/runs/delete" : {
      "delete" : {
        "tags" : [ "TeamsV1" ],
        "summary" : "Delete cross-project runs selection",
        "operationId" : "DeleteTeamRuns",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Entity under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Uuids of the entities",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Uuids"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/teams/{name}/runs/invalidate" : {
      "post" : {
        "tags" : [ "TeamsV1" ],
        "summary" : "Invalidate cross-project runs selection",
        "operationId" : "InvalidateTeamRuns",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Entity under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Uuids of the entities",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Uuids"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/teams/{name}/runs/lineage/artifacts" : {
      "get" : {
        "tags" : [ "TeamsV1" ],
        "summary" : "Get runs artifacts lineage",
        "operationId" : "GetTeamRunsArtifactsLineage",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Entity managing the resource",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bookmarks",
          "in" : "query",
          "description" : "Filter by bookmarks.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "Mode of the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListRunArtifactsResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/{owner}/teams/{name}/runs/restore" : {
      "post" : {
        "tags" : [ "TeamsV1" ],
        "summary" : "Restore cross-project runs selection",
        "operationId" : "RestoreTeamRuns",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Entity under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Uuids of the entities",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Uuids"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/teams/{name}/runs/stop" : {
      "post" : {
        "tags" : [ "TeamsV1" ],
        "summary" : "Stop cross-project runs selection",
        "operationId" : "StopTeamRuns",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Entity under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Uuids of the entities",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Uuids"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/teams/{name}/runs/tag" : {
      "post" : {
        "tags" : [ "TeamsV1" ],
        "summary" : "Tag cross-project runs selection",
        "operationId" : "TagTeamRuns",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Entity under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1EntitiesTags"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/teams/{name}/runs/transfer" : {
      "post" : {
        "tags" : [ "TeamsV1" ],
        "summary" : "Transfer cross-project runs selection to a new project",
        "operationId" : "TransferTeamRuns",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Entity under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1EntitiesTransfer"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/teams/{name}/stats" : {
      "get" : {
        "tags" : [ "TeamsV1" ],
        "summary" : "Get team stats",
        "operationId" : "GetTeamStats",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Entity managing the resource",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bookmarks",
          "in" : "query",
          "description" : "Filter by bookmarks.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "Stats Mode.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "kind",
          "in" : "query",
          "description" : "Stats Kind.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "aggregate",
          "in" : "query",
          "description" : "Stats aggregate.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupby",
          "in" : "query",
          "description" : "Stats group.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "trunc",
          "in" : "query",
          "description" : "Stats trunc.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "start_date",
          "in" : "query",
          "description" : "Stats start date.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "end_date",
          "in" : "query",
          "description" : "Stats end date.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boundary",
          "in" : "query",
          "description" : "Stats boundary.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/{owner}/teams/{team.name}" : {
      "put" : {
        "tags" : [ "TeamsV1" ],
        "summary" : "Update team",
        "operationId" : "UpdateTeam",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "team.name",
          "in" : "path",
          "description" : "Name",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Team body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Team"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Team"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      },
      "patch" : {
        "tags" : [ "TeamsV1" ],
        "summary" : "Patch team",
        "operationId" : "PatchTeam",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "team.name",
          "in" : "path",
          "description" : "Name",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Team body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Team"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Team"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/teams/{team}/members" : {
      "post" : {
        "tags" : [ "TeamsV1" ],
        "summary" : "Create team member",
        "operationId" : "CreateTeamMember",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "team",
          "in" : "path",
          "description" : "Team",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Team body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1TeamMember"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1TeamMember"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/teams/{team}/members/{member.user}" : {
      "put" : {
        "tags" : [ "TeamsV1" ],
        "summary" : "Update team member",
        "operationId" : "UpdateTeamMember",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "team",
          "in" : "path",
          "description" : "Team",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "member.user",
          "in" : "path",
          "description" : "User",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Team body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1TeamMember"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1TeamMember"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      },
      "patch" : {
        "tags" : [ "TeamsV1" ],
        "summary" : "Patch team member",
        "operationId" : "PatchTeamMember",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "team",
          "in" : "path",
          "description" : "Team",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "member.user",
          "in" : "path",
          "description" : "User",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Team body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1TeamMember"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1TeamMember"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/orgs/{owner}/teams/{team}/members/{user}" : {
      "get" : {
        "tags" : [ "TeamsV1" ],
        "summary" : "Get team member details",
        "operationId" : "GetTeamMember",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "team",
          "in" : "path",
          "description" : "Team under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "user",
          "in" : "path",
          "description" : "Member under team",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1TeamMember"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "TeamsV1" ],
        "summary" : "Delete team member details",
        "operationId" : "DeleteTeamMember",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "team",
          "in" : "path",
          "description" : "Team under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "user",
          "in" : "path",
          "description" : "Member under team",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/{owner}/versions/{kind}" : {
      "get" : {
        "tags" : [ "OrganizationsV1" ],
        "summary" : "Get all runs in an organization",
        "operationId" : "GetOrganizationVersions",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "kind",
          "in" : "path",
          "description" : "Version Kind",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListProjectVersionsResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users" : {
      "get" : {
        "tags" : [ "UsersV1" ],
        "summary" : "Get current user",
        "operationId" : "GetUser",
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1User"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "UsersV1" ],
        "summary" : "Update current user",
        "operationId" : "UpdateUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1User"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1User"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      },
      "patch" : {
        "tags" : [ "UsersV1" ],
        "summary" : "Patch current user",
        "operationId" : "PatchUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1User"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1User"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/users/history" : {
      "get" : {
        "tags" : [ "UsersV1" ],
        "summary" : "User History",
        "operationId" : "GetHistory",
        "parameters" : [ {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListActivitiesResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/suggestions" : {
      "get" : {
        "tags" : [ "UsersV1" ],
        "summary" : "User suggestions",
        "operationId" : "GetSuggestions",
        "parameters" : [ {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/tokens" : {
      "get" : {
        "tags" : [ "UsersV1" ],
        "summary" : "List tokens",
        "operationId" : "ListTokens",
        "parameters" : [ {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListTokenResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "UsersV1" ],
        "summary" : "Create token",
        "operationId" : "CreateToken",
        "requestBody" : {
          "description" : "Token body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Token"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Token"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/users/tokens/{token.uuid}" : {
      "put" : {
        "tags" : [ "UsersV1" ],
        "summary" : "Update token",
        "operationId" : "UpdateToken",
        "parameters" : [ {
          "name" : "token.uuid",
          "in" : "path",
          "description" : "UUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Token body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Token"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Token"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      },
      "patch" : {
        "tags" : [ "UsersV1" ],
        "summary" : "Patch token",
        "operationId" : "PatchToken",
        "parameters" : [ {
          "name" : "token.uuid",
          "in" : "path",
          "description" : "UUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Token body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Token"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Token"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/users/tokens/{uuid}" : {
      "get" : {
        "tags" : [ "UsersV1" ],
        "summary" : "Get token",
        "operationId" : "GetToken",
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "UUid of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Token"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "UsersV1" ],
        "summary" : "Delete token",
        "operationId" : "DeleteToken",
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "UUid of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/workspaces" : {
      "get" : {
        "tags" : [ "UsersV1" ],
        "summary" : "User workspaces",
        "operationId" : "GetWorkspaces",
        "parameters" : [ {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{owner}/projects/create" : {
      "post" : {
        "tags" : [ "ProjectsV1" ],
        "summary" : "Create new project",
        "operationId" : "CreateProject",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Project body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Project"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Project"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/{owner}/projects/list" : {
      "get" : {
        "tags" : [ "ProjectsV1" ],
        "summary" : "List projects",
        "operationId" : "ListProjects",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bookmarks",
          "in" : "query",
          "description" : "Filter by bookmarks.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "Mode of the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListProjectsResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{owner}/projects/names" : {
      "get" : {
        "tags" : [ "ProjectsV1" ],
        "summary" : "List project names",
        "operationId" : "ListProjectNames",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bookmarks",
          "in" : "query",
          "description" : "Filter by bookmarks.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "Mode of the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListProjectsResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{owner}/{entity}/dashboards/{uuid}" : {
      "get" : {
        "tags" : [ "ProjectDashboardsV1" ],
        "summary" : "Get project dashboard",
        "operationId" : "GetProjectDashboard",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Entity: project name, hub name, registry name, ...",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the sub-entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Dashboard"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ProjectDashboardsV1" ],
        "summary" : "Delete project dashboard",
        "operationId" : "DeleteProjectDashboard",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Entity: project name, hub name, registry name, ...",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the sub-entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{owner}/{entity}/dashboards/{uuid}/promote" : {
      "post" : {
        "tags" : [ "ProjectDashboardsV1" ],
        "summary" : "Promote project dashboard",
        "operationId" : "PromoteProjectDashboard",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Entity: project name, hub name, registry name, ...",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the sub-entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{owner}/{entity}/runs/{uuid}" : {
      "get" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Get run",
        "operationId" : "GetRun",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Entity: project name, hub name, registry name, ...",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the sub-entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Run"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Delete run",
        "operationId" : "DeleteRun",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Entity: project name, hub name, registry name, ...",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the sub-entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{owner}/{entity}/runs/{uuid}/approve" : {
      "post" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Approve run",
        "operationId" : "ApproveRun",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Entity: project name, hub name, registry name, ...",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the sub-entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{owner}/{entity}/runs/{uuid}/archive" : {
      "post" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Archive run",
        "operationId" : "ArchiveRun",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Entity: project name, hub name, registry name, ...",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the sub-entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{owner}/{entity}/runs/{uuid}/bookmark" : {
      "post" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Bookmark run",
        "operationId" : "BookmarkRun",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Entity: project name, hub name, registry name, ...",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the sub-entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{owner}/{entity}/runs/{uuid}/impersonate" : {
      "post" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Impersonate run token",
        "operationId" : "ImpersonateToken",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Entity: project name, hub name, registry name, ...",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the sub-entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Auth"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{owner}/{entity}/runs/{uuid}/invalidate" : {
      "post" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Invalidate run",
        "operationId" : "InvalidateRun",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Entity: project name, hub name, registry name, ...",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the sub-entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{owner}/{entity}/runs/{uuid}/lineage/artifacts" : {
      "get" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Get run artifacts lineage",
        "operationId" : "GetRunArtifactsLineage",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Entity name under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "SubEntity uuid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListRunArtifactsResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{owner}/{entity}/runs/{uuid}/lineage/artifacts/names" : {
      "get" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Get run artifacts lineage names",
        "operationId" : "GetRunArtifactsLineageNames",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Entity name under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "SubEntity uuid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListRunArtifactsResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{owner}/{entity}/runs/{uuid}/lineage/clones" : {
      "get" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Get run clones lineage",
        "operationId" : "GetRunClonesLineage",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Entity name under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "SubEntity uuid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListRunsResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{owner}/{entity}/runs/{uuid}/lineage/connections" : {
      "get" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Get run connections lineage",
        "operationId" : "GetRunConnectionsLineage",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Entity name under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "SubEntity uuid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListRunConnectionsResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{owner}/{entity}/runs/{uuid}/lineage/downstream" : {
      "get" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Get run downstream lineage",
        "operationId" : "GetRunDownstreamLineage",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Entity name under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "SubEntity uuid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListRunEdgesResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{owner}/{entity}/runs/{uuid}/lineage/upstream" : {
      "get" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Get run upstream lineage",
        "operationId" : "GetRunUpstreamLineage",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Entity name under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "SubEntity uuid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListRunEdgesResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{owner}/{entity}/runs/{uuid}/namespace" : {
      "get" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Get Run namespace",
        "operationId" : "GetRunNamespace",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Entity: project name, hub name, registry name, ...",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the sub-entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1RunSettings"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{owner}/{entity}/runs/{uuid}/restore" : {
      "post" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Restore run",
        "operationId" : "RestoreRun",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Entity: project name, hub name, registry name, ...",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the sub-entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{owner}/{entity}/runs/{uuid}/settings" : {
      "get" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Get Run settings",
        "operationId" : "GetRunSettings",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Entity: project name, hub name, registry name, ...",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the sub-entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1RunSettings"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{owner}/{entity}/runs/{uuid}/skip" : {
      "post" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Skip run",
        "operationId" : "SkipRun",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Entity: project name, hub name, registry name, ...",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the sub-entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{owner}/{entity}/runs/{uuid}/stats" : {
      "get" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Get run stats",
        "operationId" : "GetRunStats",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Entity name under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "SubEntity uuid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bookmarks",
          "in" : "query",
          "description" : "Filter by bookmarks.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "Stats Mode.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "kind",
          "in" : "query",
          "description" : "Stats Kind.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "aggregate",
          "in" : "query",
          "description" : "Stats aggregate.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupby",
          "in" : "query",
          "description" : "Stats group.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "trunc",
          "in" : "query",
          "description" : "Stats trunc.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "start_date",
          "in" : "query",
          "description" : "Stats start date.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "end_date",
          "in" : "query",
          "description" : "Stats end date.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boundary",
          "in" : "query",
          "description" : "Stats boundary.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{owner}/{entity}/runs/{uuid}/statuses" : {
      "get" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Get run statuses",
        "operationId" : "GetRunStatuses",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Entity: project name, hub name, registry name, ...",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the sub-entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Status"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{owner}/{entity}/runs/{uuid}/stop" : {
      "post" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Stop run",
        "operationId" : "StopRun",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Entity: project name, hub name, registry name, ...",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the sub-entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{owner}/{entity}/runs/{uuid}/unbookmark" : {
      "delete" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Unbookmark run",
        "operationId" : "UnbookmarkRun",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Entity: project name, hub name, registry name, ...",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the sub-entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{owner}/{entity}/searches/{uuid}" : {
      "get" : {
        "tags" : [ "ProjectSearchesV1" ],
        "summary" : "Get project search",
        "operationId" : "GetProjectSearch",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Entity: project name, hub name, registry name, ...",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the sub-entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Search"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ProjectSearchesV1" ],
        "summary" : "Delete project search",
        "operationId" : "DeleteProjectSearch",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Entity: project name, hub name, registry name, ...",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the sub-entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{owner}/{entity}/searches/{uuid}/promote" : {
      "post" : {
        "tags" : [ "ProjectSearchesV1" ],
        "summary" : "Promote project search",
        "operationId" : "PromoteProjectSearch",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Entity: project name, hub name, registry name, ...",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the sub-entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{owner}/{entity}/versions/{kind}" : {
      "get" : {
        "tags" : [ "ProjectsV1" ],
        "summary" : "List versions",
        "operationId" : "ListVersions",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Entity name under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "kind",
          "in" : "path",
          "description" : "Version Kind",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListProjectVersionsResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{owner}/{entity}/versions/{kind}/names" : {
      "get" : {
        "tags" : [ "ProjectsV1" ],
        "summary" : "List versions names",
        "operationId" : "ListVersionNames",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Entity name under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "kind",
          "in" : "path",
          "description" : "Version Kind",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListProjectVersionsResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{owner}/{entity}/versions/{kind}/{name}" : {
      "get" : {
        "tags" : [ "ProjectsV1" ],
        "summary" : "Get version",
        "operationId" : "GetVersion",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Entity: project name, hub name, registry name, ...",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "kind",
          "in" : "path",
          "description" : "Version Kind",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Sub-entity name",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ProjectVersion"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ProjectsV1" ],
        "summary" : "Delete version",
        "operationId" : "DeleteVersion",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Entity: project name, hub name, registry name, ...",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "kind",
          "in" : "path",
          "description" : "Version Kind",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Sub-entity name",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{owner}/{entity}/versions/{kind}/{name}/stages" : {
      "get" : {
        "tags" : [ "ProjectsV1" ],
        "summary" : "Get version stages",
        "operationId" : "GetVersionStages",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Entity: project name, hub name, registry name, ...",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "kind",
          "in" : "path",
          "description" : "Version Kind",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Sub-entity name",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Stage"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "ProjectsV1" ],
        "summary" : "Create new artifact version stage",
        "operationId" : "CreateVersionStage",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Entity namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "kind",
          "in" : "path",
          "description" : "Optional kind, only required for an version entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of the entity to apply the stage to",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1EntityStageBodyRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Stage"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/{owner}/{name}" : {
      "get" : {
        "tags" : [ "ProjectsV1" ],
        "summary" : "Get project",
        "operationId" : "GetProject",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Component under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Project"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ProjectsV1" ],
        "summary" : "Delete project",
        "operationId" : "DeleteProject",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Component under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{owner}/{name}/activities" : {
      "get" : {
        "tags" : [ "ProjectsV1" ],
        "summary" : "Get project activities",
        "operationId" : "GetProjectActivities",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Entity managing the resource",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bookmarks",
          "in" : "query",
          "description" : "Filter by bookmarks.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "Mode of the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListActivitiesResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{owner}/{name}/archive" : {
      "post" : {
        "tags" : [ "ProjectsV1" ],
        "summary" : "Archive project",
        "operationId" : "ArchiveProject",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Component under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{owner}/{name}/bookmark" : {
      "post" : {
        "tags" : [ "ProjectsV1" ],
        "summary" : "Bookmark project",
        "operationId" : "BookmarkProject",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Component under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{owner}/{name}/ci" : {
      "post" : {
        "tags" : [ "ProjectsV1" ],
        "summary" : "Enable project CI",
        "operationId" : "EnableProjectCI",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Component under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ProjectsV1" ],
        "summary" : "Disbale project CI",
        "operationId" : "DisableProjectCI",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Component under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{owner}/{name}/dashboards" : {
      "get" : {
        "tags" : [ "ProjectDashboardsV1" ],
        "summary" : "List project dashboards",
        "operationId" : "ListProjectDashboards",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Entity managing the resource",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bookmarks",
          "in" : "query",
          "description" : "Filter by bookmarks.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "Mode of the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListDashboardsResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{owner}/{name}/dashboards/names" : {
      "get" : {
        "tags" : [ "ProjectDashboardsV1" ],
        "summary" : "List project dashboard",
        "operationId" : "ListProjectDashboardNames",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Entity managing the resource",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bookmarks",
          "in" : "query",
          "description" : "Filter by bookmarks.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "Mode of the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListDashboardsResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{owner}/{name}/restore" : {
      "post" : {
        "tags" : [ "ProjectsV1" ],
        "summary" : "Restore project",
        "operationId" : "RestoreProject",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Component under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{owner}/{name}/runs" : {
      "get" : {
        "tags" : [ "RunsV1" ],
        "summary" : "List runs",
        "operationId" : "ListRuns",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Entity managing the resource",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bookmarks",
          "in" : "query",
          "description" : "Filter by bookmarks.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "Mode of the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListRunsResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{owner}/{name}/runs/approve" : {
      "post" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Approve runs",
        "operationId" : "ApproveRuns",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Entity under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Uuids of the entities",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Uuids"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/{owner}/{name}/runs/archive" : {
      "post" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Archive runs",
        "operationId" : "ArchiveRuns",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Entity under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Uuids of the entities",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Uuids"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/{owner}/{name}/runs/bookmark" : {
      "post" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Bookmark runs",
        "operationId" : "BookmarkRuns",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Entity under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Uuids of the entities",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Uuids"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/{owner}/{name}/runs/delete" : {
      "delete" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Delete runs",
        "operationId" : "DeleteRuns",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Entity under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Uuids of the entities",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Uuids"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/{owner}/{name}/runs/invalidate" : {
      "post" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Invalidate runs",
        "operationId" : "InvalidateRuns",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Entity under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Uuids of the entities",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Uuids"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/{owner}/{name}/runs/lineage/artifacts" : {
      "get" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Get runs artifacts lineage",
        "operationId" : "GetRunsArtifactsLineage",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Entity managing the resource",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bookmarks",
          "in" : "query",
          "description" : "Filter by bookmarks.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "Mode of the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListRunArtifactsResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{owner}/{name}/runs/restore" : {
      "post" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Restore runs",
        "operationId" : "RestoreRuns",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Entity under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Uuids of the entities",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Uuids"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/{owner}/{name}/runs/skip" : {
      "post" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Skip runs",
        "operationId" : "SkipRuns",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Entity under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Uuids of the entities",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Uuids"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/{owner}/{name}/runs/stop" : {
      "post" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Stop runs",
        "operationId" : "StopRuns",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Entity under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Uuids of the entities",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Uuids"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/{owner}/{name}/runs/tag" : {
      "post" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Tag runs",
        "operationId" : "TagRuns",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Entity under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1EntitiesTags"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/{owner}/{name}/runs/transfer" : {
      "post" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Transfer runs",
        "operationId" : "TransferRuns",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Entity under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1EntitiesTransfer"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/{owner}/{name}/searches" : {
      "get" : {
        "tags" : [ "ProjectSearchesV1" ],
        "summary" : "List project searches",
        "operationId" : "ListProjectSearches",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Entity managing the resource",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bookmarks",
          "in" : "query",
          "description" : "Filter by bookmarks.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "Mode of the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListSearchesResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{owner}/{name}/searches/names" : {
      "get" : {
        "tags" : [ "ProjectSearchesV1" ],
        "summary" : "List project search names",
        "operationId" : "ListProjectSearchNames",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Entity managing the resource",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bookmarks",
          "in" : "query",
          "description" : "Filter by bookmarks.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "Mode of the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "no_page",
          "in" : "query",
          "description" : "No pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ListSearchesResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{owner}/{name}/settings" : {
      "get" : {
        "tags" : [ "ProjectsV1" ],
        "summary" : "Get Project settings",
        "operationId" : "GetProjectSettings",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Component under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ProjectSettings"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{owner}/{name}/stats" : {
      "get" : {
        "tags" : [ "ProjectsV1" ],
        "summary" : "Get project stats",
        "operationId" : "GetProjectStats",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Entity managing the resource",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort to order the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query filter the search.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bookmarks",
          "in" : "query",
          "description" : "Filter by bookmarks.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "Stats Mode.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "kind",
          "in" : "query",
          "description" : "Stats Kind.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "aggregate",
          "in" : "query",
          "description" : "Stats aggregate.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupby",
          "in" : "query",
          "description" : "Stats group.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "trunc",
          "in" : "query",
          "description" : "Stats trunc.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "start_date",
          "in" : "query",
          "description" : "Stats start date.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "end_date",
          "in" : "query",
          "description" : "Stats end date.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boundary",
          "in" : "query",
          "description" : "Stats boundary.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{owner}/{name}/unbookmark" : {
      "delete" : {
        "tags" : [ "ProjectsV1" ],
        "summary" : "Unbookmark project",
        "operationId" : "UnbookmarkProject",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Component under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{owner}/{project.name}" : {
      "put" : {
        "tags" : [ "ProjectsV1" ],
        "summary" : "Update project",
        "operationId" : "UpdateProject",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "project.name",
          "in" : "path",
          "description" : "Required name",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Project body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Project"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Project"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      },
      "patch" : {
        "tags" : [ "ProjectsV1" ],
        "summary" : "Patch project",
        "operationId" : "PatchProject",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "project.name",
          "in" : "path",
          "description" : "Required name",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Project body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Project"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Project"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/{owner}/{project}/dashboards" : {
      "post" : {
        "tags" : [ "ProjectDashboardsV1" ],
        "summary" : "Create project dashboard",
        "operationId" : "CreateProjectDashboard",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "project",
          "in" : "path",
          "description" : "Project under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Dashboard body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Dashboard"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Dashboard"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/{owner}/{project}/dashboards/{dashboard.uuid}" : {
      "put" : {
        "tags" : [ "ProjectDashboardsV1" ],
        "summary" : "Update project dashboard",
        "operationId" : "UpdateProjectDashboard",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "project",
          "in" : "path",
          "description" : "Project under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dashboard.uuid",
          "in" : "path",
          "description" : "UUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Dashboard body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Dashboard"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Dashboard"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      },
      "patch" : {
        "tags" : [ "ProjectDashboardsV1" ],
        "summary" : "Patch project dashboard",
        "operationId" : "PatchProjectDashboard",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "project",
          "in" : "path",
          "description" : "Project under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dashboard.uuid",
          "in" : "path",
          "description" : "UUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Dashboard body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Dashboard"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Dashboard"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/{owner}/{project}/runs" : {
      "post" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Create new run",
        "operationId" : "CreateRun",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "project",
          "in" : "path",
          "description" : "Project where the run will be assigned",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "operation object",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1OperationBody"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Run"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/{owner}/{project}/runs/sync" : {
      "post" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Sync offline run",
        "operationId" : "SyncRun",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "project",
          "in" : "path",
          "description" : "Project where the run will be assigned",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Run object",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Run"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/{owner}/{project}/runs/{run.uuid}" : {
      "put" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Update run",
        "operationId" : "UpdateRun",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "project",
          "in" : "path",
          "description" : "Project where the run will be assigned",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "run.uuid",
          "in" : "path",
          "description" : "UUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Run object",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Run"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Run"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      },
      "patch" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Patch run",
        "operationId" : "PatchRun",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "project",
          "in" : "path",
          "description" : "Project where the run will be assigned",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "run.uuid",
          "in" : "path",
          "description" : "UUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Run object",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Run"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Run"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/{owner}/{project}/runs/{run.uuid}/copy" : {
      "post" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Restart run with copy",
        "operationId" : "CopyRun",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "project",
          "in" : "path",
          "description" : "Project where the run will be assigned",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "run.uuid",
          "in" : "path",
          "description" : "UUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Run object",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Run"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Run"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/{owner}/{project}/runs/{run.uuid}/restart" : {
      "post" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Restart run",
        "operationId" : "RestartRun",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "project",
          "in" : "path",
          "description" : "Project where the run will be assigned",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "run.uuid",
          "in" : "path",
          "description" : "UUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Run object",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Run"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Run"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/{owner}/{project}/runs/{run.uuid}/resume" : {
      "post" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Resume run",
        "operationId" : "ResumeRun",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "project",
          "in" : "path",
          "description" : "Project where the run will be assigned",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "run.uuid",
          "in" : "path",
          "description" : "UUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Run object",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Run"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Run"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/{owner}/{project}/runs/{run.uuid}/transfer" : {
      "post" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Transfer run",
        "operationId" : "TransferRun",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "project",
          "in" : "path",
          "description" : "Project where the run will be assigned",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "run.uuid",
          "in" : "path",
          "description" : "UUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Run object",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Run"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/{owner}/{project}/runs/{uuid}/lineage/artifacts" : {
      "post" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Create bulk run artifacts lineage",
        "operationId" : "CreateRunArtifactsLineage",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "project",
          "in" : "path",
          "description" : "Project where the run will be assigned",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Run Artifacts",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1RunArtifacts"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/{owner}/{project}/runs/{uuid}/lineage/artifacts/{name}" : {
      "get" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Get run artifacts lineage",
        "operationId" : "GetRunArtifactLineage",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "project",
          "in" : "path",
          "description" : "Project where the run will be assigned",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Artifact name",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "namespace",
          "in" : "query",
          "description" : "namespace.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1RunArtifact"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Delete run artifact lineage",
        "operationId" : "DeleteRunArtifactLineage",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "project",
          "in" : "path",
          "description" : "Project where the run will be assigned",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Artifact name",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "namespace",
          "in" : "query",
          "description" : "namespace.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{owner}/{project}/runs/{uuid}/lineage/edges" : {
      "post" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Set run edges graph lineage",
        "operationId" : "SetRunEdgesLineage",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "project",
          "in" : "path",
          "description" : "Project",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Run uuid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Run edges graph",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1RunEdgesGraph"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/{owner}/{project}/runs/{uuid}/statuses" : {
      "post" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Create new run status",
        "operationId" : "CreateRunStatus",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "project",
          "in" : "path",
          "description" : "Project where the run will be assigned",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1EntityStatusBodyRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Status"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/{owner}/{project}/searches" : {
      "post" : {
        "tags" : [ "ProjectSearchesV1" ],
        "summary" : "Create project search",
        "operationId" : "CreateProjectSearch",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "project",
          "in" : "path",
          "description" : "Project under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Search body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Search"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Search"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/{owner}/{project}/searches/{search.uuid}" : {
      "put" : {
        "tags" : [ "ProjectSearchesV1" ],
        "summary" : "Update project search",
        "operationId" : "UpdateProjectSearch",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "project",
          "in" : "path",
          "description" : "Project under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "search.uuid",
          "in" : "path",
          "description" : "UUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Search body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Search"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Search"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      },
      "patch" : {
        "tags" : [ "ProjectSearchesV1" ],
        "summary" : "Patch project search",
        "operationId" : "PatchProjectSearch",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "project",
          "in" : "path",
          "description" : "Project under namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "search.uuid",
          "in" : "path",
          "description" : "UUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Search body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Search"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Search"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/{owner}/{project}/settings" : {
      "put" : {
        "tags" : [ "ProjectsV1" ],
        "summary" : "Update project settings",
        "operationId" : "UpdateProjectSettings",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "project",
          "in" : "path",
          "description" : "Project name",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Project settings body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1ProjectSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ProjectSettings"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      },
      "patch" : {
        "tags" : [ "ProjectsV1" ],
        "summary" : "Patch project settings",
        "operationId" : "PatchProjectSettings",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "project",
          "in" : "path",
          "description" : "Project name",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Project settings body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1ProjectSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ProjectSettings"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/{owner}/{project}/versions/{version.kind}" : {
      "post" : {
        "tags" : [ "ProjectsV1" ],
        "summary" : "Create version",
        "operationId" : "CreateVersion",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "project",
          "in" : "path",
          "description" : "Project name",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version.kind",
          "in" : "path",
          "description" : "Optional kind to tell the kind of this version",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "component", "model", "artifact" ]
          }
        } ],
        "requestBody" : {
          "description" : "Project version body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1ProjectVersion"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ProjectVersion"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/{owner}/{project}/versions/{version.kind}/{version.name}" : {
      "put" : {
        "tags" : [ "ProjectsV1" ],
        "summary" : "Update version",
        "operationId" : "UpdateVersion",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "project",
          "in" : "path",
          "description" : "Project name",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version.kind",
          "in" : "path",
          "description" : "Optional kind to tell the kind of this version",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "component", "model", "artifact" ]
          }
        }, {
          "name" : "version.name",
          "in" : "path",
          "description" : "Optional component name, should be a valid fully qualified value: name[:version]",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Project version body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1ProjectVersion"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ProjectVersion"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      },
      "patch" : {
        "tags" : [ "ProjectsV1" ],
        "summary" : "Patch version",
        "operationId" : "PatchVersion",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "project",
          "in" : "path",
          "description" : "Project name",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version.kind",
          "in" : "path",
          "description" : "Optional kind to tell the kind of this version",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "component", "model", "artifact" ]
          }
        }, {
          "name" : "version.name",
          "in" : "path",
          "description" : "Optional component name, should be a valid fully qualified value: name[:version]",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Project version body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1ProjectVersion"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ProjectVersion"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/{owner}/{project}/versions/{version.kind}/{version.name}/transfer" : {
      "post" : {
        "tags" : [ "ProjectsV1" ],
        "summary" : "Transfer version",
        "operationId" : "TransferVersion",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "project",
          "in" : "path",
          "description" : "Project name",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version.kind",
          "in" : "path",
          "description" : "Optional kind to tell the kind of this version",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "component", "model", "artifact" ]
          }
        }, {
          "name" : "version.name",
          "in" : "path",
          "description" : "Optional component name, should be a valid fully qualified value: name[:version]",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Project version body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1ProjectVersion"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/api/v1/{owner}/{team}/projects/create" : {
      "post" : {
        "tags" : [ "ProjectsV1" ],
        "summary" : "Create new project via team space",
        "operationId" : "CreateTeamProject",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "team",
          "in" : "path",
          "description" : "Team",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Project body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1Project"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Project"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/internal/v1/{namespace}/{owner}/agents/{uuid}/collect" : {
      "post" : {
        "tags" : [ "AgentsV1" ],
        "summary" : "collect agent",
        "operationId" : "CollectAgentData",
        "parameters" : [ {
          "name" : "namespace",
          "in" : "path",
          "description" : "namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/internal/v1/{namespace}/{owner}/{project}/runs/{uuid}/{kind}/logs" : {
      "post" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Internal API to collect run logs",
        "operationId" : "CollectRunLogs",
        "parameters" : [ {
          "name" : "namespace",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "project",
          "in" : "path",
          "description" : "Project where the run will be assigned",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "kind",
          "in" : "path",
          "description" : "Kind of the entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/schemas" : {
      "get" : {
        "tags" : [ "SchemasV1" ],
        "summary" : "NoOp",
        "operationId" : "NoOp",
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Schemas"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/streams/v1/{namespace}/orgs/{owner}/runs/multi/events/{kind}" : {
      "get" : {
        "tags" : [ "OrganizationsV1" ],
        "summary" : "Get multi runs events",
        "operationId" : "GetOrganizationMultiRunEvents",
        "parameters" : [ {
          "name" : "namespace",
          "in" : "path",
          "description" : "namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "kind",
          "in" : "path",
          "description" : "The artifact kind",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "model", "audio", "video", "histogram", "image", "tensor", "dataframe", "chart", "csv", "tsv", "psv", "ssv", "metric", "env", "html", "text", "file", "dir", "dockerfile", "docker_image", "data", "coderef", "table", "tensorboard", "curve", "confusion", "analysis", "iteration", "markdown", "system", "span", "artifact" ]
          }
        }, {
          "name" : "entity",
          "in" : "query",
          "description" : "Entity where the run will be assigned.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "names",
          "in" : "query",
          "description" : "Names query param.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "runs",
          "in" : "query",
          "description" : "Runs query param.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orient",
          "in" : "query",
          "description" : "Orient query param.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "Force query param.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "sample",
          "in" : "query",
          "description" : "Sample query param.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "connection",
          "in" : "query",
          "description" : "Connection to use.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Optional status.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "created",
            "enum" : [ "created", "resuming", "on_schedule", "compiled", "queued", "scheduled", "starting", "running", "processing", "stopping", "failed", "stopped", "succeeded", "skipped", "warning", "unschedulable", "upstream_failed", "retrying", "unknown", "done" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1MultiEventsResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/streams/v1/{namespace}/orgs/{owner}/runs/multi/importance" : {
      "post" : {
        "tags" : [ "OrganizationsV1" ],
        "summary" : "Get multi run importance",
        "operationId" : "GetOrganizationMultiRunImportance",
        "parameters" : [ {
          "name" : "namespace",
          "in" : "path",
          "description" : "namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "query",
          "description" : "Entity where the run will be assigned.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Params/Metrics data",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1MultiEventsResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/streams/v1/{namespace}/orgs/{owner}/teams/{entity}/runs/multi/events/{kind}" : {
      "get" : {
        "tags" : [ "TeamsV1" ],
        "summary" : "Get multi runs events",
        "operationId" : "GetTeamMultiRunEvents",
        "parameters" : [ {
          "name" : "namespace",
          "in" : "path",
          "description" : "namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Entity where the run will be assigned",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "kind",
          "in" : "path",
          "description" : "The artifact kind",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "model", "audio", "video", "histogram", "image", "tensor", "dataframe", "chart", "csv", "tsv", "psv", "ssv", "metric", "env", "html", "text", "file", "dir", "dockerfile", "docker_image", "data", "coderef", "table", "tensorboard", "curve", "confusion", "analysis", "iteration", "markdown", "system", "span", "artifact" ]
          }
        }, {
          "name" : "names",
          "in" : "query",
          "description" : "Names query param.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "runs",
          "in" : "query",
          "description" : "Runs query param.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orient",
          "in" : "query",
          "description" : "Orient query param.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "Force query param.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "sample",
          "in" : "query",
          "description" : "Sample query param.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "connection",
          "in" : "query",
          "description" : "Connection to use.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Optional status.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "created",
            "enum" : [ "created", "resuming", "on_schedule", "compiled", "queued", "scheduled", "starting", "running", "processing", "stopping", "failed", "stopped", "succeeded", "skipped", "warning", "unschedulable", "upstream_failed", "retrying", "unknown", "done" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1MultiEventsResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/streams/v1/{namespace}/orgs/{owner}/teams/{entity}/runs/multi/importance" : {
      "post" : {
        "tags" : [ "TeamsV1" ],
        "summary" : "Get multi run importance",
        "operationId" : "GetTeamMultiRunImportance",
        "parameters" : [ {
          "name" : "namespace",
          "in" : "path",
          "description" : "namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Entity where the run will be assigned",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Params/Metrics data",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1MultiEventsResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/streams/v1/{namespace}/{owner}/agents/{uuid}/k8s_inspect" : {
      "get" : {
        "tags" : [ "AgentsV1" ],
        "summary" : "Inspect an agent's service full conditions",
        "operationId" : "InspectAgent",
        "parameters" : [ {
          "name" : "namespace",
          "in" : "path",
          "description" : "namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "service",
          "in" : "query",
          "description" : "Service.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "last_file",
          "in" : "query",
          "description" : "last_file.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "Force query param.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "connection",
          "in" : "query",
          "description" : "Connection to use.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/streams/v1/{namespace}/{owner}/agents/{uuid}/logs" : {
      "get" : {
        "tags" : [ "AgentsV1" ],
        "summary" : "Get run logs",
        "operationId" : "GetAgentLogs",
        "parameters" : [ {
          "name" : "namespace",
          "in" : "path",
          "description" : "namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "service",
          "in" : "query",
          "description" : "Service.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "last_file",
          "in" : "query",
          "description" : "last_file.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "Force query param.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "connection",
          "in" : "query",
          "description" : "Connection to use.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Logs"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/streams/v1/{namespace}/{owner}/{entity}/runs/multi/events/{kind}" : {
      "get" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Get multi runs events",
        "operationId" : "GetMultiRunEvents",
        "parameters" : [ {
          "name" : "namespace",
          "in" : "path",
          "description" : "namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Entity where the run will be assigned",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "kind",
          "in" : "path",
          "description" : "The artifact kind",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "model", "audio", "video", "histogram", "image", "tensor", "dataframe", "chart", "csv", "tsv", "psv", "ssv", "metric", "env", "html", "text", "file", "dir", "dockerfile", "docker_image", "data", "coderef", "table", "tensorboard", "curve", "confusion", "analysis", "iteration", "markdown", "system", "span", "artifact" ]
          }
        }, {
          "name" : "names",
          "in" : "query",
          "description" : "Names query param.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "runs",
          "in" : "query",
          "description" : "Runs query param.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orient",
          "in" : "query",
          "description" : "Orient query param.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "Force query param.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "sample",
          "in" : "query",
          "description" : "Sample query param.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "connection",
          "in" : "query",
          "description" : "Connection to use.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Optional status.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "created",
            "enum" : [ "created", "resuming", "on_schedule", "compiled", "queued", "scheduled", "starting", "running", "processing", "stopping", "failed", "stopped", "succeeded", "skipped", "warning", "unschedulable", "upstream_failed", "retrying", "unknown", "done" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1MultiEventsResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/streams/v1/{namespace}/{owner}/{entity}/runs/multi/importance" : {
      "post" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Get multi run importance",
        "operationId" : "GetMultiRunImportance",
        "parameters" : [ {
          "name" : "namespace",
          "in" : "path",
          "description" : "namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Entity where the run will be assigned",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Params/Metrics data",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1MultiEventsResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/artifact" : {
      "get" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Get run artifact",
        "operationId" : "GetRunArtifact",
        "parameters" : [ {
          "name" : "namespace",
          "in" : "path",
          "description" : "namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "project",
          "in" : "path",
          "description" : "Project where the entity will be assigned",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Unique integer identifier of the entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "path",
          "in" : "query",
          "description" : "Artifact filepath.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "stream",
          "in" : "query",
          "description" : "Whether to stream the file.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "Whether to force reload.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "connection",
          "in" : "query",
          "description" : "Connection to use.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Delete run artifact",
        "operationId" : "DeleteRunArtifact",
        "parameters" : [ {
          "name" : "namespace",
          "in" : "path",
          "description" : "namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "project",
          "in" : "path",
          "description" : "Project where the run will be assigned",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "path",
          "in" : "query",
          "description" : "Path query param.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "connection",
          "in" : "query",
          "description" : "Connection to use.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/artifacts" : {
      "get" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Get run artifacts",
        "operationId" : "GetRunArtifacts",
        "parameters" : [ {
          "name" : "namespace",
          "in" : "path",
          "description" : "namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "project",
          "in" : "path",
          "description" : "Project where the entity will be assigned",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Unique integer identifier of the entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "path",
          "in" : "query",
          "description" : "Artifact filepath.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "Whether to force reload.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "connection",
          "in" : "query",
          "description" : "Connection to use.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Delete run artifacts",
        "operationId" : "DeleteRunArtifacts",
        "parameters" : [ {
          "name" : "namespace",
          "in" : "path",
          "description" : "namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "project",
          "in" : "path",
          "description" : "Project where the run will be assigned",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "path",
          "in" : "query",
          "description" : "Path query param.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "connection",
          "in" : "query",
          "description" : "Connection to use.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/artifacts/tree" : {
      "get" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Get run artifacts tree",
        "operationId" : "GetRunArtifactsTree",
        "parameters" : [ {
          "name" : "namespace",
          "in" : "path",
          "description" : "namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "project",
          "in" : "path",
          "description" : "Project where the run will be assigned",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "path",
          "in" : "query",
          "description" : "Path query param.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "connection",
          "in" : "query",
          "description" : "Connection to use.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1ArtifactTree"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/events/{kind}" : {
      "get" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Get run events",
        "operationId" : "GetRunEvents",
        "parameters" : [ {
          "name" : "namespace",
          "in" : "path",
          "description" : "namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "project",
          "in" : "path",
          "description" : "Project where the run will be assigned",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "kind",
          "in" : "path",
          "description" : "The artifact kind",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "model", "audio", "video", "histogram", "image", "tensor", "dataframe", "chart", "csv", "tsv", "psv", "ssv", "metric", "env", "html", "text", "file", "dir", "dockerfile", "docker_image", "data", "coderef", "table", "tensorboard", "curve", "confusion", "analysis", "iteration", "markdown", "system", "span", "artifact" ]
          }
        }, {
          "name" : "names",
          "in" : "query",
          "description" : "Names query param.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orient",
          "in" : "query",
          "description" : "Orient query param.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "Force query param.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "sample",
          "in" : "query",
          "description" : "Sample query param.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "connection",
          "in" : "query",
          "description" : "Connection to use.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Optional status.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "created",
            "enum" : [ "created", "resuming", "on_schedule", "compiled", "queued", "scheduled", "starting", "running", "processing", "stopping", "failed", "stopped", "succeeded", "skipped", "warning", "unschedulable", "upstream_failed", "retrying", "unknown", "done" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1EventsResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/k8s_inspect" : {
      "get" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Inspect an active run full conditions",
        "operationId" : "InspectRun",
        "parameters" : [ {
          "name" : "namespace",
          "in" : "path",
          "description" : "namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "project",
          "in" : "path",
          "description" : "Project where the run will be assigned",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "names",
          "in" : "query",
          "description" : "Names query param.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tail",
          "in" : "query",
          "description" : "Query param flag to tail the values.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "Force query param.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "sample",
          "in" : "query",
          "description" : "Sample query param.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "connection",
          "in" : "query",
          "description" : "Connection to use.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Optional status.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "created",
            "enum" : [ "created", "resuming", "on_schedule", "compiled", "queued", "scheduled", "starting", "running", "processing", "stopping", "failed", "stopped", "succeeded", "skipped", "warning", "unschedulable", "upstream_failed", "retrying", "unknown", "done" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/logs" : {
      "get" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Get run logs",
        "operationId" : "GetRunLogs",
        "parameters" : [ {
          "name" : "namespace",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "project",
          "in" : "path",
          "description" : "Project where the run will be assigned",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "last_time",
          "in" : "query",
          "description" : "last time.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "last_file",
          "in" : "query",
          "description" : "last file.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "Force query param.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "connection",
          "in" : "query",
          "description" : "Connection to use.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1Logs"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/notify" : {
      "post" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Notify run status",
        "operationId" : "NotifyRunStatus",
        "parameters" : [ {
          "name" : "namespace",
          "in" : "path",
          "description" : "Na,espace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "project",
          "in" : "path",
          "description" : "Project where the run will be assigned",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1EntityNotificationBody"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/resources" : {
      "get" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Get run resources events",
        "operationId" : "GetRunResources",
        "parameters" : [ {
          "name" : "namespace",
          "in" : "path",
          "description" : "namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "project",
          "in" : "path",
          "description" : "Project where the run will be assigned",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Uuid identifier of the entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "names",
          "in" : "query",
          "description" : "Names query param.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tail",
          "in" : "query",
          "description" : "Query param flag to tail the values.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "Force query param.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "sample",
          "in" : "query",
          "description" : "Sample query param.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "connection",
          "in" : "query",
          "description" : "Connection to use.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Optional status.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "created",
            "enum" : [ "created", "resuming", "on_schedule", "compiled", "queued", "scheduled", "starting", "running", "processing", "stopping", "failed", "stopped", "succeeded", "skipped", "warning", "unschedulable", "upstream_failed", "retrying", "unknown", "done" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1EventsResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/runtimeError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/catalogs/{owner}/artifacts/{uuid}/upload" : {
      "post" : {
        "tags" : [ "ArtifactsStoresV1" ],
        "summary" : "Upload artifact to a store",
        "operationId" : "UploadArtifact",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Unique integer identifier of the entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "path",
          "in" : "query",
          "description" : "File path query params.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "overwrite",
          "in" : "query",
          "description" : "File path query params.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/uuid_upload_body"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{owner}/{project}/artifacts/{uuid}/upload" : {
      "post" : {
        "tags" : [ "ProjectsV1" ],
        "summary" : "Upload artifact to a store via project access",
        "operationId" : "UploadProjectArtifact",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "project",
          "in" : "path",
          "description" : "Project having access to the store",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Unique integer identifier of the entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "path",
          "in" : "query",
          "description" : "File path query params.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "overwrite",
          "in" : "query",
          "description" : "File path query params.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/uuid_upload_body_1"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{owner}/{project}/runs/{uuid}/logs/upload" : {
      "post" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Upload a logs file to a store via run access",
        "operationId" : "UploadRunLogs",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "project",
          "in" : "path",
          "description" : "Project having access to the store",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Unique integer identifier of the entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "path",
          "in" : "query",
          "description" : "File path query params.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "overwrite",
          "in" : "query",
          "description" : "File path query params.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "connection",
          "in" : "query",
          "description" : "Connection to use.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/logs_upload_body"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{owner}/{project}/runs/{uuid}/artifacts/upload" : {
      "post" : {
        "tags" : [ "RunsV1" ],
        "summary" : "Upload an artifact file to a store via run access",
        "operationId" : "UploadRunArtifact",
        "parameters" : [ {
          "name" : "owner",
          "in" : "path",
          "description" : "Owner of the namespace",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "project",
          "in" : "path",
          "description" : "Project having access to the store",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Unique integer identifier of the entity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "path",
          "in" : "query",
          "description" : "File path query params.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "overwrite",
          "in" : "query",
          "description" : "File path query params.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "connection",
          "in" : "query",
          "description" : "Connection to use.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/artifacts_upload_body"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : { }
          },
          "204" : {
            "description" : "No content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "403" : {
            "description" : "You don't have permission to access the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "AgentStateResponseAgentState" : {
        "type" : "object",
        "properties" : {
          "schedules" : {
            "title" : "List of schdules runs",
            "type" : "object",
            "properties" : { }
          },
          "hooks" : {
            "title" : "List of hooks runs",
            "type" : "object",
            "properties" : { }
          },
          "watchdogs" : {
            "title" : "List of watchdogs runs",
            "type" : "object",
            "properties" : { }
          },
          "tuners" : {
            "title" : "List of tuners runs",
            "type" : "object",
            "properties" : { }
          },
          "queued" : {
            "title" : "List of queued runs",
            "type" : "object",
            "properties" : { }
          },
          "stopping" : {
            "title" : "List of stopping runs",
            "type" : "object",
            "properties" : { }
          },
          "deleting" : {
            "title" : "List of deleting runs",
            "type" : "object",
            "properties" : { }
          },
          "apply" : {
            "title" : "List of apply runs",
            "type" : "object",
            "properties" : { }
          },
          "checks" : {
            "title" : "List of run checks",
            "type" : "object",
            "properties" : { }
          },
          "full" : {
            "title" : "A flag to tell the agent that the queues are still full",
            "type" : "boolean"
          }
        }
      },
      "MXJobMode" : {
        "title" : "- MXTrain: Train Mode, requires Server, Scheduler, Worker\n - MXTune: Tune Mode, requires Tuner",
        "type" : "string",
        "default" : "MXTrain",
        "enum" : [ "MXTrain", "MXTune" ]
      },
      "SearchView" : {
        "title" : "Search view",
        "type" : "string",
        "description" : "- any: Any view\n - runs: Runs view\n - selection: Selection view\n - analytics: Analytics view\n - components: Components view\n - models: Models view\n - artifacts: Artifacts view\n - projects: Projects view",
        "default" : "any",
        "enum" : [ "any", "runs", "selection", "analytics", "components", "models", "artifacts", "projects" ]
      },
      "protobufAny" : {
        "type" : "object",
        "properties" : {
          "type_url" : {
            "type" : "string",
            "description" : "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
          },
          "value" : {
            "pattern" : "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type" : "string",
            "description" : "Must be a valid serialized protocol buffer of the above specified type.",
            "format" : "byte"
          }
        },
        "description" : "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n    // or ...\n    if (any.isSameTypeAs(Foo.getDefaultInstance())) {\n      foo = any.unpack(Foo.getDefaultInstance());\n    }\n\nExample 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\nExample 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\nJSON\n\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
      },
      "protobufNullValue" : {
        "type" : "string",
        "description" : "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value.",
        "default" : "NULL_VALUE",
        "enum" : [ "NULL_VALUE" ]
      },
      "runtimeError" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "string"
          },
          "code" : {
            "type" : "integer",
            "format" : "int32"
          },
          "message" : {
            "type" : "string"
          },
          "details" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/protobufAny"
            }
          }
        }
      },
      "v1Activity" : {
        "title" : "Activity specification",
        "type" : "object",
        "properties" : {
          "actor" : {
            "title" : "Actor",
            "type" : "string"
          },
          "owner" : {
            "title" : "Owner",
            "type" : "string"
          },
          "created_at" : {
            "title" : "Created at",
            "type" : "string",
            "format" : "date-time"
          },
          "event_action" : {
            "title" : "Event action",
            "type" : "string"
          },
          "event_subject" : {
            "title" : "Event subject",
            "type" : "string"
          },
          "object_name" : {
            "title" : "Object name",
            "type" : "string"
          },
          "object_uuid" : {
            "title" : "Object uuid",
            "type" : "string"
          },
          "object_parent" : {
            "title" : "Object parent",
            "type" : "string"
          }
        }
      },
      "v1Affinity" : {
        "title" : "Placeholder for Affinity",
        "type" : "object"
      },
      "v1Agent" : {
        "title" : "Agent specification",
        "type" : "object",
        "properties" : {
          "uuid" : {
            "title" : "UUID",
            "type" : "string"
          },
          "name" : {
            "title" : "Name",
            "type" : "string"
          },
          "description" : {
            "title" : "Optional description",
            "type" : "string"
          },
          "tags" : {
            "title" : "Optional tags of this entity",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "live_state" : {
            "title" : "Current live state",
            "type" : "integer",
            "format" : "int32"
          },
          "user" : {
            "title" : "Optional name of user created this entity",
            "type" : "string"
          },
          "namespace" : {
            "title" : "Namespace where the agent is deployed",
            "type" : "string"
          },
          "version_api" : {
            "title" : "Optional version api",
            "type" : "object",
            "properties" : { }
          },
          "version" : {
            "title" : "Agent version",
            "type" : "string"
          },
          "content" : {
            "title" : "Content of the agent config",
            "type" : "string"
          },
          "created_at" : {
            "title" : "Optional time when the entity was created",
            "type" : "string",
            "format" : "date-time"
          },
          "updated_at" : {
            "title" : "Optional last time the entity was updated",
            "type" : "string",
            "format" : "date-time"
          },
          "status" : {
            "$ref" : "#/components/schemas/v1Statuses"
          },
          "status_conditions" : {
            "title" : "The status conditions timeline",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1StatusCondition"
            }
          },
          "is_replica" : {
            "title" : "Agent is in replica mode",
            "type" : "boolean"
          },
          "is_ui_managed" : {
            "title" : "Agent is updatable and managed from the UI",
            "type" : "boolean"
          },
          "hostname" : {
            "title" : "Agent hostname",
            "type" : "string"
          },
          "settings" : {
            "title" : "Optional settings",
            "type" : "object",
            "properties" : { }
          },
          "stats" : {
            "title" : "Optional agent stats",
            "type" : "object",
            "properties" : { }
          },
          "contributors" : {
            "title" : "Contributors",
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : { }
            }
          }
        }
      },
      "v1AgentReconcileBodyRequest" : {
        "title" : "Request data to reconcile agent",
        "type" : "object",
        "properties" : {
          "owner" : {
            "title" : "Owner of the namespace",
            "type" : "string"
          },
          "uuid" : {
            "title" : "Uuid identifier of the entity",
            "type" : "string"
          },
          "reconcile" : {
            "title" : "Reconcile reconcile",
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "v1AgentStateResponse" : {
        "title" : "Contains the agents (queues/runs) state",
        "type" : "object",
        "properties" : {
          "status" : {
            "$ref" : "#/components/schemas/v1Statuses"
          },
          "state" : {
            "$ref" : "#/components/schemas/AgentStateResponseAgentState"
          },
          "live_state" : {
            "type" : "integer",
            "format" : "int32"
          },
          "compatible_updates" : {
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "v1AgentStatusBodyRequest" : {
        "title" : "Request data to create/update agent status",
        "type" : "object",
        "properties" : {
          "owner" : {
            "title" : "Owner of the namespace",
            "type" : "string"
          },
          "uuid" : {
            "title" : "Uuid identifier of the entity",
            "type" : "string"
          },
          "condition" : {
            "$ref" : "#/components/schemas/v1StatusCondition"
          }
        }
      },
      "v1AnalyticsSpec" : {
        "title" : "Analytics spec definition",
        "type" : "object",
        "properties" : {
          "view" : {
            "title" : "View",
            "type" : "string"
          },
          "trunc" : {
            "title" : "Trunc field",
            "type" : "string"
          },
          "groupby" : {
            "title" : "Groupby field",
            "type" : "string"
          },
          "frequency" : {
            "title" : "Stats frequency",
            "type" : "string"
          }
        }
      },
      "v1ArtifactKind" : {
        "title" : "Artifact kind",
        "type" : "string",
        "description" : "- model: Model asset/event\n - audio: Audio asset/event\n - video: Vidio asset/event\n - histogram: Histogram asset/event\n - image: Image asset/event\n - tensor: Tensor asset/event\n - dataframe: Dataframe asset/event\n - chart: plotly/bokeh/vega chart\n - csv: Comma separated values\n - tsv: Tab separated values\n - psv: Pipe separated values\n - ssv: Space separated values\n - metric: Metric asset/event\n - env: Env file\n - html: HTML asset/event\n - text: Text asset/event\n - file: File asset/lineage\n - dir: Dir asset/lineage\n - dockerfile: Dockerfile asset\n - docker_image: Docker image\n - data: Data asset/event\n - coderef: Coderef lineage\n - table: Table asset/event\n - tensorboard: Tensorboard lineage\n - curve: Curve event\n - confusion: Confusion matrix event\n - analysis: Analysis lineage\n - iteration: Iteration lineage\n - markdown: Mardown event\n - system: System event\n - span: Trace/Span event\n - artifact: Generic artifact",
        "default" : "model",
        "enum" : [ "model", "audio", "video", "histogram", "image", "tensor", "dataframe", "chart", "csv", "tsv", "psv", "ssv", "metric", "env", "html", "text", "file", "dir", "dockerfile", "docker_image", "data", "coderef", "table", "tensorboard", "curve", "confusion", "analysis", "iteration", "markdown", "system", "span", "artifact" ]
      },
      "v1ArtifactTree" : {
        "title" : "Artifact tree response",
        "type" : "object",
        "properties" : {
          "files" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "dirs" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "is_done" : {
            "type" : "boolean"
          }
        }
      },
      "v1ArtifactsMount" : {
        "title" : "Artifact mount specification",
        "type" : "object",
        "properties" : {
          "name" : {
            "title" : "Name of the artifact(connection)",
            "type" : "string"
          },
          "paths" : {
            "title" : "Paths to mount",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "v1ArtifactsType" : {
        "title" : "Artifacts type specification",
        "type" : "object",
        "properties" : {
          "files" : {
            "title" : "Optional files to initialize",
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "dirs" : {
            "title" : "Optional dirs to initialize",
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "workers" : {
            "title" : "Optional number of concurrent threads to use",
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "v1Auth" : {
        "title" : "Auth specification",
        "type" : "object",
        "properties" : {
          "token" : {
            "title" : "token hash",
            "type" : "string"
          }
        }
      },
      "v1AuthType" : {
        "title" : "Auth type specification",
        "type" : "object",
        "properties" : {
          "user" : {
            "title" : "Optional user",
            "type" : "string"
          },
          "password" : {
            "title" : "Optional password",
            "type" : "string"
          }
        }
      },
      "v1Bayes" : {
        "title" : "Matrix based on Bayesian Optimization",
        "type" : "object",
        "properties" : {
          "kind" : {
            "title" : "Kind of matrix, should be equal to \"bayes\"",
            "type" : "string",
            "default" : "bayes"
          },
          "params" : {
            "title" : "Hyperparams/Space definition of params to traverse",
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "numInitialRuns" : {
            "title" : "Number of intial random observations to create",
            "type" : "integer",
            "format" : "int32"
          },
          "maxIterations" : {
            "title" : "Maximim number of iteration to produce new observations",
            "type" : "integer",
            "format" : "int32"
          },
          "utilityFunction" : {
            "title" : "A utility function to use for the bayesian optimization",
            "type" : "object",
            "properties" : { }
          },
          "metric" : {
            "$ref" : "#/components/schemas/v1OptimizationMetric"
          },
          "seed" : {
            "title" : "Seed for the random generator",
            "type" : "integer",
            "format" : "int32"
          },
          "concurrency" : {
            "title" : "Number of concurrent runs",
            "type" : "integer",
            "format" : "int32"
          },
          "tuner" : {
            "$ref" : "#/components/schemas/v1Tuner"
          },
          "earlyStopping" : {
            "title" : "A list of Early stopping objects, accpets both metric and failure early stopping mechanisms",
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : { }
            }
          }
        }
      },
      "v1BucketConnection" : {
        "title" : "Bucket connection schema validation specification",
        "type" : "object",
        "properties" : {
          "bucket" : {
            "title" : "Bucket",
            "type" : "string"
          }
        }
      },
      "v1Build" : {
        "title" : "Build definition",
        "type" : "object",
        "properties" : {
          "hubRef" : {
            "title" : "Component name to use",
            "type" : "string"
          },
          "connection" : {
            "title" : "Connection to use",
            "type" : "string"
          },
          "presets" : {
            "title" : "Optional list of presets to use for running this tuner",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "queue" : {
            "title" : "Optional queue to use for scheduling the tuner",
            "type" : "string"
          },
          "namespace" : {
            "title" : "Optional namespace to use, uses agent's namespace by default",
            "type" : "string"
          },
          "cache" : {
            "$ref" : "#/components/schemas/v1Cache"
          },
          "params" : {
            "title" : "Optional dict of params",
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/v1Param"
            }
          },
          "runPatch" : {
            "title" : "Optional a run section to override the content of the run in the template",
            "type" : "object",
            "properties" : { }
          },
          "patchStrategy" : {
            "$ref" : "#/components/schemas/v1PatchStrategy"
          }
        }
      },
      "v1Cache" : {
        "title" : "Cache specification\nCache is calculated based on inputs state as well as component version if used",
        "type" : "object",
        "properties" : {
          "disable" : {
            "title" : "Optional flag to disable cache, Cache is enabled by default",
            "type" : "boolean"
          },
          "ttl" : {
            "title" : "Optional time to live for the cache before it gets invalidated automatically,\nthe TTL is calculated based on the time the run starts",
            "type" : "integer",
            "format" : "int32"
          },
          "io" : {
            "title" : "Optional Inputs/Outputs' names to consider for the cache, default behavior to consider all inputs/outputs",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "sections" : {
            "title" : "Optional sections to consider for the cache, default behavior to consider container(command, args), init section, and connections section",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "v1ClaimConnection" : {
        "title" : "Claim connection schema validation specification",
        "type" : "object",
        "properties" : {
          "volumeClaim" : {
            "title" : "Claim name",
            "type" : "string"
          },
          "mountPath" : {
            "title" : "Mount path",
            "type" : "string"
          },
          "readOnly" : {
            "title" : "Read Only",
            "type" : "boolean"
          },
          "kind" : {
            "type" : "object"
          }
        }
      },
      "v1CleanPodPolicy" : {
        "title" : "CleanPodPolicy",
        "type" : "string",
        "default" : "All",
        "enum" : [ "All", "Running", "None" ]
      },
      "v1Cloning" : {
        "type" : "object",
        "properties" : {
          "uuid" : {
            "title" : "Optional uuid of the original run",
            "type" : "string"
          },
          "name" : {
            "title" : "Optional name of the original run",
            "type" : "string"
          },
          "kind" : {
            "$ref" : "#/components/schemas/v1CloningKind"
          }
        }
      },
      "v1CloningKind" : {
        "type" : "string",
        "default" : "copy",
        "enum" : [ "copy", "restart", "cache" ]
      },
      "v1Compatibility" : {
        "type" : "object",
        "properties" : {
          "cli" : {
            "$ref" : "#/components/schemas/v1Version"
          },
          "platform" : {
            "$ref" : "#/components/schemas/v1Version"
          },
          "agent" : {
            "$ref" : "#/components/schemas/v1Version"
          },
          "ui" : {
            "$ref" : "#/components/schemas/v1Version"
          }
        }
      },
      "v1CompiledOperation" : {
        "title" : "CompiledOperation specification",
        "type" : "object",
        "properties" : {
          "version" : {
            "title" : "Spec version",
            "type" : "number",
            "format" : "float"
          },
          "kind" : {
            "title" : "Optional component kind, should be equal to 'operation'",
            "type" : "string"
          },
          "name" : {
            "title" : "Optional component name, should a valid slug",
            "type" : "string"
          },
          "description" : {
            "title" : "Optional component description",
            "type" : "string"
          },
          "tags" : {
            "title" : "Optional component tags",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "presets" : {
            "title" : "Optional presets to use for running this component",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "queue" : {
            "title" : "Optional queue to use for running this component",
            "type" : "string"
          },
          "cache" : {
            "$ref" : "#/components/schemas/v1Cache"
          },
          "namespace" : {
            "title" : "Optional namespace to use, uses agent's namespace by default",
            "type" : "string"
          },
          "termination" : {
            "$ref" : "#/components/schemas/v1Termination"
          },
          "plugins" : {
            "$ref" : "#/components/schemas/v1Plugins"
          },
          "schedule" : {
            "title" : "Optional schedule section, must be a valid Schedule option (Cron/Interval/Repeatable/ExactTime)",
            "type" : "object",
            "properties" : { }
          },
          "events" : {
            "title" : "Optional events section, must be a valid List of EventTrigger option (Run/Git/Alert/Webhook/Dataset)",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1EventTrigger"
            }
          },
          "build" : {
            "$ref" : "#/components/schemas/v1Build"
          },
          "hooks" : {
            "title" : "Optional hooks section",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1Hook"
            }
          },
          "dependencies" : {
            "title" : "Optional graph dependencies of this op",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "trigger" : {
            "$ref" : "#/components/schemas/v1TriggerPolicy"
          },
          "conditions" : {
            "title" : "An optional template containing conditions to check before starting the run",
            "type" : "string"
          },
          "skipOnUpstreamSkip" : {
            "title" : "Optional flag to skip this run if upstream was skipped",
            "type" : "boolean"
          },
          "matrix" : {
            "title" : "Optional matrix section, must be a valid matrix option (Random/Grid/BO/Hyperband/Hyperopt/Mapping/Iterative)",
            "type" : "object",
            "properties" : { }
          },
          "joins" : {
            "title" : "Optional dict of joins",
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/v1Join"
            }
          },
          "inputs" : {
            "title" : "Optional inputs definition",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1IO"
            }
          },
          "outputs" : {
            "title" : "Optional outputs definition",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1IO"
            }
          },
          "contexts" : {
            "title" : "Optional outputs definition",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1IO"
            }
          },
          "isApproved" : {
            "title" : "Optional flag to mark this specification requires approval before running",
            "type" : "boolean"
          },
          "cost" : {
            "title" : "Optional field to assign cost to this Component",
            "type" : "number",
            "format" : "float"
          },
          "run" : {
            "title" : "Run definition, should be one of run composition: Container/Ray/Dask/Kubeflow/Dask/Dag",
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "v1Component" : {
        "title" : "Component specification",
        "type" : "object",
        "properties" : {
          "version" : {
            "title" : "Spec version",
            "type" : "number",
            "format" : "float"
          },
          "kind" : {
            "title" : "Optional component kind, should be equal to 'operation'",
            "type" : "string"
          },
          "name" : {
            "title" : "Optional component name, should be a valid fully qualified value: name[:version]",
            "type" : "string"
          },
          "description" : {
            "title" : "Optional component description",
            "type" : "string"
          },
          "tags" : {
            "title" : "Optional component tags",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "presets" : {
            "title" : "Optional presets to use for running this component",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "queue" : {
            "title" : "Optional queue to use for running this component",
            "type" : "string"
          },
          "cache" : {
            "$ref" : "#/components/schemas/v1Cache"
          },
          "namespace" : {
            "title" : "Optional namespace to use, uses agent's namespace by default",
            "type" : "string"
          },
          "termination" : {
            "$ref" : "#/components/schemas/v1Termination"
          },
          "plugins" : {
            "$ref" : "#/components/schemas/v1Plugins"
          },
          "hooks" : {
            "title" : "Optional hooks section",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1Hook"
            }
          },
          "inputs" : {
            "title" : "Optional inputs definition",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1IO"
            }
          },
          "outputs" : {
            "title" : "Optional outputs definition",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1IO"
            }
          },
          "build" : {
            "$ref" : "#/components/schemas/v1Build"
          },
          "run" : {
            "title" : "Run definition, should be one of: Job/Service/Ray/Kubeflow/Dask/Dag",
            "type" : "object",
            "properties" : { }
          },
          "template" : {
            "$ref" : "#/components/schemas/v1Template"
          },
          "isApproved" : {
            "title" : "Optional flag to mark this specification requires approval before running",
            "type" : "boolean"
          },
          "cost" : {
            "title" : "Optional field to assign cost to this Component",
            "type" : "number",
            "format" : "float"
          }
        }
      },
      "v1ConnectionKind" : {
        "title" : "Connection kinds",
        "type" : "string",
        "default" : "host_path",
        "enum" : [ "host_path", "volume_claim", "gcs", "s3", "wasb", "registry", "git", "aws", "gcp", "azure", "mysql", "postgres", "oracle", "vertica", "sqlite", "mssql", "redis", "presto", "mongo", "cassandra", "ftp", "grpc", "hdfs", "http", "pig_cli", "hive_cli", "hive_metastore", "hive_server2", "jdbc", "jenkins", "samba", "snowflake", "ssh", "cloudant", "databricks", "segment", "slack", "discord", "mattermost", "pagerduty", "hipchat", "webhook", "custom" ]
      },
      "v1ConnectionResource" : {
        "title" : "K8S resource schema validation",
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "mountPath" : {
            "type" : "string"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "defaultMode" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "v1ConnectionResponse" : {
        "title" : "Connection specification",
        "type" : "object",
        "properties" : {
          "uuid" : {
            "title" : "UUID",
            "type" : "string"
          },
          "name" : {
            "title" : "Name",
            "type" : "string"
          },
          "agent" : {
            "title" : "Agent",
            "type" : "string"
          },
          "user" : {
            "title" : "Optional name of user created this entity",
            "type" : "string"
          },
          "description" : {
            "title" : "Optional description",
            "type" : "string"
          },
          "tags" : {
            "title" : "Optional tags of this entity",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "created_at" : {
            "title" : "Optional time when the entity was created",
            "type" : "string",
            "format" : "date-time"
          },
          "updated_at" : {
            "title" : "Optional last time the entity was updated",
            "type" : "string",
            "format" : "date-time"
          },
          "live_state" : {
            "title" : "Current live state",
            "type" : "integer",
            "format" : "int32"
          },
          "kind" : {
            "$ref" : "#/components/schemas/v1ConnectionKind"
          }
        }
      },
      "v1ConnectionSchema" : {
        "type" : "object",
        "properties" : {
          "bucketConnection" : {
            "$ref" : "#/components/schemas/v1BucketConnection"
          },
          "hostPathConnection" : {
            "$ref" : "#/components/schemas/v1HostPathConnection"
          },
          "claimConnection" : {
            "$ref" : "#/components/schemas/v1ClaimConnection"
          },
          "hostConnection" : {
            "$ref" : "#/components/schemas/v1HostConnection"
          },
          "gitConnection" : {
            "$ref" : "#/components/schemas/v1GitConnection"
          }
        }
      },
      "v1ConnectionType" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "title" : "Connection name",
            "type" : "string"
          },
          "description" : {
            "title" : "Optional connection description",
            "type" : "string"
          },
          "tags" : {
            "title" : "Optional connection tags",
            "type" : "string"
          },
          "kind" : {
            "$ref" : "#/components/schemas/v1ConnectionKind"
          },
          "schema" : {
            "title" : "The connection schema should be a valid ConnectionSchema",
            "type" : "object",
            "properties" : { }
          },
          "secret" : {
            "$ref" : "#/components/schemas/v1ConnectionResource"
          },
          "configMap" : {
            "$ref" : "#/components/schemas/v1ConnectionResource"
          },
          "env" : {
            "title" : "Environment variables",
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "annotations" : {
            "title" : "Optional Metadata annotations to pass to k8s",
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "v1Container" : {
        "title" : "Placeholder for Container",
        "type" : "object"
      },
      "v1Credentials" : {
        "title" : "Login",
        "type" : "object",
        "properties" : {
          "username" : {
            "title" : "User username or email",
            "type" : "string"
          },
          "password" : {
            "title" : "User password",
            "type" : "string"
          }
        }
      },
      "v1CronSchedule" : {
        "title" : "Cron schedule specification",
        "type" : "object",
        "properties" : {
          "kind" : {
            "title" : "Kind of schedule, should be equal to \"cron\"",
            "type" : "string",
            "default" : "cron"
          },
          "startAt" : {
            "title" : "Whan to start this cron schedule",
            "type" : "string",
            "format" : "date-time"
          },
          "endAt" : {
            "title" : "Whan to end this cron schedule",
            "type" : "string",
            "format" : "date-time"
          },
          "maxRuns" : {
            "title" : "Limit to stop executing this schedule",
            "type" : "integer",
            "format" : "int32"
          },
          "cron" : {
            "title" : "Cron definition, e.g. 0 1 * * *",
            "type" : "string"
          },
          "dependsOnPast" : {
            "title" : "A flag to set a dependency on past executions",
            "type" : "boolean"
          }
        }
      },
      "v1Dag" : {
        "title" : "Dag specificaiton",
        "type" : "object",
        "properties" : {
          "kind" : {
            "title" : "Optional component kind, should be equal to 'dag'",
            "type" : "string",
            "default" : "dag"
          },
          "operations" : {
            "title" : "Ops used in the graph",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1Operation"
            }
          },
          "components" : {
            "title" : "Optional component refrences",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1Component"
            }
          },
          "concurrency" : {
            "title" : "Optional component description",
            "type" : "integer",
            "format" : "int32"
          },
          "earlyStopping" : {
            "title" : "Optional component tags",
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "environment" : {
            "$ref" : "#/components/schemas/v1Environment"
          },
          "connections" : {
            "title" : "Optional connections section",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "volumes" : {
            "type" : "array",
            "description" : "Volumes is a list of volumes that can be mounted.",
            "items" : {
              "$ref" : "#/components/schemas/v1Volume"
            }
          }
        }
      },
      "v1DagRef" : {
        "title" : "Dag reference specification",
        "type" : "object",
        "properties" : {
          "kind" : {
            "title" : "Kind of reference, should be equal to \"dag_ref\"",
            "type" : "string",
            "default" : "dag_ref"
          },
          "name" : {
            "title" : "Value",
            "type" : "string"
          }
        }
      },
      "v1Dashboard" : {
        "title" : "Dashboard specification",
        "type" : "object",
        "properties" : {
          "uuid" : {
            "title" : "UUID",
            "type" : "string"
          },
          "name" : {
            "title" : "Optional name",
            "type" : "string"
          },
          "description" : {
            "title" : "Optional description",
            "type" : "string"
          },
          "tags" : {
            "title" : "Optional tags of this entity",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "live_state" : {
            "title" : "Current live state",
            "type" : "integer",
            "format" : "int32"
          },
          "user" : {
            "title" : "Required name of user started this entity",
            "type" : "string"
          },
          "spec" : {
            "$ref" : "#/components/schemas/v1DashboardSpec"
          },
          "org_level" : {
            "title" : "Optional dashboard level",
            "type" : "boolean"
          },
          "created_at" : {
            "title" : "Optional time when the entity was created",
            "type" : "string",
            "format" : "date-time"
          },
          "updated_at" : {
            "title" : "Optional last time the entity was updated",
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "v1DashboardSpec" : {
        "title" : "Dashboard spec definition",
        "type" : "object",
        "properties" : {
          "sections" : {
            "title" : "Section Spec",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1SectionSpec"
            }
          },
          "xaxis" : {
            "title" : "xaxis",
            "type" : "string"
          },
          "smoothing" : {
            "title" : "Smoothing",
            "type" : "integer",
            "format" : "int32"
          },
          "step" : {
            "title" : "Step",
            "type" : "integer",
            "format" : "int32"
          },
          "ignore_outliers" : {
            "title" : "Ignore outliers",
            "type" : "boolean"
          },
          "sample_size" : {
            "title" : "Sample size",
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "v1DaskJob" : {
        "title" : "Dask specification",
        "type" : "object",
        "properties" : {
          "kind" : {
            "title" : "Optional component kind, should be equal to 'daskjob'",
            "type" : "string",
            "default" : "daskjob"
          },
          "job" : {
            "$ref" : "#/components/schemas/v1DaskReplica"
          },
          "worker" : {
            "$ref" : "#/components/schemas/v1DaskReplica"
          },
          "scheduler" : {
            "$ref" : "#/components/schemas/v1DaskReplica"
          }
        }
      },
      "v1DaskReplica" : {
        "title" : "Dask replica definition",
        "type" : "object",
        "properties" : {
          "replicas" : {
            "title" : "Number of replicas",
            "type" : "integer",
            "format" : "int32"
          },
          "environment" : {
            "$ref" : "#/components/schemas/v1Environment"
          },
          "connections" : {
            "title" : "Optional connections section",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "volumes" : {
            "title" : "Optional connections section",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1Volume"
            }
          },
          "init" : {
            "title" : "Optional init connections section",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1Init"
            }
          },
          "sidecars" : {
            "title" : "Optional sidecars section",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1Container"
            }
          },
          "container" : {
            "$ref" : "#/components/schemas/v1Container"
          }
        }
      },
      "v1DateTimeSchedule" : {
        "title" : "DateTime schedule specification",
        "type" : "object",
        "properties" : {
          "kind" : {
            "title" : "Kind of schedule, should be equal to \"datetime\"",
            "type" : "string",
            "default" : "datetime"
          },
          "startAt" : {
            "title" : "Whan to start this cron schedule",
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "v1DiffStoppingPolicy" : {
        "type" : "object",
        "properties" : {
          "kind" : {
            "title" : "Kind of this stopping policy, should be equal to \"average\"",
            "type" : "string"
          },
          "percent" : {
            "title" : "The diff factor, if not given than a zero tolerance policy is applied",
            "type" : "number",
            "format" : "float"
          },
          "evaluationInterval" : {
            "type" : "integer",
            "description" : "Interval/Frequency for applying the policy.",
            "format" : "int32"
          },
          "minInterval" : {
            "title" : "Min interval (e.g steps) before starting the process",
            "type" : "integer",
            "format" : "int32"
          },
          "minSamples" : {
            "title" : "Min samples runs succeeded before starting the process",
            "type" : "integer",
            "format" : "int32"
          }
        },
        "description" : "Early stopping with diff factor stopping, this policy computes checks runs against the best run\nand stops those whose performance is worse than the best by the factor defined by the user."
      },
      "v1DockerfileType" : {
        "title" : "Dockerfile type specification",
        "type" : "object",
        "properties" : {
          "image" : {
            "title" : "Docker image to use as a base",
            "type" : "string"
          },
          "env" : {
            "title" : "An optional list of tuples(key, value) for defining env vars, translate to an ENV statements",
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "path" : {
            "title" : "An optional list of strings for exporting paths, translate to a PATH statements",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "copy" : {
            "title" : "An optional list of strings or tuples for copying paths, translate to a COPY statements, if string is passed the path is copy to the workdir",
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "post_run_copy" : {
            "title" : "An optional list of strings or tuples for copying paths post run commands to leverage the cache, translate to a COPY statements, if string is passed the path is copy to the workdir",
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "run" : {
            "title" : "An optional list of strings for executing Run commands, translate to a RUN statements",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "langEnv" : {
            "title" : "An optional string defining a language, e.g. en_US.UTF-8",
            "type" : "string"
          },
          "uid" : {
            "title" : "A uid to use when creating the docker image",
            "type" : "integer",
            "format" : "int32"
          },
          "gid" : {
            "title" : "A gid to use when creating the docker image",
            "type" : "integer",
            "format" : "int32"
          },
          "username" : {
            "title" : "Optional username value to use, default to \"polyaxon\"",
            "type" : "integer",
            "format" : "int32"
          },
          "filename" : {
            "title" : "A filename to give to the generated dockerfile",
            "type" : "string"
          },
          "workdir" : {
            "title" : "A work dir to copy code to, default to /code",
            "type" : "string"
          },
          "workdirPath" : {
            "title" : "An optional workdir path",
            "type" : "string"
          },
          "shell" : {
            "title" : "An optional shell type, defaults to \"/bin/bash\"",
            "type" : "string"
          }
        }
      },
      "v1EarlyStopping" : {
        "title" : "All Schemas message",
        "type" : "object",
        "properties" : {
          "median" : {
            "$ref" : "#/components/schemas/v1MedianStoppingPolicy"
          },
          "diff" : {
            "$ref" : "#/components/schemas/v1DiffStoppingPolicy"
          },
          "truncation" : {
            "$ref" : "#/components/schemas/v1TruncationStoppingPolicy"
          },
          "metric" : {
            "$ref" : "#/components/schemas/v1MetricEarlyStopping"
          },
          "failure" : {
            "$ref" : "#/components/schemas/v1FailureEarlyStopping"
          }
        }
      },
      "v1EntitiesTags" : {
        "type" : "object",
        "properties" : {
          "uuids" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "v1EntitiesTransfer" : {
        "type" : "object",
        "properties" : {
          "uuids" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "project" : {
            "type" : "string"
          }
        }
      },
      "v1EntityNotificationBody" : {
        "title" : "Request data to create/update entity status",
        "type" : "object",
        "properties" : {
          "namespace" : {
            "title" : "Na,espace",
            "type" : "string"
          },
          "owner" : {
            "title" : "Owner of the namespace",
            "type" : "string"
          },
          "project" : {
            "title" : "Project where the run will be assigned",
            "type" : "string"
          },
          "uuid" : {
            "title" : "Uuid identifier of the entity",
            "type" : "string"
          },
          "name" : {
            "title" : "Optional name of the entity",
            "type" : "string"
          },
          "condition" : {
            "$ref" : "#/components/schemas/v1StatusCondition"
          },
          "connections" : {
            "title" : "Connections to notify",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "v1EntityStageBodyRequest" : {
        "title" : "Request data to create/update entity stage",
        "type" : "object",
        "properties" : {
          "owner" : {
            "title" : "Owner of the namespace",
            "type" : "string"
          },
          "entity" : {
            "title" : "Entity namespace",
            "type" : "string"
          },
          "kind" : {
            "title" : "Optional kind, only required for an version entity",
            "type" : "string"
          },
          "name" : {
            "title" : "Name of the entity to apply the stage to",
            "type" : "string"
          },
          "condition" : {
            "$ref" : "#/components/schemas/v1StageCondition"
          }
        }
      },
      "v1EntityStatusBodyRequest" : {
        "title" : "Request data to create/update entity status",
        "type" : "object",
        "properties" : {
          "owner" : {
            "title" : "Owner of the namespace",
            "type" : "string"
          },
          "project" : {
            "title" : "Project where the run will be assigned",
            "type" : "string"
          },
          "uuid" : {
            "title" : "Uuid identifier of the entity",
            "type" : "string"
          },
          "condition" : {
            "$ref" : "#/components/schemas/v1StatusCondition"
          },
          "force" : {
            "title" : "Force flag",
            "type" : "boolean"
          }
        }
      },
      "v1Environment" : {
        "title" : "Environment specification",
        "type" : "object",
        "properties" : {
          "labels" : {
            "title" : "Optional Metadata labels to pass to k8s",
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "annotations" : {
            "title" : "Optional Metadata annotations to pass to k8s",
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "nodeSelector" : {
            "title" : "Optional NodeSelector is a selector which must be true for the pod to fit on a node.\nSelector which must match a node's labels for the pod to be scheduled on that node.\nMore info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "affinity" : {
            "$ref" : "#/components/schemas/v1Affinity"
          },
          "tolerations" : {
            "type" : "array",
            "description" : "Optional Tolerations to apply.",
            "items" : {
              "$ref" : "#/components/schemas/v1Toleration"
            }
          },
          "nodeName" : {
            "type" : "string",
            "description" : "Optional NodeName is a request to schedule this pod onto a specific node. If it is non-empty,\nthe scheduler simply schedules this pod onto that node, assuming that it fits resource\nrequirements."
          },
          "serviceAccountName" : {
            "title" : "Optional service account name to use for this run",
            "type" : "string"
          },
          "hostAliases" : {
            "type" : "array",
            "description" : "Optional HostAliases is an optional list of hosts and IPs that will be injected into the pod spec.",
            "items" : {
              "$ref" : "#/components/schemas/v1HostAlias"
            }
          },
          "securityContext" : {
            "$ref" : "#/components/schemas/v1PodSecurityContext"
          },
          "imagePullSecrets" : {
            "title" : "Optional image pull secrets to use for this run\nImagePullSecrets is a list of references to secrets in the same namespace to use for pulling any images\nin pods that reference this ServiceAccount. ImagePullSecrets are distinct from Secrets because Secrets\ncan be mounted in the pod, but ImagePullSecrets are only accessed by the kubelet.\nMore info: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hostNetwork" : {
            "type" : "boolean",
            "description" : "Host networking requested for this workflow pod. Default to false."
          },
          "hostPID" : {
            "type" : "string",
            "description" : "Use the host's pid namespace. Default to false."
          },
          "dnsPolicy" : {
            "type" : "string",
            "description" : "Set DNS policy for the pod.\nDefaults to \"ClusterFirst\".\nValid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'.\nDNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy.\nTo have DNS options set along with hostNetwork, you have to specify DNS policy\nexplicitly to 'ClusterFirstWithHostNet'."
          },
          "dnsConfig" : {
            "$ref" : "#/components/schemas/v1PodDNSConfig"
          },
          "schedulerName" : {
            "title" : "If specified, the pod will be dispatched by specified scheduler.\nOr it will be dispatched by workflow scope scheduler if specified.\nIf neither specified, the pod will be dispatched by default scheduler.\n+optional",
            "type" : "string"
          },
          "priorityClassName" : {
            "type" : "string",
            "description" : "If specified, indicates the pod's priority. \"system-node-critical\" and\n\"system-cluster-critical\" are two special keywords which indicate the\nhighest priorities with the former being the highest priority. Any other\nname must be defined by creating a PriorityClass object with that name.\nIf not specified, the pod priority will be default or zero if there is no\ndefault."
          },
          "priority" : {
            "type" : "integer",
            "description" : "The priority value. Various system components use this field to find the\npriority of the pod. When Priority Admission Controller is enabled, it\nprevents users from setting this field. The admission controller populates\nthis field from PriorityClassName.\nThe higher the value, the higher the priority.",
            "format" : "int32"
          },
          "restartPolicy" : {
            "title" : "A valid restart policy",
            "type" : "string"
          }
        }
      },
      "v1Event" : {
        "title" : "Event spec definition",
        "type" : "object",
        "properties" : {
          "timestamp" : {
            "title" : "Optional time when the entity was created",
            "type" : "string",
            "format" : "date-time"
          },
          "step" : {
            "type" : "integer",
            "description" : "Global step of the event.",
            "format" : "int32"
          },
          "metric" : {
            "type" : "number",
            "format" : "float"
          },
          "image" : {
            "$ref" : "#/components/schemas/v1EventImage"
          },
          "histogram" : {
            "$ref" : "#/components/schemas/v1EventHistogram"
          },
          "audio" : {
            "$ref" : "#/components/schemas/v1EventAudio"
          },
          "video" : {
            "$ref" : "#/components/schemas/v1EventVideo"
          },
          "html" : {
            "type" : "string"
          },
          "text" : {
            "type" : "string"
          },
          "chart" : {
            "$ref" : "#/components/schemas/v1EventChart"
          },
          "model" : {
            "$ref" : "#/components/schemas/v1EventModel"
          },
          "artifact" : {
            "$ref" : "#/components/schemas/v1EventArtifact"
          },
          "dataframe" : {
            "$ref" : "#/components/schemas/v1EventDataframe"
          },
          "curve" : {
            "$ref" : "#/components/schemas/v1EventCurve"
          },
          "confusion" : {
            "$ref" : "#/components/schemas/v1EventConfusionMatrix"
          },
          "span" : {
            "$ref" : "#/components/schemas/v1EventSpan"
          }
        }
      },
      "v1EventArtifact" : {
        "title" : "Artifact spec definition",
        "type" : "object",
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/v1ArtifactKind"
          },
          "path" : {
            "title" : "Filepath",
            "type" : "string"
          }
        }
      },
      "v1EventAudio" : {
        "title" : "Audio spec definition",
        "type" : "object",
        "properties" : {
          "sample_rate" : {
            "type" : "number",
            "description" : "Sample rate of the audio in Hz.",
            "format" : "float"
          },
          "num_channels" : {
            "type" : "integer",
            "description" : "Number of channels of audio.",
            "format" : "int32"
          },
          "length_frames" : {
            "type" : "integer",
            "description" : "Length of the audio in frames (samples per channel).",
            "format" : "int32"
          },
          "content_type" : {
            "title" : "Content type of the audio",
            "type" : "string"
          },
          "path" : {
            "title" : "/ Filepath",
            "type" : "string"
          }
        }
      },
      "v1EventChart" : {
        "title" : "Chart spec definition",
        "type" : "object",
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/v1EventChartKind"
          },
          "figure" : {
            "title" : "Figure json object",
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "v1EventChartKind" : {
        "title" : "Chart kind",
        "type" : "string",
        "description" : "- plotly: Plotly chart\n - bokeh: Bokeh chart\n - vega: Vega chart",
        "default" : "plotly",
        "enum" : [ "plotly", "bokeh", "vega" ]
      },
      "v1EventConfusionMatrix" : {
        "title" : "Cofusion matrix spec definition",
        "type" : "object",
        "properties" : {
          "x" : {
            "title" : "X",
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "y" : {
            "title" : "Y",
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "z" : {
            "title" : "Z",
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : { }
            }
          }
        }
      },
      "v1EventCurve" : {
        "title" : "Custom Curve spec definition",
        "type" : "object",
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/v1EventCurveKind"
          },
          "x" : {
            "title" : "X",
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "float"
            }
          },
          "y" : {
            "title" : "Y",
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "float"
            }
          },
          "annotation" : {
            "title" : "Annotation",
            "type" : "string"
          }
        }
      },
      "v1EventCurveKind" : {
        "title" : "Curve kind",
        "type" : "string",
        "description" : "- roc: ROC curve\n - pr: Precision Recall curve\n - custom: Custom curve",
        "default" : "roc",
        "enum" : [ "roc", "pr", "custom" ]
      },
      "v1EventDataframe" : {
        "title" : "Dataframe spec definition",
        "type" : "object",
        "properties" : {
          "path" : {
            "title" : "Filepath",
            "type" : "string"
          },
          "content_type" : {
            "title" : "Format",
            "type" : "string"
          }
        }
      },
      "v1EventHistogram" : {
        "title" : "Histogram spec definition",
        "type" : "object",
        "properties" : {
          "values" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          },
          "counts" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          }
        }
      },
      "v1EventImage" : {
        "title" : "Image spec definition",
        "type" : "object",
        "properties" : {
          "height" : {
            "type" : "integer",
            "description" : "Height of the image.",
            "format" : "int32"
          },
          "width" : {
            "type" : "integer",
            "description" : "Width of the image.",
            "format" : "int32"
          },
          "colorspace" : {
            "title" : "Valid colorspace values are\n  1 - grayscale\n  2 - grayscale + alpha\n  3 - RGB\n  4 - RGBA\n  5 - DIGITAL_YUV\n  6 - BGRA",
            "type" : "integer",
            "format" : "int32"
          },
          "path" : {
            "title" : "Filepath",
            "type" : "string"
          }
        }
      },
      "v1EventKind" : {
        "type" : "string",
        "default" : "run_status_created",
        "enum" : [ "run_status_created", "run_status_resuming", "run_status_compiled", "run_status_on_schedule", "run_status_queued", "run_status_scheduled", "run_status_starting", "run_status_running", "run_status_processing", "run_status_stopping", "run_status_failed", "run_status_stopped", "run_status_succeeded", "run_status_skipped", "run_status_warning", "run_status_unschedulable", "run_status_upstream_failed", "run_status_retrying", "run_status_unknown", "run_status_done", "run_approved_actor", "run_invalidated_actor", "run_new_artifacts", "connection_git_commit", "connection_dataset_version", "connection_registry_image", "alert_info", "alert_warning", "alert_critical", "model_version_new_metric", "project_custom_event", "org_custom_event" ]
      },
      "v1EventModel" : {
        "title" : "Model spec definition",
        "type" : "object",
        "properties" : {
          "framework" : {
            "title" : "Model framwork",
            "type" : "string"
          },
          "path" : {
            "title" : "Filepath",
            "type" : "string"
          },
          "spec" : {
            "title" : "Model spec (a dictionnary defnining the requirement for the model)",
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "v1EventSpan" : {
        "title" : "Trace/Span spec definition",
        "type" : "object",
        "properties" : {
          "uuid" : {
            "title" : "UUID",
            "type" : "string"
          },
          "name" : {
            "title" : "Name",
            "type" : "string"
          },
          "tags" : {
            "title" : "Tags",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "started_at" : {
            "title" : "Start time",
            "type" : "string",
            "format" : "date-time"
          },
          "finished_at" : {
            "title" : "End time",
            "type" : "string",
            "format" : "date-time"
          },
          "status" : {
            "$ref" : "#/components/schemas/v1Statuses"
          },
          "status_conditions" : {
            "title" : "Status conditions",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1StatusCondition"
            }
          },
          "metadata" : {
            "title" : "Metadata",
            "type" : "object",
            "properties" : { }
          },
          "inputs" : {
            "title" : "Inputs",
            "type" : "object",
            "properties" : { }
          },
          "outputs" : {
            "title" : "Outputs",
            "type" : "object",
            "properties" : { }
          },
          "children" : {
            "title" : "Child events",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1EventSpan"
            }
          },
          "kind" : {
            "$ref" : "#/components/schemas/v1EventSpanKind"
          }
        }
      },
      "v1EventSpanKind" : {
        "title" : "Curve kind",
        "type" : "string",
        "default" : "llm",
        "enum" : [ "llm", "chain", "agent", "tool", "embedding", "retriever" ]
      },
      "v1EventTrigger" : {
        "title" : "Event definition",
        "type" : "object",
        "properties" : {
          "kinds" : {
            "title" : "The event kinds to subscribe to for the current reference",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1EventKind"
            }
          },
          "ref" : {
            "title" : "Ref corresponds to a reference of an object",
            "type" : "string"
          }
        }
      },
      "v1EventType" : {
        "title" : "Event type specification",
        "type" : "object",
        "properties" : {
          "name" : {
            "title" : "Name of the event",
            "type" : "string"
          },
          "kind" : {
            "$ref" : "#/components/schemas/v1ArtifactKind"
          }
        }
      },
      "v1EventVideo" : {
        "title" : "Video spec definition",
        "type" : "object",
        "properties" : {
          "height" : {
            "type" : "integer",
            "description" : "Height of the video.",
            "format" : "int32"
          },
          "width" : {
            "type" : "integer",
            "description" : "Width of the video.",
            "format" : "int32"
          },
          "colorspace" : {
            "title" : "Valid colorspace values are\n  1 - grayscale\n  2 - grayscale + alpha\n  3 - RGB\n  4 - RGBA\n  5 - DIGITAL_YUV\n  6 - BGRA",
            "type" : "integer",
            "format" : "int32"
          },
          "path" : {
            "title" : "Filepath",
            "type" : "string"
          },
          "content_type" : {
            "title" : "Content type of the video",
            "type" : "string"
          }
        }
      },
      "v1EventsResponse" : {
        "title" : "Events response definition",
        "type" : "object",
        "properties" : {
          "data" : {
            "title" : "Events data",
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : { }
            }
          }
        }
      },
      "v1FailureEarlyStopping" : {
        "type" : "object",
        "properties" : {
          "kind" : {
            "title" : "Kind of this metric early stopping policy, should be equal to \"failure_early_stopping\"",
            "type" : "string",
            "default" : "failure_early_stopping"
          },
          "percent" : {
            "type" : "integer",
            "description" : "The percentage of failed runs, at each evaluation interval.\ne.g. 1 - 99.",
            "format" : "int32"
          }
        },
        "description" : "FailureEarlyStoppingSchema specification\nEarly stopping based on failure config.\nthis policy stops based on a percentage of\nfailed runs at every evaluation."
      },
      "v1FileType" : {
        "title" : "File type specification",
        "type" : "object",
        "properties" : {
          "content" : {
            "title" : "File content",
            "type" : "string"
          },
          "filename" : {
            "title" : "A name to give to the generated file",
            "type" : "string"
          },
          "chmod" : {
            "title" : "An optional permissions to apply to the file after creation, e.g +x",
            "type" : "string"
          },
          "kind" : {
            "title" : "An optional Artifact kind to log the lineage information",
            "type" : "string"
          }
        }
      },
      "v1GcsType" : {
        "title" : "Wasb type specification",
        "type" : "object",
        "properties" : {
          "bucket" : {
            "title" : "Optional container",
            "type" : "string"
          },
          "blob" : {
            "title" : "Optional storage_account",
            "type" : "string"
          }
        }
      },
      "v1GitConnection" : {
        "title" : "Git connection schema validation connection",
        "type" : "object",
        "properties" : {
          "url" : {
            "title" : "Url",
            "type" : "string"
          },
          "revision" : {
            "title" : "revision",
            "type" : "boolean"
          },
          "flags" : {
            "title" : "Additional command flag",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "v1GitType" : {
        "title" : "Git type specification, url or a connection is required",
        "type" : "object",
        "properties" : {
          "url" : {
            "title" : "Optional Url",
            "type" : "string"
          },
          "revision" : {
            "title" : "Optional revision",
            "type" : "string"
          },
          "flags" : {
            "title" : "Addional command flag",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "v1GridSearch" : {
        "title" : "Matrix based on grid/cartesian product generated search space",
        "type" : "object",
        "properties" : {
          "kind" : {
            "title" : "Kind of matrix, should be equal to \"grid\"",
            "type" : "string",
            "default" : "grid"
          },
          "params" : {
            "title" : "Hyperparams/Space definition of params to traverse",
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "numRuns" : {
            "title" : "Number of runs to generate and search",
            "type" : "integer",
            "format" : "int32"
          },
          "seed" : {
            "title" : "Seed for the random generator",
            "type" : "integer",
            "format" : "int32"
          },
          "concurrency" : {
            "title" : "Number of concurrent runs",
            "type" : "integer",
            "format" : "int32"
          },
          "earlyStopping" : {
            "title" : "A list of Early stopping objects, accpets both metric and failure early stopping mechanisms",
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : { }
            }
          }
        }
      },
      "v1Hook" : {
        "title" : "Hook definition",
        "type" : "object",
        "properties" : {
          "hubRef" : {
            "title" : "Component name to use",
            "type" : "string"
          },
          "connection" : {
            "title" : "Connection to use",
            "type" : "string"
          },
          "trigger" : {
            "$ref" : "#/components/schemas/v1Statuses"
          },
          "conditions" : {
            "title" : "An optional template containing conditions to check before starting the run",
            "type" : "string"
          },
          "params" : {
            "title" : "Optional dict of params",
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/v1Param"
            }
          },
          "presets" : {
            "title" : "Optional preset to use for running this operation",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "queue" : {
            "title" : "Optional queue to use for scheduling the hook",
            "type" : "string"
          },
          "namespace" : {
            "title" : "Optional namespace to use, uses agent's namespace by default",
            "type" : "string"
          },
          "disableDefaults" : {
            "title" : "Optional params context from the main operation",
            "type" : "boolean"
          }
        }
      },
      "v1HostAlias" : {
        "title" : "Placeholder for HostAlias",
        "type" : "object"
      },
      "v1HostConnection" : {
        "title" : "Host connection schema validation connection",
        "type" : "object",
        "properties" : {
          "url" : {
            "title" : "Url",
            "type" : "string"
          },
          "insecure" : {
            "title" : "insecure",
            "type" : "boolean"
          }
        }
      },
      "v1HostPathConnection" : {
        "title" : "Host path connection schema validation specification",
        "type" : "object",
        "properties" : {
          "hostPath" : {
            "title" : "host path",
            "type" : "string"
          },
          "mountPath" : {
            "title" : "Mount path",
            "type" : "string"
          },
          "readOnly" : {
            "title" : "Read Only",
            "type" : "boolean"
          },
          "kind" : {
            "type" : "object"
          }
        }
      },
      "v1HpChoice" : {
        "title" : "HP Choice specification",
        "type" : "object",
        "properties" : {
          "kind" : {
            "title" : "Kind of hp, should be equal to \"choice\"",
            "type" : "string",
            "default" : "choice"
          },
          "value" : {
            "title" : "Value",
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "v1HpDateRange" : {
        "title" : "DateRange specification",
        "type" : "object",
        "properties" : {
          "kind" : {
            "title" : "Kind of hp, should be equal to \"daterange\"",
            "type" : "string",
            "default" : "daterange"
          },
          "value" : {
            "title" : "Value",
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "v1HpDateTimeRange" : {
        "title" : "DateTimeRange specification",
        "type" : "object",
        "properties" : {
          "kind" : {
            "title" : "Kind of hp, should be equal to \"datetimerange\"",
            "type" : "string",
            "default" : "datetimerange"
          },
          "value" : {
            "title" : "Value",
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "v1HpGeomSpace" : {
        "title" : "HP Geom Space specification",
        "type" : "object",
        "properties" : {
          "kind" : {
            "title" : "Kind of hp, should be equal to \"geomspace\"",
            "type" : "string",
            "default" : "geomspace"
          },
          "value" : {
            "title" : "Value",
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "v1HpLinSpace" : {
        "title" : "HP Linear Space specification",
        "type" : "object",
        "properties" : {
          "kind" : {
            "title" : "Kind of hp, should be equal to \"linspace\"",
            "type" : "string",
            "default" : "linspace"
          },
          "value" : {
            "title" : "Value",
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "v1HpLogNormal" : {
        "title" : "HP Log Normal Dist specification",
        "type" : "object",
        "properties" : {
          "kind" : {
            "title" : "Kind of hp, should be equal to \"lognormal\"",
            "type" : "string",
            "default" : "lognormal"
          },
          "value" : {
            "title" : "Value",
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "v1HpLogSpace" : {
        "title" : "HP Log Space specification",
        "type" : "object",
        "properties" : {
          "kind" : {
            "title" : "Kind of hp, should be equal to \"logspace\"",
            "type" : "string",
            "default" : "logspace"
          },
          "value" : {
            "title" : "Value",
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "v1HpLogUniform" : {
        "title" : "HP Log Uniform Dist specification",
        "type" : "object",
        "properties" : {
          "kind" : {
            "title" : "Kind of hp, should be equal to \"loguniform\"",
            "type" : "string",
            "default" : "loguniform"
          },
          "value" : {
            "title" : "Value",
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "v1HpNormal" : {
        "title" : "HP Normal Dist specification",
        "type" : "object",
        "properties" : {
          "kind" : {
            "title" : "Kind of hp, should be equal to \"normal\"",
            "type" : "string",
            "default" : "normal"
          },
          "value" : {
            "title" : "Value",
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "v1HpPChoice" : {
        "title" : "HP Probabilistic Choice specification",
        "type" : "object",
        "properties" : {
          "kind" : {
            "title" : "Kind of hp, should be equal to \"pchoice\"",
            "type" : "string",
            "default" : "pchoice"
          },
          "value" : {
            "title" : "Value",
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "v1HpParams" : {
        "title" : "Hp Matrix specification",
        "type" : "object",
        "properties" : {
          "choice" : {
            "$ref" : "#/components/schemas/v1HpChoice"
          },
          "pchoice" : {
            "$ref" : "#/components/schemas/v1HpPChoice"
          },
          "range" : {
            "$ref" : "#/components/schemas/v1HpRange"
          },
          "linspace" : {
            "$ref" : "#/components/schemas/v1HpLinSpace"
          },
          "logspace" : {
            "$ref" : "#/components/schemas/v1HpLogSpace"
          },
          "geomspace" : {
            "$ref" : "#/components/schemas/v1HpGeomSpace"
          },
          "uniform" : {
            "$ref" : "#/components/schemas/v1HpUniform"
          },
          "quniform" : {
            "$ref" : "#/components/schemas/v1HpQUniform"
          },
          "loguniform" : {
            "$ref" : "#/components/schemas/v1HpLogUniform"
          },
          "qloguniform" : {
            "$ref" : "#/components/schemas/v1HpQLogUniform"
          },
          "normal" : {
            "$ref" : "#/components/schemas/v1HpNormal"
          },
          "qnormal" : {
            "$ref" : "#/components/schemas/v1HpQNormal"
          },
          "lognormal" : {
            "$ref" : "#/components/schemas/v1HpLogNormal"
          },
          "qlognormal" : {
            "$ref" : "#/components/schemas/v1HpQLogNormal"
          },
          "daterange" : {
            "$ref" : "#/components/schemas/v1HpDateRange"
          },
          "datetimerange" : {
            "$ref" : "#/components/schemas/v1HpDateTimeRange"
          }
        }
      },
      "v1HpQLogNormal" : {
        "title" : "HP Quantized Log Normal Dist specification",
        "type" : "object",
        "properties" : {
          "kind" : {
            "title" : "Kind of hp, should be equal to \"qlognormal\"",
            "type" : "string",
            "default" : "qlognormal"
          },
          "value" : {
            "title" : "Value",
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "v1HpQLogUniform" : {
        "title" : "HP Quantized Log Uniform Dist specification",
        "type" : "object",
        "properties" : {
          "kind" : {
            "title" : "Kind of hp, should be equal to \"qloguniform\"",
            "type" : "string",
            "default" : "qloguniform"
          },
          "value" : {
            "title" : "Value",
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "v1HpQNormal" : {
        "title" : "HP Quantized Normal Dist specification",
        "type" : "object",
        "properties" : {
          "kind" : {
            "title" : "Kind of hp, should be equal to \"qnormal\"",
            "type" : "string",
            "default" : "qnormal"
          },
          "value" : {
            "title" : "Value",
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "v1HpQUniform" : {
        "title" : "HP Quantized Uniform Dist specification",
        "type" : "object",
        "properties" : {
          "kind" : {
            "title" : "Kind of hp, should be equal to \"quniform\"",
            "type" : "string",
            "default" : "quniform"
          },
          "value" : {
            "title" : "Value",
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "v1HpRange" : {
        "title" : "HP Range specification",
        "type" : "object",
        "properties" : {
          "kind" : {
            "title" : "Kind of hp, should be equal to \"range\"",
            "type" : "string",
            "default" : "range"
          },
          "value" : {
            "title" : "Value",
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "v1HpUniform" : {
        "title" : "HP Uniform Dist specification",
        "type" : "object",
        "properties" : {
          "kind" : {
            "title" : "Kind of hp, should be equal to \"uniform\"",
            "type" : "string",
            "default" : "uniform"
          },
          "value" : {
            "title" : "Value",
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "v1HubRef" : {
        "title" : "Hub reference specification",
        "type" : "object",
        "properties" : {
          "kind" : {
            "title" : "Kind of reference, should be equal to \"hub_ref\"",
            "type" : "string",
            "default" : "hub_ref"
          },
          "name" : {
            "title" : "Value",
            "type" : "string"
          }
        }
      },
      "v1Hyperband" : {
        "title" : "Matrix based on hyperband",
        "type" : "object",
        "properties" : {
          "kind" : {
            "title" : "Kind of matrix, should be equal to \"hyperband\"",
            "type" : "string",
            "default" : "hyperband"
          },
          "params" : {
            "title" : "Hyperparams/Space definition of params to traverse",
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "maxIterations" : {
            "title" : "Maximim number of iteration to produce new observations",
            "type" : "integer",
            "format" : "int32"
          },
          "eta" : {
            "title" : "Eta",
            "type" : "integer",
            "format" : "int32"
          },
          "resource" : {
            "$ref" : "#/components/schemas/v1OptimizationResource"
          },
          "metric" : {
            "$ref" : "#/components/schemas/v1OptimizationMetric"
          },
          "resume" : {
            "title" : "A flag to resume or restart the selected runs",
            "type" : "boolean"
          },
          "seed" : {
            "title" : "Seed for the random generator",
            "type" : "integer",
            "format" : "int32"
          },
          "concurrency" : {
            "title" : "Number of concurrent runs",
            "type" : "integer",
            "format" : "int32"
          },
          "tuner" : {
            "$ref" : "#/components/schemas/v1Tuner"
          },
          "earlyStopping" : {
            "title" : "A list of Early stopping objects, accpets both metric and failure early stopping mechanisms",
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : { }
            }
          }
        }
      },
      "v1Hyperopt" : {
        "title" : "Matrix based on hyperopt",
        "type" : "object",
        "properties" : {
          "kind" : {
            "title" : "Kind of matrix, should be equal to \"hyperopt\"",
            "type" : "string",
            "default" : "hyperopt"
          },
          "algorithm" : {
            "$ref" : "#/components/schemas/v1HyperoptAlgorithms"
          },
          "params" : {
            "title" : "Hyperparams/Space definition of params to traverse",
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "numRuns" : {
            "title" : "Number of runs to generate and search",
            "type" : "integer",
            "format" : "int32"
          },
          "maxIterations" : {
            "title" : "Maximum number of iteration to produce new observations",
            "type" : "integer",
            "format" : "int32"
          },
          "metric" : {
            "$ref" : "#/components/schemas/v1OptimizationMetric"
          },
          "seed" : {
            "title" : "Seed for the random generator",
            "type" : "integer",
            "format" : "int32"
          },
          "concurrency" : {
            "title" : "Number of concurrent runs",
            "type" : "integer",
            "format" : "int32"
          },
          "tuner" : {
            "$ref" : "#/components/schemas/v1Tuner"
          },
          "earlyStopping" : {
            "title" : "A list of Early stopping objects, accepts both metric and failure early stopping mechanisms",
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : { }
            }
          }
        }
      },
      "v1HyperoptAlgorithms" : {
        "title" : "Hyperopt algorithms enum",
        "type" : "string",
        "description" : "- tpe: tpe algorithm\n - rand: random algorithm\n - anneal: anneal algorithm",
        "default" : "tpe",
        "enum" : [ "tpe", "rand", "anneal" ]
      },
      "v1IO" : {
        "title" : "Inputs/Outputs specification",
        "type" : "object",
        "properties" : {
          "name" : {
            "title" : "Name for the input/output",
            "type" : "string"
          },
          "description" : {
            "title" : "Description for the input/output",
            "type" : "string"
          },
          "type" : {
            "title" : "The type of the input/output",
            "type" : "string"
          },
          "value" : {
            "title" : "The value of the input/output should be compatible with the type",
            "type" : "object",
            "properties" : { }
          },
          "isOptional" : {
            "title" : "A flag to tell if this input/output is optional",
            "type" : "boolean"
          },
          "isList" : {
            "title" : "A flag to tell if this input/output is list",
            "type" : "boolean"
          },
          "isFlag" : {
            "title" : "A flag to tell if this input/output is flag, only valid for bool type",
            "type" : "boolean"
          },
          "argFormat" : {
            "title" : "An optional argFromat of the input/output to be used instead of passing the value as is",
            "type" : "string"
          },
          "connection" : {
            "title" : "A flag to signal to Polyaxon that this io is used with a connection",
            "type" : "string"
          },
          "toInit" : {
            "title" : "A flag to signal to Polyaxon that this io must be tranformed to an init container",
            "type" : "boolean"
          },
          "toEnv" : {
            "title" : "A flag to signal to Polyaxon that this io must be tranformed to the environment variable passed",
            "type" : "string"
          },
          "validation" : {
            "$ref" : "#/components/schemas/v1Validation"
          },
          "delayValidation" : {
            "title" : "(Deprecated) A flag to tell if param validation for this input/output should be delayed",
            "type" : "boolean"
          },
          "options" : {
            "title" : "(Deprecated) An optional field to provide possible values for validation",
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : { }
            }
          }
        }
      },
      "v1Init" : {
        "title" : "Initializer specification",
        "type" : "object",
        "properties" : {
          "artifacts" : {
            "$ref" : "#/components/schemas/v1ArtifactsType"
          },
          "paths" : {
            "title" : "Paths initializer",
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "git" : {
            "$ref" : "#/components/schemas/v1GitType"
          },
          "dockerfile" : {
            "$ref" : "#/components/schemas/v1DockerfileType"
          },
          "file" : {
            "$ref" : "#/components/schemas/v1FileType"
          },
          "tensorboard" : {
            "$ref" : "#/components/schemas/v1TensorboardType"
          },
          "lineageRef" : {
            "title" : "Lineage reference initializer",
            "type" : "string"
          },
          "artifactRef" : {
            "title" : "Artifact version initializer",
            "type" : "string"
          },
          "modelRef" : {
            "title" : "Model version initializer",
            "type" : "string"
          },
          "connection" : {
            "title" : "Optional, connection to use with this initializer",
            "type" : "string"
          },
          "path" : {
            "title" : "Optional context path, the path to mount to main the container",
            "type" : "string"
          },
          "container" : {
            "$ref" : "#/components/schemas/v1Container"
          }
        }
      },
      "v1Installation" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "version" : {
            "type" : "string"
          },
          "dist" : {
            "type" : "string"
          },
          "host" : {
            "type" : "string"
          },
          "hmac" : {
            "type" : "string"
          },
          "mode" : {
            "type" : "string"
          },
          "orgs" : {
            "type" : "boolean"
          },
          "singleUrl" : {
            "type" : "boolean"
          },
          "defaultStreamsUrl" : {
            "type" : "string"
          },
          "auth" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "v1IntervalSchedule" : {
        "title" : "Interval schedule specification",
        "type" : "object",
        "properties" : {
          "kind" : {
            "title" : "Kind of schedule, should be equal to \"interval\"",
            "type" : "string",
            "default" : "interval"
          },
          "startAt" : {
            "title" : "When to start this interval schedule",
            "type" : "string",
            "format" : "date-time"
          },
          "endAt" : {
            "title" : "Whan to end this interval schedule",
            "type" : "string",
            "format" : "date-time"
          },
          "maxRuns" : {
            "title" : "Limit to stop executing this schedule",
            "type" : "integer",
            "format" : "int32"
          },
          "frequency" : {
            "title" : "Frequency (timedelta) at which to execute the runs",
            "type" : "integer",
            "format" : "int32"
          },
          "dependsOnPast" : {
            "title" : "A flag to set a dependency on past executions",
            "type" : "boolean"
          }
        }
      },
      "v1Iterative" : {
        "title" : "Matrix based on a custom iterative algorithm (suggestions -> mapping -> reduce -> repeat)",
        "type" : "object",
        "properties" : {
          "kind" : {
            "title" : "Kind of matrix, should be equal to \"iterative\"",
            "type" : "string",
            "default" : "iterative"
          },
          "params" : {
            "title" : "Hyperparam/Space definition of params to traverse",
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "maxIterations" : {
            "title" : "Maximum number of iteration to produce new observations",
            "type" : "integer",
            "format" : "int32"
          },
          "seed" : {
            "title" : "Seed for the random generator",
            "type" : "integer",
            "format" : "int32"
          },
          "concurrency" : {
            "title" : "Number of concurrent runs",
            "type" : "integer",
            "format" : "int32"
          },
          "tuner" : {
            "$ref" : "#/components/schemas/v1Tuner"
          },
          "earlyStopping" : {
            "title" : "A list of Early stopping objects, accepts both metric and failure early stopping mechanisms",
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : { }
            }
          }
        }
      },
      "v1Job" : {
        "title" : "Job specification",
        "type" : "object",
        "properties" : {
          "kind" : {
            "title" : "Optional component kind, should be equal to 'job'",
            "type" : "string",
            "default" : "job"
          },
          "environment" : {
            "$ref" : "#/components/schemas/v1Environment"
          },
          "connections" : {
            "title" : "Optional connections section",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "volumes" : {
            "type" : "array",
            "description" : "Volumes is a list of volumes that can be mounted.",
            "items" : {
              "$ref" : "#/components/schemas/v1Volume"
            }
          },
          "init" : {
            "title" : "Optional init connections/containers section",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1Init"
            }
          },
          "sidecars" : {
            "title" : "Optional sidecars section",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1Container"
            }
          },
          "container" : {
            "$ref" : "#/components/schemas/v1Container"
          }
        }
      },
      "v1Join" : {
        "title" : "Join specification",
        "type" : "object",
        "properties" : {
          "ref" : {
            "title" : "An optional ref to an already saved search",
            "type" : "string"
          },
          "query" : {
            "title" : "The search query",
            "type" : "string"
          },
          "sort" : {
            "title" : "The search sort",
            "type" : "string"
          },
          "limit" : {
            "title" : "The search limit",
            "type" : "integer",
            "format" : "int32"
          },
          "offset" : {
            "title" : "The search offset",
            "type" : "integer",
            "format" : "int32"
          },
          "params" : {
            "title" : "The params mapping keys to the values to pull from the join",
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/v1JoinParam"
            }
          }
        }
      },
      "v1JoinParam" : {
        "title" : "JoinParam specification",
        "type" : "object",
        "properties" : {
          "value" : {
            "title" : "The value to pass, if no ref or search is passed then it corresponds to a literal value",
            "type" : "string"
          },
          "connection" : {
            "title" : "A flag to signal to Polyaxon that this param is used with a connection",
            "type" : "string"
          },
          "toInit" : {
            "title" : "A flag to signal to Polyaxon that this param must be tranformed to an init container",
            "type" : "boolean"
          },
          "toEnv" : {
            "title" : "A flag to signal to Polyaxon that this param must be tranformed to the environment variable passed",
            "type" : "string"
          },
          "contextOnly" : {
            "title" : "A flag to signal to Polyaxon that this param should not be validated against io",
            "type" : "boolean"
          }
        }
      },
      "v1KFReplica" : {
        "title" : "Distributed Replica specification",
        "type" : "object",
        "properties" : {
          "replicas" : {
            "title" : "Number of replicas",
            "type" : "integer",
            "format" : "int32"
          },
          "environment" : {
            "$ref" : "#/components/schemas/v1Environment"
          },
          "connections" : {
            "title" : "Optional connections section",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "volumes" : {
            "title" : "Optional connections section",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1Volume"
            }
          },
          "init" : {
            "title" : "Optional init connections section",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1Init"
            }
          },
          "sidecars" : {
            "title" : "Optional sidecars section",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1Container"
            }
          },
          "container" : {
            "$ref" : "#/components/schemas/v1Container"
          }
        }
      },
      "v1ListActivitiesResponse" : {
        "title" : "Contains list of activities",
        "type" : "object",
        "properties" : {
          "count" : {
            "title" : "Count of the entities",
            "type" : "integer",
            "format" : "int32"
          },
          "results" : {
            "title" : "List of all entities",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1Activity"
            }
          },
          "previous" : {
            "title" : "Previous page",
            "type" : "string"
          },
          "next" : {
            "title" : "Next page",
            "type" : "string"
          }
        }
      },
      "v1ListAgentsResponse" : {
        "title" : "Contains list of agents",
        "type" : "object",
        "properties" : {
          "count" : {
            "title" : "Count of the entities",
            "type" : "integer",
            "format" : "int32"
          },
          "results" : {
            "title" : "List of all entities",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1Agent"
            }
          },
          "previous" : {
            "title" : "Previous page",
            "type" : "string"
          },
          "next" : {
            "title" : "Next page",
            "type" : "string"
          }
        }
      },
      "v1ListBookmarksResponse" : {
        "title" : "Contains list of of bookmarks",
        "type" : "object",
        "properties" : {
          "count" : {
            "title" : "Count of the entities",
            "type" : "integer",
            "format" : "int32"
          },
          "results" : {
            "title" : "List of all entities",
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "previous" : {
            "title" : "Previous page",
            "type" : "string"
          },
          "next" : {
            "title" : "Next page",
            "type" : "string"
          }
        }
      },
      "v1ListConnectionsResponse" : {
        "title" : "Contains list of connections",
        "type" : "object",
        "properties" : {
          "count" : {
            "title" : "Count of the entities",
            "type" : "integer",
            "format" : "int32"
          },
          "results" : {
            "title" : "List of all entities",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1ConnectionResponse"
            }
          },
          "previous" : {
            "title" : "Previous page",
            "type" : "string"
          },
          "next" : {
            "title" : "Next page",
            "type" : "string"
          }
        }
      },
      "v1ListDashboardsResponse" : {
        "title" : "Contains list of dashboards",
        "type" : "object",
        "properties" : {
          "count" : {
            "title" : "Count of the entities",
            "type" : "integer",
            "format" : "int32"
          },
          "results" : {
            "title" : "List of all entities",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1Dashboard"
            }
          },
          "previous" : {
            "title" : "Previous page",
            "type" : "string"
          },
          "next" : {
            "title" : "Next page",
            "type" : "string"
          }
        }
      },
      "v1ListOrganizationMembersResponse" : {
        "title" : "Contains list of organization members",
        "type" : "object",
        "properties" : {
          "count" : {
            "title" : "Count of the entities",
            "type" : "integer",
            "format" : "int32"
          },
          "results" : {
            "title" : "List of all entities",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1OrganizationMember"
            }
          },
          "previous" : {
            "title" : "Previous page",
            "type" : "string"
          },
          "next" : {
            "title" : "Next page",
            "type" : "string"
          }
        }
      },
      "v1ListOrganizationsResponse" : {
        "title" : "Contains list of organizations",
        "type" : "object",
        "properties" : {
          "count" : {
            "title" : "Count of the entities",
            "type" : "integer",
            "format" : "int32"
          },
          "results" : {
            "title" : "List of all entities",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1Organization"
            }
          },
          "previous" : {
            "title" : "Previous page",
            "type" : "string"
          },
          "next" : {
            "title" : "Next page",
            "type" : "string"
          }
        }
      },
      "v1ListPoliciesResponse" : {
        "title" : "Contains list of policies",
        "type" : "object",
        "properties" : {
          "count" : {
            "title" : "Count of the entities",
            "type" : "integer",
            "format" : "int32"
          },
          "results" : {
            "title" : "List of all entities",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1Policy"
            }
          },
          "previous" : {
            "title" : "Previous page",
            "type" : "string"
          },
          "next" : {
            "title" : "Next page",
            "type" : "string"
          }
        }
      },
      "v1ListPresetsResponse" : {
        "title" : "Contains list of scheduling presets",
        "type" : "object",
        "properties" : {
          "count" : {
            "title" : "Count of the entities",
            "type" : "integer",
            "format" : "int32"
          },
          "results" : {
            "title" : "List of all entities",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1Preset"
            }
          },
          "previous" : {
            "title" : "Previous page",
            "type" : "string"
          },
          "next" : {
            "title" : "Next page",
            "type" : "string"
          }
        }
      },
      "v1ListProjectVersionsResponse" : {
        "title" : "Contains list of component hub",
        "type" : "object",
        "properties" : {
          "count" : {
            "title" : "Count of the entities",
            "type" : "integer",
            "format" : "int32"
          },
          "results" : {
            "title" : "List of all entities",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1ProjectVersion"
            }
          },
          "previous" : {
            "title" : "Previous page",
            "type" : "string"
          },
          "next" : {
            "title" : "Next page",
            "type" : "string"
          }
        }
      },
      "v1ListProjectsResponse" : {
        "title" : "Contains list of projects",
        "type" : "object",
        "properties" : {
          "count" : {
            "title" : "Count of the entities",
            "type" : "integer",
            "format" : "int32"
          },
          "results" : {
            "title" : "List of all entities",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1Project"
            }
          },
          "previous" : {
            "title" : "Previous page",
            "type" : "string"
          },
          "next" : {
            "title" : "Next page",
            "type" : "string"
          }
        }
      },
      "v1ListQueuesResponse" : {
        "title" : "Contains list of agents",
        "type" : "object",
        "properties" : {
          "count" : {
            "title" : "Count of the entities",
            "type" : "integer",
            "format" : "int32"
          },
          "results" : {
            "title" : "List of all entities",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1Queue"
            }
          },
          "previous" : {
            "title" : "Previous page",
            "type" : "string"
          },
          "next" : {
            "title" : "Next page",
            "type" : "string"
          }
        }
      },
      "v1ListRunArtifactsResponse" : {
        "title" : "Contains list of run artifacts",
        "type" : "object",
        "properties" : {
          "count" : {
            "title" : "Count of the entities",
            "type" : "integer",
            "format" : "int32"
          },
          "results" : {
            "title" : "List of all entities",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1RunArtifact"
            }
          },
          "previous" : {
            "title" : "Previous page",
            "type" : "string"
          },
          "next" : {
            "title" : "Next page",
            "type" : "string"
          }
        }
      },
      "v1ListRunConnectionsResponse" : {
        "title" : "Contains list of runs",
        "type" : "object",
        "properties" : {
          "count" : {
            "title" : "Count of the entities",
            "type" : "integer",
            "format" : "int32"
          },
          "results" : {
            "title" : "List of all entities",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1RunConnection"
            }
          },
          "previous" : {
            "title" : "Previous page",
            "type" : "string"
          },
          "next" : {
            "title" : "Next page",
            "type" : "string"
          }
        }
      },
      "v1ListRunEdgesResponse" : {
        "title" : "Contains list of run edges",
        "type" : "object",
        "properties" : {
          "count" : {
            "title" : "Count of the entities",
            "type" : "integer",
            "format" : "int32"
          },
          "results" : {
            "title" : "List of all entities",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1RunEdge"
            }
          },
          "previous" : {
            "title" : "Previous page",
            "type" : "string"
          },
          "next" : {
            "title" : "Next page",
            "type" : "string"
          }
        }
      },
      "v1ListRunsResponse" : {
        "title" : "Contains list of runs",
        "type" : "object",
        "properties" : {
          "count" : {
            "title" : "Count of the entities",
            "type" : "integer",
            "format" : "int32"
          },
          "results" : {
            "title" : "List of all entities",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1Run"
            }
          },
          "previous" : {
            "title" : "Previous page",
            "type" : "string"
          },
          "next" : {
            "title" : "Next page",
            "type" : "string"
          }
        }
      },
      "v1ListSearchesResponse" : {
        "title" : "Contains list of searches",
        "type" : "object",
        "properties" : {
          "count" : {
            "title" : "Count of the entities",
            "type" : "integer",
            "format" : "int32"
          },
          "results" : {
            "title" : "List of all entities",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1Search"
            }
          },
          "previous" : {
            "title" : "Previous page",
            "type" : "string"
          },
          "next" : {
            "title" : "Next page",
            "type" : "string"
          }
        }
      },
      "v1ListServiceAccountsResponse" : {
        "title" : "Contains list of service accounts",
        "type" : "object",
        "properties" : {
          "count" : {
            "title" : "Count of the entities",
            "type" : "integer",
            "format" : "int32"
          },
          "results" : {
            "title" : "List of all entities",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1ServiceAccount"
            }
          },
          "previous" : {
            "title" : "Previous page",
            "type" : "string"
          },
          "next" : {
            "title" : "Next page",
            "type" : "string"
          }
        }
      },
      "v1ListTagsResponse" : {
        "title" : "Contains list of tags",
        "type" : "object",
        "properties" : {
          "count" : {
            "title" : "Count of the entities",
            "type" : "integer",
            "format" : "int32"
          },
          "results" : {
            "title" : "List of all entities",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1Tag"
            }
          },
          "previous" : {
            "title" : "Previous page",
            "type" : "string"
          },
          "next" : {
            "title" : "Next page",
            "type" : "string"
          }
        }
      },
      "v1ListTeamMembersResponse" : {
        "title" : "Contains list of organization members",
        "type" : "object",
        "properties" : {
          "count" : {
            "title" : "Count of the entities",
            "type" : "integer",
            "format" : "int32"
          },
          "results" : {
            "title" : "List of all entities",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1TeamMember"
            }
          },
          "previous" : {
            "title" : "Previous page",
            "type" : "string"
          },
          "next" : {
            "title" : "Next page",
            "type" : "string"
          }
        }
      },
      "v1ListTeamsResponse" : {
        "title" : "Contains list of teams",
        "type" : "object",
        "properties" : {
          "count" : {
            "title" : "Count of the entities",
            "type" : "integer",
            "format" : "int32"
          },
          "results" : {
            "title" : "List of all entities",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1Team"
            }
          },
          "previous" : {
            "title" : "Previous page",
            "type" : "string"
          },
          "next" : {
            "title" : "Next page",
            "type" : "string"
          }
        }
      },
      "v1ListTokenResponse" : {
        "title" : "Contains list of tokens",
        "type" : "object",
        "properties" : {
          "count" : {
            "title" : "Count of the entities",
            "type" : "integer",
            "format" : "int32"
          },
          "results" : {
            "title" : "List of all entities",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1Token"
            }
          },
          "previous" : {
            "title" : "Previous page",
            "type" : "string"
          },
          "next" : {
            "title" : "Next page",
            "type" : "string"
          }
        }
      },
      "v1Log" : {
        "title" : "Log spec definition",
        "type" : "object",
        "properties" : {
          "timestamp" : {
            "title" : "Optional time when the entity was created",
            "type" : "string",
            "format" : "date-time"
          },
          "node" : {
            "title" : "Node name",
            "type" : "string"
          },
          "pod" : {
            "title" : "Pod name",
            "type" : "string"
          },
          "container" : {
            "title" : "Container id",
            "type" : "string"
          },
          "value" : {
            "title" : "Log line",
            "type" : "string"
          }
        }
      },
      "v1LogHandler" : {
        "type" : "object",
        "properties" : {
          "dsn" : {
            "type" : "string"
          },
          "environment" : {
            "type" : "string"
          }
        }
      },
      "v1Logs" : {
        "title" : "Logs",
        "type" : "object",
        "properties" : {
          "logs" : {
            "title" : "Log lines",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1Log"
            }
          },
          "last_time" : {
            "title" : "Last log time",
            "type" : "string",
            "format" : "date-time"
          },
          "last_file" : {
            "title" : "Last log file",
            "type" : "string"
          },
          "files" : {
            "title" : "Log files",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "v1MPIJob" : {
        "title" : "MPI Job specification",
        "type" : "object",
        "properties" : {
          "kind" : {
            "title" : "Optional component kind, should be equal to 'mpijob'",
            "type" : "string",
            "default" : "mpijob"
          },
          "cleanPodPolicy" : {
            "$ref" : "#/components/schemas/v1CleanPodPolicy"
          },
          "schedulingPolicy" : {
            "$ref" : "#/components/schemas/v1SchedulingPolicy"
          },
          "slotsPerWorker" : {
            "title" : "Optional slots per worker",
            "type" : "integer",
            "format" : "int32"
          },
          "worker" : {
            "$ref" : "#/components/schemas/v1KFReplica"
          },
          "launcher" : {
            "$ref" : "#/components/schemas/v1KFReplica"
          }
        }
      },
      "v1MXJob" : {
        "title" : "MXNet Job specification",
        "type" : "object",
        "properties" : {
          "kind" : {
            "title" : "Optional component kind, should be equal to 'mxjob'",
            "type" : "string",
            "default" : "mxjob"
          },
          "cleanPodPolicy" : {
            "$ref" : "#/components/schemas/v1CleanPodPolicy"
          },
          "schedulingPolicy" : {
            "$ref" : "#/components/schemas/v1SchedulingPolicy"
          },
          "mode" : {
            "$ref" : "#/components/schemas/MXJobMode"
          },
          "scheduler" : {
            "$ref" : "#/components/schemas/v1KFReplica"
          },
          "server" : {
            "$ref" : "#/components/schemas/v1KFReplica"
          },
          "worker" : {
            "$ref" : "#/components/schemas/v1KFReplica"
          },
          "tuner_tracker" : {
            "$ref" : "#/components/schemas/v1KFReplica"
          },
          "tuner_server" : {
            "$ref" : "#/components/schemas/v1KFReplica"
          },
          "tuner" : {
            "$ref" : "#/components/schemas/v1KFReplica"
          }
        }
      },
      "v1ManagedBy" : {
        "type" : "string",
        "default" : "client",
        "enum" : [ "client", "cli", "agent" ]
      },
      "v1Mapping" : {
        "title" : "Matrix based on map/array either specified manually by the user or passed from another step",
        "type" : "object",
        "properties" : {
          "kind" : {
            "title" : "Kind of matrix, should be equal to \"mapping\"",
            "type" : "string",
            "default" : "mapping"
          },
          "values" : {
            "title" : "The mapping values",
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "concurrency" : {
            "title" : "Number of concurrent runs",
            "type" : "integer",
            "format" : "int32"
          },
          "earlyStopping" : {
            "title" : "A list of Early stopping objects, accpets both metric and failure early stopping mechanisms",
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : { }
            }
          }
        }
      },
      "v1Matrix" : {
        "title" : "All Schemas message",
        "type" : "object",
        "properties" : {
          "random" : {
            "$ref" : "#/components/schemas/v1RandomSearch"
          },
          "grid" : {
            "$ref" : "#/components/schemas/v1GridSearch"
          },
          "hyperband" : {
            "$ref" : "#/components/schemas/v1Hyperband"
          },
          "bayes" : {
            "$ref" : "#/components/schemas/v1Bayes"
          },
          "hyperopt" : {
            "$ref" : "#/components/schemas/v1Hyperopt"
          },
          "iterative" : {
            "$ref" : "#/components/schemas/v1Iterative"
          },
          "mapping" : {
            "$ref" : "#/components/schemas/v1Mapping"
          }
        }
      },
      "v1MatrixKind" : {
        "type" : "string",
        "default" : "random",
        "enum" : [ "random", "grid", "hyperband", "bayes", "hyperopt", "iterative", "mapping" ]
      },
      "v1MedianStoppingPolicy" : {
        "type" : "object",
        "properties" : {
          "kind" : {
            "title" : "Kind of this stopping policy, should be equal to \"median\"",
            "type" : "string",
            "default" : "median"
          },
          "evaluationInterval" : {
            "type" : "integer",
            "description" : "Interval/Frequency for applying the policy.",
            "format" : "int32"
          },
          "minInterval" : {
            "title" : "Min interval (e.g steps) before starting the process",
            "type" : "integer",
            "format" : "int32"
          },
          "minSamples" : {
            "title" : "Min samples runs succeeded before starting the process",
            "type" : "integer",
            "format" : "int32"
          }
        },
        "description" : "Early stopping with median stopping, this policy computes running medians across\nall runs and stops those whose best performance is worse than the median\nof the running runs."
      },
      "v1MetricEarlyStopping" : {
        "type" : "object",
        "properties" : {
          "kind" : {
            "title" : "Kind of this metric early stopping policy, should be equal to \"metric_early_stopping\"",
            "type" : "string",
            "default" : "metric_early_stopping"
          },
          "metric" : {
            "type" : "string",
            "description" : "Metric name to use for early stopping."
          },
          "value" : {
            "type" : "string",
            "description" : "Metric value to use for the condition."
          },
          "optimization" : {
            "$ref" : "#/components/schemas/v1Optimization"
          },
          "policy" : {
            "title" : "Policy to use, should be one of the stopping policies:\nMedianStoppingPolicy, AverageStoppingPolicy, TruncationStoppingPolicy",
            "type" : "object",
            "properties" : { }
          }
        },
        "description" : "MetricEarlyStoppingSchema specification\nEarly stopping based on metric config."
      },
      "v1MultiEventsResponse" : {
        "title" : "Multi Run Events response definition",
        "type" : "object",
        "properties" : {
          "data" : {
            "title" : "Events data",
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "v1Notification" : {
        "title" : "Notification message",
        "type" : "object",
        "properties" : {
          "connections" : {
            "title" : "Connections to use for notification",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "trigger" : {
            "$ref" : "#/components/schemas/v1Statuses"
          }
        }
      },
      "v1Operation" : {
        "title" : "Operation specification",
        "type" : "object",
        "properties" : {
          "version" : {
            "title" : "Spec version",
            "type" : "number",
            "format" : "float"
          },
          "kind" : {
            "title" : "Optional component kind, should be equal to 'operation'",
            "type" : "string"
          },
          "name" : {
            "title" : "Optional component name override, should a valid slug",
            "type" : "string"
          },
          "description" : {
            "title" : "Optional component description override",
            "type" : "string"
          },
          "tags" : {
            "title" : "Optional component tags override",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "presets" : {
            "title" : "Optional list of presets to use for running this operation",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "queue" : {
            "title" : "Optional queue to use for running this operation",
            "type" : "string"
          },
          "cache" : {
            "$ref" : "#/components/schemas/v1Cache"
          },
          "namespace" : {
            "title" : "Optional namespace to use, uses agent's namespace by default",
            "type" : "string"
          },
          "termination" : {
            "$ref" : "#/components/schemas/v1Termination"
          },
          "plugins" : {
            "$ref" : "#/components/schemas/v1Plugins"
          },
          "schedule" : {
            "title" : "Optional schedule section, must be a valid Schedule option (Cron/Interval/Repeatable/ExactTime)",
            "type" : "object",
            "properties" : { }
          },
          "events" : {
            "title" : "Optional events section, must be a valid List of EventTrigger option (Run/Git/Alert/Webhook/Dataset)",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1EventTrigger"
            }
          },
          "hooks" : {
            "title" : "Optional hooks section",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1Hook"
            }
          },
          "dependencies" : {
            "title" : "Optional graph dependencies of this op",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "trigger" : {
            "$ref" : "#/components/schemas/v1TriggerPolicy"
          },
          "conditions" : {
            "title" : "An optional template containing conditions to check before starting the run",
            "type" : "string"
          },
          "skipOnUpstreamSkip" : {
            "title" : "Optional flag to skip this run if upstream was skipped",
            "type" : "boolean"
          },
          "matrix" : {
            "title" : "Optional matrix section, must be a valid matrix option (Random/Grid/BO/Hyperband/Hyperopt/Mapping/Iterative)",
            "type" : "object",
            "properties" : { }
          },
          "joins" : {
            "title" : "Optional dict of joins",
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/v1Join"
            }
          },
          "params" : {
            "title" : "Optional dict of params",
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/v1Param"
            }
          },
          "runPatch" : {
            "title" : "Optional a run section to override the content of the run in the template\nshould be one of: Job/Service/Ray/Kubeflow/Dask/Dag",
            "type" : "object",
            "properties" : { }
          },
          "patchStrategy" : {
            "$ref" : "#/components/schemas/v1PatchStrategy"
          },
          "isPreset" : {
            "title" : "Optional flag to mark this specification as preset",
            "type" : "boolean"
          },
          "isApproved" : {
            "title" : "Optional flag to mark this specification requires approval before running",
            "type" : "boolean"
          },
          "template" : {
            "$ref" : "#/components/schemas/v1Template"
          },
          "build" : {
            "$ref" : "#/components/schemas/v1Build"
          },
          "cost" : {
            "title" : "Optional field to assign cost to this Component",
            "type" : "number",
            "format" : "float"
          },
          "pathRef" : {
            "type" : "string"
          },
          "hubRef" : {
            "type" : "string"
          },
          "dagRef" : {
            "type" : "string"
          },
          "urlRef" : {
            "type" : "string"
          },
          "component" : {
            "$ref" : "#/components/schemas/v1Component"
          }
        }
      },
      "v1OperationBody" : {
        "title" : "Operation creation",
        "type" : "object",
        "properties" : {
          "content" : {
            "title" : "The Operation body content as dump string",
            "type" : "string"
          },
          "is_managed" : {
            "title" : "Optional, if the run is managed, true by default, this flag should be false if starting a non-managed run",
            "type" : "boolean"
          },
          "managed_by" : {
            "$ref" : "#/components/schemas/v1ManagedBy"
          },
          "pending" : {
            "$ref" : "#/components/schemas/v1RunPending"
          },
          "name" : {
            "title" : "Optional",
            "type" : "string"
          },
          "description" : {
            "title" : "Optional",
            "type" : "string"
          },
          "tags" : {
            "title" : "Optional",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "meta_info" : {
            "title" : "Meta",
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "v1Optimization" : {
        "title" : "Optimization enum for metrics",
        "type" : "string",
        "description" : "- maximize: Minimize a metric\n - minimize: Minimize a metric",
        "default" : "maximize",
        "enum" : [ "maximize", "minimize" ]
      },
      "v1OptimizationMetric" : {
        "title" : "OptimizationMetric specification",
        "type" : "object",
        "properties" : {
          "name" : {
            "title" : "Name of the metric to optimize",
            "type" : "string"
          },
          "optimization" : {
            "$ref" : "#/components/schemas/v1Optimization"
          }
        }
      },
      "v1OptimizationResource" : {
        "title" : "OptimizationResource specification",
        "type" : "object",
        "properties" : {
          "name" : {
            "title" : "Name of the resource to allocate",
            "type" : "string"
          },
          "type" : {
            "$ref" : "#/components/schemas/v1ResourceType"
          }
        }
      },
      "v1Organization" : {
        "title" : "Organization specification",
        "type" : "object",
        "properties" : {
          "user" : {
            "title" : "User",
            "type" : "string"
          },
          "user_email" : {
            "title" : "Read-only User email",
            "type" : "string"
          },
          "name" : {
            "title" : "Name",
            "type" : "string"
          },
          "is_public" : {
            "title" : "Optional flag to tell if this organization is public",
            "type" : "boolean"
          },
          "created_at" : {
            "title" : "Optional time when the entity was created",
            "type" : "string",
            "format" : "date-time"
          },
          "updated_at" : {
            "title" : "Optional last time the entity was updated",
            "type" : "string",
            "format" : "date-time"
          },
          "support_revoke_at" : {
            "title" : "Optional time to revoke support access",
            "type" : "string",
            "format" : "date-time"
          },
          "expiration" : {
            "title" : "Optional expiration for support",
            "type" : "integer",
            "format" : "int32"
          },
          "role" : {
            "title" : "Current user's role in this org",
            "type" : "string"
          },
          "queue" : {
            "title" : "Default queue",
            "type" : "string"
          },
          "default_presets" : {
            "title" : "Default presets",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "default_presets_ordered" : {
            "title" : "Default presets ordered",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "is_cloud_viewable" : {
            "title" : "Setting to enable viewable metadata on cloud",
            "type" : "boolean"
          },
          "archived_deletion_interval" : {
            "title" : "Setting to configure default archived deletion interval",
            "type" : "integer",
            "format" : "int32"
          },
          "auth" : {
            "title" : "Auth Settings",
            "type" : "object",
            "properties" : { }
          },
          "plan" : {
            "title" : "Plan settings",
            "type" : "object",
            "properties" : { }
          },
          "usage" : {
            "title" : "Usage info",
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "v1OrganizationMember" : {
        "title" : "Organization member specification",
        "type" : "object",
        "properties" : {
          "user" : {
            "title" : "User",
            "type" : "string"
          },
          "user_email" : {
            "title" : "Read-only User email",
            "type" : "string"
          },
          "role" : {
            "title" : "Role",
            "type" : "string"
          },
          "kind" : {
            "title" : "Kind",
            "type" : "string"
          },
          "created_at" : {
            "title" : "Optional time when the entity was created",
            "type" : "string",
            "format" : "date-time"
          },
          "updated_at" : {
            "title" : "Optional last time the entity was updated",
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "v1PaddleElasticPolic" : {
        "title" : "Paddle elastic policy",
        "type" : "object",
        "properties" : {
          "minReplicas" : {
            "type" : "integer",
            "format" : "int32"
          },
          "maxReplicas" : {
            "type" : "integer",
            "format" : "int32"
          },
          "maxRestarts" : {
            "type" : "integer",
            "format" : "int32"
          },
          "metrics" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : { }
            }
          }
        }
      },
      "v1PaddleJob" : {
        "title" : "Paddle Job specification",
        "type" : "object",
        "properties" : {
          "kind" : {
            "title" : "Optional component kind, should be equal to 'paddlejob'",
            "type" : "string",
            "default" : "paddlejob"
          },
          "cleanPodPolicy" : {
            "$ref" : "#/components/schemas/v1CleanPodPolicy"
          },
          "schedulingPolicy" : {
            "$ref" : "#/components/schemas/v1SchedulingPolicy"
          },
          "elasticPolicy" : {
            "$ref" : "#/components/schemas/v1PaddleElasticPolic"
          },
          "master" : {
            "$ref" : "#/components/schemas/v1KFReplica"
          },
          "worker" : {
            "$ref" : "#/components/schemas/v1KFReplica"
          }
        }
      },
      "v1Param" : {
        "title" : "Param specification",
        "type" : "object",
        "properties" : {
          "value" : {
            "title" : "The value to pass, if no ref or search is passed then it corresponds to a literal value",
            "type" : "object",
            "properties" : { }
          },
          "ref" : {
            "title" : "Ref corresponds to a reference of an object",
            "type" : "string"
          },
          "connection" : {
            "title" : "A flag to signal to Polyaxon that this param is used with a connection",
            "type" : "string"
          },
          "toInit" : {
            "title" : "A flag to signal to Polyaxon that this param must be tranformed to an init container",
            "type" : "boolean"
          },
          "toEnv" : {
            "title" : "A flag to signal to Polyaxon that this io must be tranformed to the environment variable passed",
            "type" : "string"
          },
          "contextOnly" : {
            "title" : "A flag to signal to Polyaxon that this param should not be validated against io",
            "type" : "boolean"
          }
        }
      },
      "v1PasswordChange" : {
        "title" : "User password change",
        "type" : "object",
        "properties" : {
          "old_password" : {
            "title" : "Old password",
            "type" : "string"
          },
          "new_password1" : {
            "title" : "New password",
            "type" : "string"
          },
          "new_password2" : {
            "title" : "New password confirmation",
            "type" : "string"
          }
        }
      },
      "v1PatchStrategy" : {
        "title" : "PatchStrategy",
        "type" : "string",
        "description" : "- replace: Replaces the keys\n - isnull: Only set the keys if they do not exist or if they are null\n - post_merge: Merge the all keys and replace by new one\n - pre_merge: Merge the all keys and keep old ones",
        "default" : "replace",
        "enum" : [ "replace", "isnull", "post_merge", "pre_merge" ]
      },
      "v1PathRef" : {
        "title" : "Path reference specification",
        "type" : "object",
        "properties" : {
          "kind" : {
            "title" : "Kind of reference, should be equal to \"path_ref\"",
            "type" : "string",
            "default" : "path_ref"
          },
          "path" : {
            "title" : "Value",
            "type" : "string"
          }
        }
      },
      "v1Pipeline" : {
        "type" : "object",
        "properties" : {
          "uuid" : {
            "title" : "Optional uuid of the pipeline run",
            "type" : "string"
          },
          "name" : {
            "title" : "Optional name of the pipeline run",
            "type" : "string"
          },
          "kind" : {
            "$ref" : "#/components/schemas/v1PipelineKind"
          }
        }
      },
      "v1PipelineKind" : {
        "type" : "string",
        "default" : "dag",
        "enum" : [ "dag", "matrix" ]
      },
      "v1Plugins" : {
        "title" : "Plugins specification",
        "type" : "object",
        "properties" : {
          "auth" : {
            "title" : "Optional flag to tell Polyaxon if it should set an auth context for the run, default true",
            "type" : "boolean"
          },
          "docker" : {
            "title" : "Optional flag to tell Polyaxon if it should set a docker socket context for the run, default false",
            "type" : "boolean"
          },
          "shm" : {
            "title" : "Optional flag to tell Polyaxon if it should set a shm context for the run, default false",
            "type" : "boolean"
          },
          "mountArtifactsStore" : {
            "title" : "Optional flag to mount the artifacts store to the main container",
            "type" : "boolean"
          },
          "collectArtifacts" : {
            "title" : "Optional flag to tell Polyaxon to collect artifacts and outputs",
            "type" : "boolean"
          },
          "collectLogs" : {
            "title" : "Optional flag to tell Polyaxon to collect logs",
            "type" : "boolean"
          },
          "collectResources" : {
            "title" : "Optional flag to tell Polyaxon to collect container resources (cpu/memory/gpu)",
            "type" : "boolean"
          },
          "syncStatuses" : {
            "title" : "Optional flag to tell Polyaxon to sync statuses",
            "type" : "boolean"
          },
          "autoResume" : {
            "title" : "Auto resume a run's artifacts (applies to resume and retries), works if collects_artifacts is enabled",
            "type" : "boolean"
          },
          "logLevel" : {
            "title" : "Optional log level",
            "type" : "string"
          },
          "externalHost" : {
            "title" : "Optional flag to tell Polyaxon to connect to the control plan via the external host",
            "type" : "boolean"
          },
          "sidecar" : {
            "$ref" : "#/components/schemas/v1PolyaxonSidecarContainer"
          },
          "notifications" : {
            "title" : "Option Notifications: Deprecated",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1Notification"
            }
          }
        }
      },
      "v1PodDNSConfig" : {
        "title" : "Placeholder for PodDNSConfig",
        "type" : "object"
      },
      "v1PodSecurityContext" : {
        "title" : "Placeholder for PodSecurityContext",
        "type" : "object"
      },
      "v1Policy" : {
        "title" : "Organization policy",
        "type" : "object",
        "properties" : {
          "uuid" : {
            "title" : "UUID",
            "type" : "string"
          },
          "owner" : {
            "title" : "Owner/namespace where the project was created",
            "type" : "string"
          },
          "name" : {
            "title" : "Required name",
            "type" : "string"
          },
          "description" : {
            "title" : "Optional description",
            "type" : "string"
          },
          "user" : {
            "title" : "Optional name of user created this entity",
            "type" : "string"
          },
          "tags" : {
            "title" : "Optional tags of this entity",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "created_at" : {
            "title" : "Optional time when the entity was created",
            "type" : "string",
            "format" : "date-time"
          },
          "updated_at" : {
            "title" : "Optional last time the entity was updated",
            "type" : "string",
            "format" : "date-time"
          },
          "excluded_features" : {
            "title" : "Optional project excluded features",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "excluded_runtimes" : {
            "title" : "Optional project excluded runtimes",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "archived_deletion_interval" : {
            "title" : "Optional project archived deletion interval",
            "type" : "integer",
            "format" : "int32"
          },
          "connections" : {
            "title" : "Authorized connections",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "default_presets" : {
            "title" : "Default Presets",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "default_presets_ordered" : {
            "title" : "Default Presets ordered",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "presets" : {
            "title" : "Authorized Presets",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "queue" : {
            "title" : "Default Queue",
            "type" : "string"
          },
          "queues" : {
            "title" : "Authorized queues",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "agents" : {
            "title" : "Authorized agents",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "namespaces" : {
            "title" : "Authorized namespaces",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "user_accesses" : {
            "title" : "Authorized users",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1UserAccess"
            }
          },
          "teams" : {
            "title" : "Authorized teams",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "projects" : {
            "title" : "Authorized projects",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "connected_projects" : {
            "title" : "Connected projects",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "v1PolyaxonInitContainer" : {
        "title" : "Polyaxon init specification",
        "type" : "object",
        "properties" : {
          "image" : {
            "type" : "string"
          },
          "imageTag" : {
            "type" : "string"
          },
          "imagePullPolicy" : {
            "type" : "string"
          },
          "resources" : {
            "$ref" : "#/components/schemas/v1ResourceRequirements"
          }
        }
      },
      "v1PolyaxonSidecarContainer" : {
        "title" : "Polyaxon sidecar specification",
        "type" : "object",
        "properties" : {
          "image" : {
            "type" : "string"
          },
          "imageTag" : {
            "type" : "string"
          },
          "imagePullPolicy" : {
            "type" : "string"
          },
          "sleepInterval" : {
            "type" : "integer",
            "format" : "int32"
          },
          "syncInterval" : {
            "type" : "integer",
            "format" : "int32"
          },
          "monitorLogs" : {
            "type" : "boolean"
          },
          "monitorSpec" : {
            "type" : "boolean"
          },
          "resources" : {
            "$ref" : "#/components/schemas/v1ResourceRequirements"
          }
        }
      },
      "v1Preset" : {
        "title" : "Preset specification",
        "type" : "object",
        "properties" : {
          "uuid" : {
            "title" : "UUID",
            "type" : "string"
          },
          "name" : {
            "title" : "Name",
            "type" : "string"
          },
          "description" : {
            "title" : "Optional description",
            "type" : "string"
          },
          "user" : {
            "title" : "Optional name of user created this entity",
            "type" : "string"
          },
          "tags" : {
            "title" : "Optional tags of this entity",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "created_at" : {
            "title" : "Optional time when the entity was created",
            "type" : "string",
            "format" : "date-time"
          },
          "updated_at" : {
            "title" : "Optional last time the entity was updated",
            "type" : "string",
            "format" : "date-time"
          },
          "live_state" : {
            "title" : "Current live state",
            "type" : "integer",
            "format" : "int32"
          },
          "content" : {
            "title" : "The content of the preset",
            "type" : "string"
          },
          "settings" : {
            "$ref" : "#/components/schemas/v1PresetSettings"
          }
        }
      },
      "v1PresetSettings" : {
        "title" : "Preset Settings specification",
        "type" : "object",
        "properties" : {
          "projects" : {
            "title" : "Projects",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1SettingsCatalog"
            }
          },
          "runs" : {
            "title" : "Component hubs",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1SettingsCatalog"
            }
          }
        }
      },
      "v1Project" : {
        "title" : "Project specification",
        "type" : "object",
        "properties" : {
          "uuid" : {
            "title" : "UUID",
            "type" : "string"
          },
          "owner" : {
            "title" : "Owner/namespace where the project was created",
            "type" : "string"
          },
          "user" : {
            "title" : "Optional name of user created this entity",
            "type" : "string"
          },
          "name" : {
            "title" : "Required name",
            "type" : "string"
          },
          "description" : {
            "title" : "Optional description",
            "type" : "string"
          },
          "tags" : {
            "title" : "Optional tags of this entity",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "created_at" : {
            "title" : "Optional time when the entity was created",
            "type" : "string",
            "format" : "date-time"
          },
          "updated_at" : {
            "title" : "Optional last time the entity was updated",
            "type" : "string",
            "format" : "date-time"
          },
          "is_public" : {
            "title" : "Optional flag to tell if this project is public",
            "type" : "boolean"
          },
          "bookmarked" : {
            "title" : "Optional if this entity was bookmarked",
            "type" : "boolean"
          },
          "readme" : {
            "title" : "Optional Markdown description/readme",
            "type" : "string"
          },
          "excluded_features" : {
            "title" : "Optional project excluded features",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "excluded_runtimes" : {
            "title" : "Optional project excluded runtimes",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "archived_deletion_interval" : {
            "title" : "Optional project archived deletion interval",
            "type" : "integer",
            "format" : "int32"
          },
          "settings" : {
            "$ref" : "#/components/schemas/v1ProjectSettings"
          },
          "role" : {
            "title" : "Current user's role in this (org/teams)/project",
            "type" : "string"
          },
          "live_state" : {
            "title" : "Current live state",
            "type" : "integer",
            "format" : "int32"
          },
          "contributors" : {
            "title" : "Contributors",
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : { }
            }
          }
        }
      },
      "v1ProjectSettings" : {
        "title" : "Project Settings specification",
        "type" : "object",
        "properties" : {
          "connections" : {
            "title" : "Authorized connections",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "default_presets" : {
            "title" : "Default Presets",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "default_presets_ordered" : {
            "title" : "Default Presets ordered",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "presets" : {
            "title" : "Authorized Presets",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "queue" : {
            "title" : "Default Queue",
            "type" : "string"
          },
          "queues" : {
            "title" : "Authorized queues",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "agents" : {
            "title" : "Authorized agents",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "namespaces" : {
            "title" : "Authorized namespaces",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "user_accesses" : {
            "title" : "Authorized users",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1UserAccess"
            }
          },
          "teams" : {
            "title" : "Authorized teams",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "projects" : {
            "title" : "Authorized projects",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "policy" : {
            "title" : "Attached policy",
            "type" : "string"
          }
        }
      },
      "v1ProjectVersion" : {
        "title" : "component hub specification",
        "type" : "object",
        "properties" : {
          "uuid" : {
            "title" : "UUID",
            "type" : "string"
          },
          "name" : {
            "title" : "Optional component name, should be a valid fully qualified value: name[:version]",
            "type" : "string"
          },
          "description" : {
            "title" : "Optional description",
            "type" : "string"
          },
          "tags" : {
            "title" : "Optional tags of this entity",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "owner" : {
            "title" : "Owner of this entity",
            "type" : "string"
          },
          "user" : {
            "title" : "Required name of user started this entity",
            "type" : "string"
          },
          "project" : {
            "title" : "Project name",
            "type" : "string"
          },
          "connection" : {
            "title" : "Connection name",
            "type" : "string"
          },
          "run" : {
            "title" : "Run lineage",
            "type" : "string"
          },
          "artifacts" : {
            "title" : "Artifacts lineage",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "meta_info" : {
            "type" : "object",
            "properties" : { },
            "description" : "Extra information related to the run, lineage, artifacts, ..."
          },
          "created_at" : {
            "title" : "Optional time when the entity was created",
            "type" : "string",
            "format" : "date-time"
          },
          "updated_at" : {
            "title" : "Optional last time the entity was updated",
            "type" : "string",
            "format" : "date-time"
          },
          "stage" : {
            "$ref" : "#/components/schemas/v1Stages"
          },
          "kind" : {
            "$ref" : "#/components/schemas/v1ProjectVersionKind"
          },
          "stage_conditions" : {
            "title" : "The status conditions timeline",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1StageCondition"
            }
          },
          "content" : {
            "title" : "The metadata/content body",
            "type" : "string"
          },
          "readme" : {
            "title" : "Optional Markdown description/readme",
            "type" : "string"
          },
          "state" : {
            "title" : "The version state read-only",
            "type" : "string"
          },
          "role" : {
            "title" : "Current user's role in this (org/teams)/hub/version",
            "type" : "string"
          },
          "contributors" : {
            "title" : "Contributors",
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : { }
            }
          }
        }
      },
      "v1ProjectVersionKind" : {
        "type" : "string",
        "default" : "component",
        "enum" : [ "component", "model", "artifact" ]
      },
      "v1PytorchElasticPolicy" : {
        "type" : "object",
        "properties" : {
          "minReplicas" : {
            "type" : "integer",
            "description" : "minReplicas is the lower limit for the number of replicas to which the training job can scale down.",
            "format" : "int32"
          },
          "maxReplicas" : {
            "type" : "integer",
            "description" : "upper limit for the number of pods that can be set by the autoscaler; cannot be smaller than MinReplicas, defaults to null.",
            "format" : "int32"
          },
          "rdvzBackend" : {
            "type" : "string"
          },
          "rdvzPort" : {
            "type" : "integer",
            "format" : "int32"
          },
          "rdvzHost" : {
            "type" : "string"
          },
          "rdvzId" : {
            "type" : "string"
          },
          "rdvzConf" : {
            "type" : "array",
            "description" : "RDZVConf contains additional rendezvous configuration (<key1>=<value1>,<key2>=<value2>,...).",
            "items" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "standalone" : {
            "type" : "boolean",
            "description" : "Start a local standalone rendezvous backend that is represented by a C10d TCP store\non port 29400. Useful when launching single-node, multi-worker job. If specified\n--rdzv_backend, --rdzv_endpoint, --rdzv_id are auto-assigned; any explicitly set values\nare ignored."
          },
          "nProcPerNode" : {
            "type" : "integer",
            "description" : "Number of workers per node; supported values: [auto, cpu, gpu, int].\nDeprecated: This API is deprecated in v1.7+\nUse .spec.nprocPerNode instead.",
            "format" : "int32"
          },
          "maxRestarts" : {
            "type" : "integer",
            "format" : "int32"
          },
          "Metrics" : {
            "type" : "array",
            "description" : "Metrics contains the specifications which are used to calculate the\ndesired replica count (the maximum replica count across all metrics will\nbe used).  The desired replica count is calculated with multiplying the\nratio between the target value and the current value by the current\nnumber of pods. Ergo, metrics used must decrease as the pod count is\nincreased, and vice-versa.  See the individual metric source types for\nmore information about how each type of metric must respond.\nIf not set, the HPA will not be created.",
            "items" : {
              "type" : "object",
              "properties" : { }
            }
          }
        }
      },
      "v1PytorchJob" : {
        "title" : "Pytorch Job specification",
        "type" : "object",
        "properties" : {
          "kind" : {
            "title" : "Optional component kind, should be equal to 'pytorchjob'",
            "type" : "string",
            "default" : "pytorchjob"
          },
          "cleanPodPolicy" : {
            "$ref" : "#/components/schemas/v1CleanPodPolicy"
          },
          "schedulingPolicy" : {
            "$ref" : "#/components/schemas/v1SchedulingPolicy"
          },
          "elasticPolicy" : {
            "$ref" : "#/components/schemas/v1PytorchElasticPolicy"
          },
          "master" : {
            "$ref" : "#/components/schemas/v1KFReplica"
          },
          "worker" : {
            "$ref" : "#/components/schemas/v1KFReplica"
          },
          "nProcPerNode" : {
            "type" : "string"
          }
        }
      },
      "v1Queue" : {
        "title" : "Queue specification",
        "type" : "object",
        "properties" : {
          "uuid" : {
            "title" : "UUID",
            "type" : "string"
          },
          "agent" : {
            "title" : "Agent",
            "type" : "string"
          },
          "name" : {
            "title" : "Name",
            "type" : "string"
          },
          "description" : {
            "title" : "Optional description",
            "type" : "string"
          },
          "user" : {
            "title" : "Required name of user started this entity",
            "type" : "string"
          },
          "tags" : {
            "title" : "Optional tags of this entity",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "created_at" : {
            "title" : "Optional time when the entity was created",
            "type" : "string",
            "format" : "date-time"
          },
          "updated_at" : {
            "title" : "Optional last time the entity was updated",
            "type" : "string",
            "format" : "date-time"
          },
          "priority" : {
            "title" : "The queue priority",
            "type" : "integer",
            "format" : "int32"
          },
          "concurrency" : {
            "title" : "The queue concurrency",
            "type" : "integer",
            "format" : "int32"
          },
          "resource" : {
            "title" : "Optional queue resource",
            "type" : "string"
          },
          "quota" : {
            "title" : "Optional queue quota",
            "type" : "string"
          },
          "stats" : {
            "title" : "Optional queue stats",
            "type" : "object",
            "properties" : { }
          },
          "contributors" : {
            "title" : "Optional contributors",
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : { }
            }
          }
        }
      },
      "v1RandomSearch" : {
        "title" : "Matrix based on randomly generated search space",
        "type" : "object",
        "properties" : {
          "kind" : {
            "title" : "Kind of matrix, should be equal to \"random\"",
            "type" : "string",
            "default" : "random"
          },
          "params" : {
            "title" : "Hyperparams/Space definition of params to traverse",
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "numRuns" : {
            "title" : "Number of runs to generate and search",
            "type" : "integer",
            "format" : "int32"
          },
          "seed" : {
            "title" : "Seed for the random generator",
            "type" : "integer",
            "format" : "int32"
          },
          "concurrency" : {
            "title" : "Number of concurrent runs",
            "type" : "integer",
            "format" : "int32"
          },
          "earlyStopping" : {
            "title" : "A list of Early stoppings, accpets both metric and failure early stopping mechanisms",
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : { }
            }
          }
        }
      },
      "v1RayJob" : {
        "title" : "Ray specification",
        "type" : "object",
        "properties" : {
          "kind" : {
            "title" : "Kind of runtime, should be equal to \"rayjob\"",
            "type" : "string",
            "default" : "rayjob"
          },
          "entrypoint" : {
            "title" : "Entrypoint of the ray application, e.g. python path/to/run.py",
            "type" : "string"
          },
          "runtimeEnv" : {
            "title" : "Optional run environment section to install pip packages or expose env vars",
            "type" : "object",
            "properties" : { }
          },
          "metadata" : {
            "title" : "Optional metadata section",
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "rayVersion" : {
            "title" : "Cluster ray version, must be equal to the ray image version",
            "type" : "string"
          },
          "head" : {
            "$ref" : "#/components/schemas/v1RayReplica"
          },
          "workers" : {
            "title" : "Ray workers group section",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1RayReplica"
            }
          }
        }
      },
      "v1RayReplica" : {
        "title" : "Ray replica definition",
        "type" : "object",
        "properties" : {
          "replicas" : {
            "title" : "Number of replicas",
            "type" : "integer",
            "format" : "int32"
          },
          "minReplicas" : {
            "type" : "integer",
            "format" : "int32"
          },
          "maxReplicas" : {
            "type" : "integer",
            "format" : "int32"
          },
          "groupName" : {
            "type" : "string"
          },
          "rayStartParams" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "environment" : {
            "$ref" : "#/components/schemas/v1Environment"
          },
          "connections" : {
            "title" : "Optional connections section",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "volumes" : {
            "type" : "array",
            "description" : "Volumes is a list of volumes that can be mounted.",
            "items" : {
              "$ref" : "#/components/schemas/v1Volume"
            }
          },
          "init" : {
            "title" : "Optional init connections section",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1Init"
            }
          },
          "sidecars" : {
            "title" : "Optional sidecars section",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1Container"
            }
          },
          "container" : {
            "$ref" : "#/components/schemas/v1Container"
          }
        }
      },
      "v1Reference" : {
        "title" : "Reference specification",
        "type" : "object",
        "properties" : {
          "hubRef" : {
            "$ref" : "#/components/schemas/v1HubRef"
          },
          "dagRef" : {
            "$ref" : "#/components/schemas/v1DagRef"
          },
          "urlRef" : {
            "$ref" : "#/components/schemas/v1UrlRef"
          },
          "pathRef" : {
            "$ref" : "#/components/schemas/v1PathRef"
          }
        }
      },
      "v1ResourceRequirements" : {
        "title" : "Placeholder Resource Requirements",
        "type" : "object"
      },
      "v1ResourceType" : {
        "title" : "ResourceTypes enum for optmiztion resources",
        "type" : "string",
        "description" : "- int: Int resource\n - float: Float resource",
        "default" : "int",
        "enum" : [ "int", "float" ]
      },
      "v1Run" : {
        "title" : "Run specification",
        "type" : "object",
        "properties" : {
          "uuid" : {
            "title" : "UUID",
            "type" : "string"
          },
          "name" : {
            "title" : "Optional name",
            "type" : "string"
          },
          "description" : {
            "title" : "Optional description",
            "type" : "string"
          },
          "tags" : {
            "title" : "Optional tags of this entity",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "user" : {
            "title" : "Required name of user started this entity",
            "type" : "string"
          },
          "owner" : {
            "title" : "Required name of owner of this entity",
            "type" : "string"
          },
          "project" : {
            "title" : "Required project name",
            "type" : "string"
          },
          "schedule_at" : {
            "title" : "Optional last time the entity was started",
            "type" : "string",
            "format" : "date-time"
          },
          "created_at" : {
            "title" : "Optional time when the entity was created",
            "type" : "string",
            "format" : "date-time"
          },
          "updated_at" : {
            "title" : "Optional last time the entity was updated",
            "type" : "string",
            "format" : "date-time"
          },
          "started_at" : {
            "title" : "Optional last time the entity was started",
            "type" : "string",
            "format" : "date-time"
          },
          "finished_at" : {
            "title" : "Optional last time the entity was started",
            "type" : "string",
            "format" : "date-time"
          },
          "wait_time" : {
            "title" : "Optional wait time of the entity",
            "type" : "number",
            "format" : "float"
          },
          "duration" : {
            "title" : "Optional duration of the entity",
            "type" : "number",
            "format" : "float"
          },
          "managed_by" : {
            "$ref" : "#/components/schemas/v1ManagedBy"
          },
          "is_managed" : {
            "title" : "Optional flag to tell if this entity is managed by the platform",
            "type" : "boolean"
          },
          "is_approved" : {
            "title" : "Deprecated flag that was replaced by \"pending\", and it will be completely dropped after v1.15",
            "type" : "boolean"
          },
          "pending" : {
            "$ref" : "#/components/schemas/v1RunPending"
          },
          "content" : {
            "title" : "Optional content of the entity's spec",
            "type" : "string"
          },
          "raw_content" : {
            "title" : "Optional content of the entity's spec",
            "type" : "string"
          },
          "status" : {
            "$ref" : "#/components/schemas/v1Statuses"
          },
          "bookmarked" : {
            "title" : "Optional if this entity was bookmarked",
            "type" : "boolean"
          },
          "live_state" : {
            "title" : "Current live state",
            "type" : "integer",
            "format" : "int32"
          },
          "readme" : {
            "title" : "Optional Markdown description/readme",
            "type" : "string"
          },
          "meta_info" : {
            "title" : "Optional run meta info",
            "type" : "object",
            "properties" : { }
          },
          "kind" : {
            "$ref" : "#/components/schemas/v1RunKind"
          },
          "runtime" : {
            "$ref" : "#/components/schemas/v1RunKind"
          },
          "inputs" : {
            "title" : "Optional inputs of this entity",
            "type" : "object",
            "properties" : { }
          },
          "outputs" : {
            "title" : "Optional outputs of this entity",
            "type" : "object",
            "properties" : { }
          },
          "original" : {
            "$ref" : "#/components/schemas/v1Cloning"
          },
          "pipeline" : {
            "$ref" : "#/components/schemas/v1Pipeline"
          },
          "status_conditions" : {
            "title" : "The status conditions timeline",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1StatusCondition"
            }
          },
          "role" : {
            "title" : "Current user's role in this (org/teams)/project/runs",
            "type" : "string"
          },
          "contributors" : {
            "title" : "Contributors",
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "settings" : {
            "$ref" : "#/components/schemas/v1RunSettings"
          },
          "resources" : {
            "$ref" : "#/components/schemas/v1RunResources"
          },
          "graph" : {
            "title" : "Optional graph definition",
            "type" : "object",
            "properties" : { }
          },
          "merge" : {
            "title" : "Optional merge flag",
            "type" : "boolean"
          }
        }
      },
      "v1RunArtifact" : {
        "title" : "Run Artifact spec definition",
        "type" : "object",
        "properties" : {
          "name" : {
            "title" : "Artifact name",
            "type" : "string"
          },
          "state" : {
            "title" : "State",
            "type" : "string"
          },
          "kind" : {
            "$ref" : "#/components/schemas/v1ArtifactKind"
          },
          "path" : {
            "title" : "Artifact path",
            "type" : "string"
          },
          "connection" : {
            "title" : "Optional Connection",
            "type" : "string"
          },
          "run" : {
            "title" : "Optional Run",
            "type" : "string"
          },
          "summary" : {
            "title" : "Artifact schema",
            "type" : "object",
            "properties" : { }
          },
          "is_input" : {
            "title" : "Optional flag to check the use of the artifact in a context",
            "type" : "boolean"
          },
          "meta_info" : {
            "title" : "Optional meta information",
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "v1RunArtifacts" : {
        "title" : "Run Artifacts spec definition",
        "type" : "object",
        "properties" : {
          "artifacts" : {
            "title" : "Run Artifacts",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1RunArtifact"
            }
          }
        }
      },
      "v1RunConnection" : {
        "type" : "object",
        "properties" : {
          "uuid" : {
            "title" : "Uuid",
            "type" : "string"
          },
          "name" : {
            "title" : "Name",
            "type" : "string"
          },
          "kind" : {
            "title" : "Kind",
            "type" : "string"
          }
        }
      },
      "v1RunEdge" : {
        "type" : "object",
        "properties" : {
          "upstream" : {
            "$ref" : "#/components/schemas/v1Run"
          },
          "downstream" : {
            "$ref" : "#/components/schemas/v1Run"
          },
          "kind" : {
            "$ref" : "#/components/schemas/v1RunEdgeKind"
          },
          "values" : {
            "title" : "Optional edge values",
            "type" : "object",
            "properties" : { }
          },
          "statuses" : {
            "title" : "Options statuses events",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1Statuses"
            }
          }
        }
      },
      "v1RunEdgeKind" : {
        "type" : "string",
        "default" : "action",
        "enum" : [ "action", "event", "hook", "dag", "join", "run", "tb", "build", "manual" ]
      },
      "v1RunEdgeLineage" : {
        "title" : "single run edge",
        "type" : "object",
        "properties" : {
          "uuid" : {
            "title" : "Run uuid to link",
            "type" : "string"
          },
          "is_upstream" : {
            "title" : "Optional edge run direction",
            "type" : "boolean"
          },
          "values" : {
            "title" : "Optional edge values",
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "v1RunEdgesGraph" : {
        "type" : "object",
        "properties" : {
          "edges" : {
            "title" : "Run edges",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1RunEdgeLineage"
            }
          }
        }
      },
      "v1RunKind" : {
        "title" : "Run kind enum\nKinds: job, service, dag, matrix, schedule\nRuntime kinds: job, service, dag, dask, ray, mpijob, tfjob\nhelper kinds: tuner, watchdog, notifier, cleaner, build",
        "type" : "string",
        "default" : "job",
        "enum" : [ "job", "service", "dag", "daskjob", "rayjob", "mpijob", "tfjob", "pytorchjob", "mxjob", "xgbjob", "paddlejob", "matrix", "schedule", "tuner", "watchdog", "notifier", "builder", "cleaner" ]
      },
      "v1RunPending" : {
        "type" : "string",
        "default" : "approval",
        "enum" : [ "approval", "upload", "cache", "build" ]
      },
      "v1RunReferenceCatalog" : {
        "title" : "Run Settings catalog specification",
        "type" : "object",
        "properties" : {
          "owner" : {
            "title" : "Owner",
            "type" : "string"
          },
          "project" : {
            "title" : "Project",
            "type" : "string"
          },
          "name" : {
            "title" : "Name",
            "type" : "string"
          },
          "state" : {
            "title" : "State",
            "type" : "string"
          }
        }
      },
      "v1RunResources" : {
        "title" : "Run Resources specification",
        "type" : "object",
        "properties" : {
          "cpu" : {
            "type" : "number",
            "format" : "float"
          },
          "memory" : {
            "type" : "number",
            "format" : "float"
          },
          "gpu" : {
            "type" : "number",
            "format" : "float"
          },
          "custom" : {
            "type" : "number",
            "format" : "float"
          },
          "cost" : {
            "type" : "number",
            "format" : "float"
          }
        }
      },
      "v1RunSchema" : {
        "type" : "object",
        "properties" : {
          "job" : {
            "$ref" : "#/components/schemas/v1Job"
          },
          "service" : {
            "$ref" : "#/components/schemas/v1Service"
          },
          "dag" : {
            "$ref" : "#/components/schemas/v1Dag"
          },
          "tfJob" : {
            "$ref" : "#/components/schemas/v1TFJob"
          },
          "pytorchJob" : {
            "$ref" : "#/components/schemas/v1PytorchJob"
          },
          "mpiJob" : {
            "$ref" : "#/components/schemas/v1MPIJob"
          },
          "mxJob" : {
            "$ref" : "#/components/schemas/v1MXJob"
          },
          "xgboostJob" : {
            "$ref" : "#/components/schemas/v1XGBoostJob"
          },
          "paddleJob" : {
            "$ref" : "#/components/schemas/v1PaddleJob"
          },
          "daskJob" : {
            "$ref" : "#/components/schemas/v1DaskJob"
          },
          "rayJob" : {
            "$ref" : "#/components/schemas/v1RayJob"
          }
        }
      },
      "v1RunSettings" : {
        "title" : "Run Settings specification",
        "type" : "object",
        "properties" : {
          "namespace" : {
            "title" : "Namespace",
            "type" : "string"
          },
          "agent" : {
            "$ref" : "#/components/schemas/v1SettingsCatalog"
          },
          "queue" : {
            "$ref" : "#/components/schemas/v1SettingsCatalog"
          },
          "artifacts_store" : {
            "$ref" : "#/components/schemas/v1SettingsCatalog"
          },
          "tensorboard" : {
            "title" : "Latest Tensorboard reference, if it exists",
            "type" : "object",
            "properties" : { }
          },
          "build" : {
            "title" : "Build reference, if it exists",
            "type" : "object",
            "properties" : { }
          },
          "component" : {
            "title" : "Component reference",
            "type" : "object",
            "properties" : { }
          },
          "models" : {
            "title" : "Model version references",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1RunReferenceCatalog"
            }
          },
          "artifacts" : {
            "title" : "Artifact version references",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1RunReferenceCatalog"
            }
          }
        }
      },
      "v1S3Type" : {
        "title" : "Wasb type specification",
        "type" : "object",
        "properties" : {
          "bucket" : {
            "title" : "Optional container",
            "type" : "string"
          },
          "key" : {
            "title" : "Optional storage_account",
            "type" : "string"
          }
        }
      },
      "v1Schedule" : {
        "title" : "All Schemas message",
        "type" : "object",
        "properties" : {
          "cron" : {
            "$ref" : "#/components/schemas/v1CronSchedule"
          },
          "datetime" : {
            "$ref" : "#/components/schemas/v1DateTimeSchedule"
          },
          "interval" : {
            "$ref" : "#/components/schemas/v1IntervalSchedule"
          }
        }
      },
      "v1ScheduleKind" : {
        "type" : "string",
        "default" : "cron",
        "enum" : [ "cron", "interval", "datetime" ]
      },
      "v1SchedulingPolicy" : {
        "type" : "object",
        "properties" : {
          "minAvailable" : {
            "type" : "integer",
            "format" : "int32"
          },
          "queue" : {
            "type" : "string"
          },
          "minResources" : {
            "type" : "object",
            "properties" : { }
          },
          "priorityClass" : {
            "type" : "string"
          },
          "scheduleTimeoutSeconds" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "v1Schemas" : {
        "type" : "object",
        "properties" : {
          "earlyStopping" : {
            "$ref" : "#/components/schemas/v1EarlyStopping"
          },
          "matrix" : {
            "$ref" : "#/components/schemas/v1Matrix"
          },
          "run" : {
            "$ref" : "#/components/schemas/v1RunSchema"
          },
          "operation" : {
            "$ref" : "#/components/schemas/v1Operation"
          },
          "compiledOperation" : {
            "$ref" : "#/components/schemas/v1CompiledOperation"
          },
          "schedule" : {
            "$ref" : "#/components/schemas/v1Schedule"
          },
          "connectionSchema" : {
            "$ref" : "#/components/schemas/v1ConnectionSchema"
          },
          "hpParams" : {
            "$ref" : "#/components/schemas/v1HpParams"
          },
          "reference" : {
            "$ref" : "#/components/schemas/v1Reference"
          },
          "artifactsMount" : {
            "$ref" : "#/components/schemas/v1ArtifactsMount"
          },
          "polyaxonSidecarContainer" : {
            "$ref" : "#/components/schemas/v1PolyaxonSidecarContainer"
          },
          "polyaxonInitContainer" : {
            "$ref" : "#/components/schemas/v1PolyaxonInitContainer"
          },
          "artifacs" : {
            "$ref" : "#/components/schemas/v1ArtifactsType"
          },
          "wasb" : {
            "$ref" : "#/components/schemas/v1WasbType"
          },
          "gcs" : {
            "$ref" : "#/components/schemas/v1GcsType"
          },
          "s3" : {
            "$ref" : "#/components/schemas/v1S3Type"
          },
          "auth" : {
            "$ref" : "#/components/schemas/v1AuthType"
          },
          "uri" : {
            "$ref" : "#/components/schemas/v1UriType"
          },
          "resource" : {
            "$ref" : "#/components/schemas/v1ConnectionResource"
          },
          "connection" : {
            "$ref" : "#/components/schemas/v1ConnectionType"
          },
          "eventType" : {
            "$ref" : "#/components/schemas/v1EventType"
          },
          "matrixKind" : {
            "$ref" : "#/components/schemas/v1MatrixKind"
          },
          "scheduleKind" : {
            "$ref" : "#/components/schemas/v1ScheduleKind"
          },
          "event" : {
            "$ref" : "#/components/schemas/v1Event"
          }
        }
      },
      "v1Search" : {
        "title" : "Search specification",
        "type" : "object",
        "properties" : {
          "uuid" : {
            "title" : "UUID",
            "type" : "string"
          },
          "name" : {
            "title" : "Optional name",
            "type" : "string"
          },
          "description" : {
            "title" : "Optional description",
            "type" : "string"
          },
          "user" : {
            "title" : "Optional name of user created this entity",
            "type" : "string"
          },
          "tags" : {
            "title" : "Optional tags of this entity",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "live_state" : {
            "title" : "Current live state",
            "type" : "integer",
            "format" : "int32"
          },
          "view" : {
            "$ref" : "#/components/schemas/SearchView"
          },
          "spec" : {
            "$ref" : "#/components/schemas/v1SearchSpec"
          },
          "org_level" : {
            "title" : "Optional search level",
            "type" : "boolean"
          },
          "created_at" : {
            "title" : "Optional time when the entity was created",
            "type" : "string",
            "format" : "date-time"
          },
          "updated_at" : {
            "title" : "Optional last time the entity was updated",
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "v1SearchSpec" : {
        "title" : "Search spec definition",
        "type" : "object",
        "properties" : {
          "query" : {
            "title" : "Search query",
            "type" : "string"
          },
          "sort" : {
            "title" : "Search sort",
            "type" : "string"
          },
          "limit" : {
            "title" : "Limit size",
            "type" : "integer",
            "format" : "int32"
          },
          "offset" : {
            "title" : "Offset value",
            "type" : "integer",
            "format" : "int32"
          },
          "groupby" : {
            "title" : "Search group bys",
            "type" : "string"
          },
          "columns" : {
            "title" : "Search columns",
            "type" : "string"
          },
          "layout" : {
            "title" : "Search layout",
            "type" : "string"
          },
          "sections" : {
            "title" : "Search sections",
            "type" : "string"
          },
          "compares" : {
            "title" : "Compare Flags",
            "type" : "string"
          },
          "heat" : {
            "title" : "Optional heat fields",
            "type" : "string"
          },
          "events" : {
            "$ref" : "#/components/schemas/v1DashboardSpec"
          },
          "histograms" : {
            "title" : "Optional histograms specification",
            "type" : "object",
            "properties" : { }
          },
          "trends" : {
            "title" : "Optional trends specification",
            "type" : "object",
            "properties" : { }
          },
          "analytics" : {
            "$ref" : "#/components/schemas/v1AnalyticsSpec"
          }
        }
      },
      "v1SectionSpec" : {
        "title" : "Dashboard section definition",
        "type" : "object",
        "properties" : {
          "name" : {
            "title" : "Section name",
            "type" : "string"
          },
          "is_minimized" : {
            "title" : "Minimize",
            "type" : "boolean"
          },
          "is_frozen" : {
            "title" : "Freeze",
            "type" : "boolean"
          },
          "columns" : {
            "title" : "Number of columns",
            "type" : "integer",
            "format" : "int32"
          },
          "height" : {
            "title" : "Height",
            "type" : "integer",
            "format" : "int32"
          },
          "xaxis" : {
            "title" : "xaxis",
            "type" : "string"
          },
          "smoothing" : {
            "title" : "Smoothing",
            "type" : "integer",
            "format" : "int32"
          },
          "step" : {
            "title" : "Step",
            "type" : "integer",
            "format" : "int32"
          },
          "ignore_outliers" : {
            "title" : "Ignore outliers",
            "type" : "boolean"
          },
          "sample_size" : {
            "title" : "Sample size",
            "type" : "integer",
            "format" : "int32"
          },
          "widgets" : {
            "title" : "Section's widgets",
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "page_index" : {
            "title" : "Page index",
            "type" : "integer",
            "format" : "int32"
          },
          "page_size" : {
            "title" : "Page size",
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "v1Service" : {
        "title" : "Service specification",
        "type" : "object",
        "properties" : {
          "kind" : {
            "title" : "Optional component kind, should be equal to 'service'",
            "type" : "string",
            "default" : "service"
          },
          "environment" : {
            "$ref" : "#/components/schemas/v1Environment"
          },
          "connections" : {
            "title" : "Optional connections section",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "volumes" : {
            "type" : "array",
            "description" : "Volumes is a list of volumes that can be mounted.",
            "items" : {
              "$ref" : "#/components/schemas/v1Volume"
            }
          },
          "init" : {
            "title" : "Optional init connections/containers section",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1Init"
            }
          },
          "sidecars" : {
            "title" : "Optional sidecars section",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1Container"
            }
          },
          "container" : {
            "$ref" : "#/components/schemas/v1Container"
          },
          "ports" : {
            "title" : "Optional service section",
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "rewritePath" : {
            "type" : "boolean",
            "description" : "Rewrite path to remove polyaxon base url(i.e. /v1/services/namespace/owner/project/).\nDefault is false, the service shoud handle a base url."
          },
          "isExternal" : {
            "type" : "boolean",
            "description" : "Optional flag to signal to Polyaxon that this service should not go through Polyaxon's auth\nDefault is false, the service will be controlled by Polyaxon's auth."
          },
          "replicas" : {
            "title" : "Optional value to provision more than a single replica for the service",
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "v1ServiceAccount" : {
        "title" : "ServiceAccount specification",
        "type" : "object",
        "properties" : {
          "uuid" : {
            "title" : "UUID",
            "type" : "string"
          },
          "name" : {
            "title" : "Name",
            "type" : "string"
          },
          "description" : {
            "title" : "Optional description",
            "type" : "string"
          },
          "user" : {
            "title" : "Optional name of user created this entity",
            "type" : "string"
          },
          "tags" : {
            "title" : "Optional tags of this entity",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "live_state" : {
            "title" : "Current live state",
            "type" : "integer",
            "format" : "int32"
          },
          "created_at" : {
            "title" : "Optional time when the entity was created",
            "type" : "string",
            "format" : "date-time"
          },
          "updated_at" : {
            "title" : "Optional last time the entity was updated",
            "type" : "string",
            "format" : "date-time"
          },
          "scopes" : {
            "title" : "Optional scopes allowed for this service account",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "services" : {
            "title" : "Optional services allowed for this service account",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "v1SettingsCatalog" : {
        "title" : "Settings catalog specification",
        "type" : "object",
        "properties" : {
          "uuid" : {
            "title" : "Uuid",
            "type" : "string"
          },
          "name" : {
            "title" : "Name",
            "type" : "string"
          },
          "version" : {
            "title" : "Version",
            "type" : "string"
          },
          "url" : {
            "title" : "Url",
            "type" : "string"
          }
        }
      },
      "v1Stage" : {
        "title" : "Stage specification",
        "type" : "object",
        "properties" : {
          "uuid" : {
            "title" : "The uuid of the stage",
            "type" : "string"
          },
          "stage" : {
            "$ref" : "#/components/schemas/v1Stages"
          },
          "stage_conditions" : {
            "title" : "The stage conditions timeline",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1StageCondition"
            }
          }
        }
      },
      "v1StageCondition" : {
        "title" : "stage condition specification",
        "type" : "object",
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/v1Stages"
          },
          "status" : {
            "title" : "Status state",
            "type" : "string"
          },
          "reason" : {
            "title" : "Status reason",
            "type" : "string"
          },
          "message" : {
            "title" : "Status message",
            "type" : "string"
          },
          "last_update_time" : {
            "title" : "last update time",
            "type" : "string",
            "format" : "date-time"
          },
          "last_transition_time" : {
            "title" : "last transition time",
            "type" : "string",
            "format" : "date-time"
          },
          "meta_info" : {
            "title" : "Optional meta_info",
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "v1Stages" : {
        "type" : "string",
        "default" : "testing",
        "enum" : [ "testing", "staging", "production", "disabled" ]
      },
      "v1Status" : {
        "title" : "Status specification",
        "type" : "object",
        "properties" : {
          "uuid" : {
            "title" : "The uuid of the status",
            "type" : "string"
          },
          "status" : {
            "$ref" : "#/components/schemas/v1Statuses"
          },
          "status_conditions" : {
            "title" : "The status conditions timeline",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1StatusCondition"
            }
          },
          "meta_info" : {
            "title" : "Additional optional meta_info",
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "v1StatusCondition" : {
        "title" : "Status condition specification",
        "type" : "object",
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/v1Statuses"
          },
          "status" : {
            "title" : "Status state",
            "type" : "string"
          },
          "reason" : {
            "title" : "Status reason",
            "type" : "string"
          },
          "message" : {
            "title" : "Status message",
            "type" : "string"
          },
          "last_update_time" : {
            "title" : "last update time",
            "type" : "string",
            "format" : "date-time"
          },
          "last_transition_time" : {
            "title" : "last transition time",
            "type" : "string",
            "format" : "date-time"
          },
          "meta_info" : {
            "title" : "Optional meta_info",
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "v1Statuses" : {
        "type" : "string",
        "default" : "created",
        "enum" : [ "created", "resuming", "on_schedule", "compiled", "queued", "scheduled", "starting", "running", "processing", "stopping", "failed", "stopped", "succeeded", "skipped", "warning", "unschedulable", "upstream_failed", "retrying", "unknown", "done" ]
      },
      "v1TFJob" : {
        "title" : "TF Job specification",
        "type" : "object",
        "properties" : {
          "kind" : {
            "title" : "Optional component kind, should be equal to 'tfjob'",
            "type" : "string",
            "default" : "tfjob"
          },
          "cleanPodPolicy" : {
            "$ref" : "#/components/schemas/v1CleanPodPolicy"
          },
          "schedulingPolicy" : {
            "$ref" : "#/components/schemas/v1SchedulingPolicy"
          },
          "successPolicy" : {
            "title" : "optiona success policy",
            "type" : "string"
          },
          "enableDynamicWorker" : {
            "title" : "optional flag to enable dynamic worker",
            "type" : "boolean"
          },
          "chief" : {
            "$ref" : "#/components/schemas/v1KFReplica"
          },
          "worker" : {
            "$ref" : "#/components/schemas/v1KFReplica"
          },
          "ps" : {
            "$ref" : "#/components/schemas/v1KFReplica"
          },
          "evaluator" : {
            "$ref" : "#/components/schemas/v1KFReplica"
          }
        }
      },
      "v1Tag" : {
        "title" : "Tag specification",
        "type" : "object",
        "properties" : {
          "uuid" : {
            "title" : "UUID",
            "type" : "string"
          },
          "name" : {
            "title" : "Tag name",
            "type" : "string"
          },
          "user" : {
            "title" : "Optional name of user created this entity",
            "type" : "string"
          },
          "color" : {
            "title" : "Optional Tag color",
            "type" : "string"
          },
          "description" : {
            "title" : "Optional tag description",
            "type" : "string"
          },
          "icon" : {
            "title" : "Optional tag icon",
            "type" : "string"
          },
          "stats" : {
            "title" : "Optional tag stats",
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "v1Team" : {
        "title" : "Team specification",
        "type" : "object",
        "properties" : {
          "uuid" : {
            "title" : "Uuid",
            "type" : "string"
          },
          "owner" : {
            "title" : "Owner/namespace where the team was created",
            "type" : "string"
          },
          "name" : {
            "title" : "Name",
            "type" : "string"
          },
          "user" : {
            "title" : "Optional name of user created this entity",
            "type" : "string"
          },
          "projects" : {
            "title" : "projects",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "component_hubs" : {
            "title" : "hubs",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "model_registries" : {
            "title" : "registries",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "settings" : {
            "$ref" : "#/components/schemas/v1TeamSettings"
          },
          "policy" : {
            "title" : "Attached policy",
            "type" : "string"
          },
          "role" : {
            "title" : "Current user's role in this (org/teams)/project",
            "type" : "string"
          },
          "created_at" : {
            "title" : "Optional time when the entity was created",
            "type" : "string",
            "format" : "date-time"
          },
          "updated_at" : {
            "title" : "Optional last time the entity was updated",
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "v1TeamMember" : {
        "title" : "Team member specification",
        "type" : "object",
        "properties" : {
          "user" : {
            "title" : "User",
            "type" : "string"
          },
          "user_email" : {
            "title" : "User email",
            "type" : "string"
          },
          "role" : {
            "title" : "Role",
            "type" : "string"
          },
          "org_role" : {
            "title" : "Organization Role",
            "type" : "string"
          },
          "created_at" : {
            "title" : "Optional time when the entity was created",
            "type" : "string",
            "format" : "date-time"
          },
          "updated_at" : {
            "title" : "Optional last time the entity was updated",
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "v1TeamSettings" : {
        "title" : "Team Settings specification",
        "type" : "object",
        "properties" : {
          "projects" : {
            "title" : "Projects",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1SettingsCatalog"
            }
          },
          "hubs" : {
            "title" : "Component hubs",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1SettingsCatalog"
            }
          },
          "registries" : {
            "title" : "Model registries",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1SettingsCatalog"
            }
          }
        }
      },
      "v1Template" : {
        "title" : "Template specification",
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean"
          },
          "description" : {
            "title" : "Template description",
            "type" : "string"
          },
          "fields" : {
            "title" : "Fields that require customization",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "v1TensorboardType" : {
        "title" : "Tensorboard type specification",
        "type" : "object",
        "properties" : {
          "port" : {
            "title" : "Port to expose the tensorboard service",
            "type" : "integer",
            "format" : "int32"
          },
          "uuids" : {
            "title" : "A comma separated list of operation's uuids to load the tensorboard logs from",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "use_names" : {
            "title" : "A flag to initialize the paths under the operation's names",
            "type" : "boolean"
          },
          "path_prefix" : {
            "title" : "An optional path prefix to use for exposing the service",
            "type" : "string"
          },
          "plugins" : {
            "title" : "An optional comma separated list of plugins to install before starting the tensorboard service",
            "type" : "string"
          }
        }
      },
      "v1Termination" : {
        "type" : "object",
        "properties" : {
          "maxRetries" : {
            "title" : "Max retries for a specific run",
            "type" : "integer",
            "format" : "int32"
          },
          "ttl" : {
            "title" : "A TTL definition",
            "type" : "integer",
            "format" : "int32"
          },
          "timeout" : {
            "title" : "A timeout in seconds",
            "type" : "integer",
            "format" : "int32"
          }
        },
        "description" : "Termination specification, it defines how to handle failures, job runtime, and cleanup policy."
      },
      "v1Token" : {
        "title" : "Token specification",
        "type" : "object",
        "properties" : {
          "uuid" : {
            "title" : "UUID",
            "type" : "string"
          },
          "key" : {
            "title" : "Key",
            "type" : "string"
          },
          "name" : {
            "title" : "Optional token name",
            "type" : "string"
          },
          "scopes" : {
            "title" : "Optional scopes allowed for this token",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "services" : {
            "title" : "Optional services allowed for this token",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "started_at" : {
            "title" : "Optional time when the entity was created",
            "type" : "string",
            "format" : "date-time"
          },
          "expires_at" : {
            "title" : "Optional time when the entity was created",
            "type" : "string",
            "format" : "date-time"
          },
          "created_at" : {
            "title" : "Optional time when the entity was created",
            "type" : "string",
            "format" : "date-time"
          },
          "updated_at" : {
            "title" : "Optional last time the entity was updated",
            "type" : "string",
            "format" : "date-time"
          },
          "expiration" : {
            "title" : "Write only expiration day",
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "v1Toleration" : {
        "title" : "Placeholder for Toleration",
        "type" : "object"
      },
      "v1TrialStart" : {
        "title" : "Trial start",
        "type" : "object",
        "properties" : {
          "name" : {
            "title" : "name",
            "type" : "string"
          },
          "email" : {
            "title" : "Email",
            "type" : "string"
          },
          "organization" : {
            "title" : "Organization",
            "type" : "string"
          },
          "plan" : {
            "title" : "Plan",
            "type" : "string"
          },
          "seats" : {
            "title" : "Sets",
            "type" : "integer",
            "format" : "int32"
          },
          "details" : {
            "title" : "Details",
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "v1TriggerPolicy" : {
        "title" : "TriggerPolicy enum",
        "type" : "string",
        "default" : "all_succeeded",
        "enum" : [ "all_succeeded", "all_failed", "all_done", "one_succeeded", "one_failed", "one_done" ]
      },
      "v1TruncationStoppingPolicy" : {
        "type" : "object",
        "properties" : {
          "kind" : {
            "title" : "Kind of this stopping policy, should be equal to \"truncation\"",
            "type" : "string",
            "default" : "truncation"
          },
          "percent" : {
            "type" : "integer",
            "description" : "The percentage of runs to stop, at each evaluation interval.\ne.g. 1 - 99.",
            "format" : "int32"
          },
          "evaluationInterval" : {
            "type" : "integer",
            "description" : "Interval/Frequency for applying the policy.",
            "format" : "int32"
          },
          "minInterval" : {
            "title" : "Min interval (e.g steps) before starting the process",
            "type" : "integer",
            "format" : "int32"
          },
          "minSamples" : {
            "title" : "Min samples runs succeeded before starting the process",
            "type" : "integer",
            "format" : "int32"
          },
          "includeSucceeded" : {
            "title" : "Flag to include or not the succeeded runs in the calculation",
            "type" : "boolean"
          }
        },
        "description" : "Early stopping with truncation stopping, this policy stops a percentage of\nall running runs at every evaluation."
      },
      "v1Tuner" : {
        "title" : "Tuner definition",
        "type" : "object",
        "properties" : {
          "hubRef" : {
            "title" : "Component name to use",
            "type" : "string"
          },
          "presets" : {
            "title" : "Optional list of presets to use for running this tuner",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "queue" : {
            "title" : "Optional queue to use for scheduling the tuner",
            "type" : "string"
          },
          "namespace" : {
            "title" : "Optional namespace to use, uses agent's namespace by default",
            "type" : "string"
          },
          "params" : {
            "title" : "Optional dict of params",
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/v1Param"
            }
          }
        }
      },
      "v1UriType" : {
        "title" : "Uri type specification",
        "type" : "object",
        "properties" : {
          "user" : {
            "title" : "Optional user",
            "type" : "string"
          },
          "password" : {
            "title" : "Optional password",
            "type" : "string"
          },
          "host" : {
            "title" : "Optional host",
            "type" : "boolean"
          }
        }
      },
      "v1UrlRef" : {
        "title" : "Url reference specification",
        "type" : "object",
        "properties" : {
          "kind" : {
            "title" : "Kind of reference, should be equal to \"url_ref\"",
            "type" : "string",
            "default" : "url_ref"
          },
          "url" : {
            "title" : "Value",
            "type" : "string"
          }
        }
      },
      "v1User" : {
        "title" : "Auth specification",
        "type" : "object",
        "properties" : {
          "username" : {
            "title" : "Username",
            "type" : "string"
          },
          "email" : {
            "title" : "Email",
            "type" : "string"
          },
          "name" : {
            "title" : "Name",
            "type" : "string"
          },
          "kind" : {
            "title" : "Kind",
            "type" : "string"
          },
          "theme" : {
            "title" : "Theme",
            "type" : "integer",
            "format" : "int32"
          },
          "organization" : {
            "title" : "Default organization",
            "type" : "string"
          }
        }
      },
      "v1UserAccess" : {
        "title" : "User request",
        "type" : "object",
        "properties" : {
          "user" : {
            "title" : "User to give access to",
            "type" : "string"
          },
          "user_data" : {
            "$ref" : "#/components/schemas/v1UserAccessData"
          },
          "queue" : {
            "title" : "Optional queue to configure for user",
            "type" : "string"
          },
          "default_presets" : {
            "title" : "Optional default presets to configure for user",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "default_presets_ordered" : {
            "title" : "Default presets ordered",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "namespace" : {
            "title" : "Optiona namespace to configure for user",
            "type" : "string"
          }
        }
      },
      "v1UserAccessData" : {
        "type" : "object",
        "properties" : {
          "username" : {
            "title" : "Username",
            "type" : "string"
          },
          "is_sa" : {
            "title" : "Is service account",
            "type" : "boolean"
          }
        }
      },
      "v1UserEmail" : {
        "title" : "User email",
        "type" : "object",
        "properties" : {
          "email" : {
            "title" : "User username",
            "type" : "string"
          }
        }
      },
      "v1UserSingup" : {
        "title" : "User singup",
        "type" : "object",
        "properties" : {
          "username" : {
            "title" : "User username",
            "type" : "string"
          },
          "email" : {
            "title" : "User email",
            "type" : "string"
          },
          "organization" : {
            "title" : "User organization",
            "type" : "string"
          },
          "password" : {
            "title" : "User password",
            "type" : "string"
          },
          "invitation_key" : {
            "title" : "Invitation key",
            "type" : "string"
          }
        }
      },
      "v1Uuids" : {
        "type" : "object",
        "properties" : {
          "uuids" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "v1Validation" : {
        "title" : "Validation specification based on pydantic",
        "type" : "object",
        "properties" : {
          "delay" : {
            "title" : "Validation delay",
            "type" : "boolean"
          },
          "gt" : {
            "title" : "Numeric Constraints (these constraints are also applied item wise for lists and for dict values)",
            "type" : "integer",
            "format" : "int32"
          },
          "ge" : {
            "type" : "integer",
            "format" : "int32"
          },
          "lt" : {
            "type" : "integer",
            "format" : "int32"
          },
          "le" : {
            "type" : "integer",
            "format" : "int32"
          },
          "multipleOf" : {
            "type" : "integer",
            "format" : "int32"
          },
          "minDigits" : {
            "title" : "Decimal Constraints (these constraints are also applied item wise for lists and for dict values)",
            "type" : "integer",
            "format" : "int32"
          },
          "maxDigits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "decimalPlaces" : {
            "type" : "integer",
            "format" : "int32"
          },
          "regex" : {
            "title" : "String Constraints (these constraints are also applied item wise for lists and for dict values)",
            "type" : "string"
          },
          "minLength" : {
            "type" : "integer",
            "format" : "int32"
          },
          "maxLength" : {
            "type" : "integer",
            "format" : "int32"
          },
          "contains" : {
            "title" : "Generic",
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "excludes" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "options" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "minItems" : {
            "title" : "Items Constraints",
            "type" : "integer",
            "format" : "int32"
          },
          "maxItems" : {
            "type" : "integer",
            "format" : "int32"
          },
          "keys" : {
            "title" : "Dict keys Constraints",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "containsKeys" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "excludesKeys" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "v1Version" : {
        "title" : "Version specification",
        "type" : "object",
        "properties" : {
          "min" : {
            "title" : "Min version",
            "type" : "string"
          },
          "latest" : {
            "title" : "Latest version",
            "type" : "string"
          }
        }
      },
      "v1Volume" : {
        "title" : "Placeholder for Volume",
        "type" : "object"
      },
      "v1WasbType" : {
        "title" : "Wasb type specification",
        "type" : "object",
        "properties" : {
          "container" : {
            "title" : "Optional container",
            "type" : "string"
          },
          "storageAccount" : {
            "title" : "Optional storage_account",
            "type" : "string"
          },
          "path" : {
            "title" : "Optional path",
            "type" : "boolean"
          }
        }
      },
      "v1XGBoostJob" : {
        "title" : "XGBoost Job specification",
        "type" : "object",
        "properties" : {
          "kind" : {
            "title" : "Optional component kind, should be equal to 'xgboostjob'",
            "type" : "string",
            "default" : "xgboostjob"
          },
          "cleanPodPolicy" : {
            "$ref" : "#/components/schemas/v1CleanPodPolicy"
          },
          "schedulingPolicy" : {
            "$ref" : "#/components/schemas/v1SchedulingPolicy"
          },
          "master" : {
            "$ref" : "#/components/schemas/v1KFReplica"
          },
          "worker" : {
            "$ref" : "#/components/schemas/v1KFReplica"
          }
        }
      },
      "v1AverageStoppingPolicy" : {
        "type" : "object",
        "properties" : {
          "kind" : {
            "type" : "object"
          }
        }
      },
      "uuid_upload_body" : {
        "required" : [ "uploadfile" ],
        "type" : "object",
        "properties" : {
          "uploadfile" : {
            "type" : "string",
            "description" : "The file to upload.",
            "format" : "binary"
          }
        }
      },
      "uuid_upload_body_1" : {
        "required" : [ "uploadfile" ],
        "type" : "object",
        "properties" : {
          "uploadfile" : {
            "type" : "string",
            "description" : "The file to upload.",
            "format" : "binary"
          }
        }
      },
      "logs_upload_body" : {
        "required" : [ "uploadfile" ],
        "type" : "object",
        "properties" : {
          "uploadfile" : {
            "type" : "string",
            "description" : "The file to upload.",
            "format" : "binary"
          }
        }
      },
      "artifacts_upload_body" : {
        "required" : [ "uploadfile" ],
        "type" : "object",
        "properties" : {
          "uploadfile" : {
            "type" : "string",
            "description" : "The file to upload.",
            "format" : "binary"
          }
        }
      }
    },
    "securitySchemes" : {
      "ApiKey" : {
        "type" : "apiKey",
        "name" : "Authorization",
        "in" : "header"
      }
    }
  },
  "x-original-swagger-version" : "2.0"
}
