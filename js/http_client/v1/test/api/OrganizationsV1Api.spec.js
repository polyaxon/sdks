/**
 * Polyaxon SDKs and REST API specification.
 *
 *
 * The version of the OpenAPI document: 2.9.3
 * Contact: contact@polyaxon.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PolyaxonSdk);
  }
}(this, function(expect, PolyaxonSdk) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PolyaxonSdk.OrganizationsV1Api();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OrganizationsV1Api', function() {
    describe('approveOrganizationRuns', function() {
      it('should call approveOrganizationRuns successfully', function(done) {
        //uncomment below and update the code to test approveOrganizationRuns
        //instance.approveOrganizationRuns(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('archiveOrganizationRuns', function() {
      it('should call archiveOrganizationRuns successfully', function(done) {
        //uncomment below and update the code to test archiveOrganizationRuns
        //instance.archiveOrganizationRuns(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('bookmarkOrganizationRuns', function() {
      it('should call bookmarkOrganizationRuns successfully', function(done) {
        //uncomment below and update the code to test bookmarkOrganizationRuns
        //instance.bookmarkOrganizationRuns(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createOrganization', function() {
      it('should call createOrganization successfully', function(done) {
        //uncomment below and update the code to test createOrganization
        //instance.createOrganization(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createOrganizationMember', function() {
      it('should call createOrganizationMember successfully', function(done) {
        //uncomment below and update the code to test createOrganizationMember
        //instance.createOrganizationMember(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteOrganization', function() {
      it('should call deleteOrganization successfully', function(done) {
        //uncomment below and update the code to test deleteOrganization
        //instance.deleteOrganization(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteOrganizationInvitation', function() {
      it('should call deleteOrganizationInvitation successfully', function(done) {
        //uncomment below and update the code to test deleteOrganizationInvitation
        //instance.deleteOrganizationInvitation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteOrganizationMember', function() {
      it('should call deleteOrganizationMember successfully', function(done) {
        //uncomment below and update the code to test deleteOrganizationMember
        //instance.deleteOrganizationMember(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteOrganizationRuns', function() {
      it('should call deleteOrganizationRuns successfully', function(done) {
        //uncomment below and update the code to test deleteOrganizationRuns
        //instance.deleteOrganizationRuns(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganization', function() {
      it('should call getOrganization successfully', function(done) {
        //uncomment below and update the code to test getOrganization
        //instance.getOrganization(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganizationActivities', function() {
      it('should call getOrganizationActivities successfully', function(done) {
        //uncomment below and update the code to test getOrganizationActivities
        //instance.getOrganizationActivities(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganizationInvitation', function() {
      it('should call getOrganizationInvitation successfully', function(done) {
        //uncomment below and update the code to test getOrganizationInvitation
        //instance.getOrganizationInvitation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganizationMember', function() {
      it('should call getOrganizationMember successfully', function(done) {
        //uncomment below and update the code to test getOrganizationMember
        //instance.getOrganizationMember(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganizationMultiRunEvents', function() {
      it('should call getOrganizationMultiRunEvents successfully', function(done) {
        //uncomment below and update the code to test getOrganizationMultiRunEvents
        //instance.getOrganizationMultiRunEvents(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganizationMultiRunImportance', function() {
      it('should call getOrganizationMultiRunImportance successfully', function(done) {
        //uncomment below and update the code to test getOrganizationMultiRunImportance
        //instance.getOrganizationMultiRunImportance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganizationRun', function() {
      it('should call getOrganizationRun successfully', function(done) {
        //uncomment below and update the code to test getOrganizationRun
        //instance.getOrganizationRun(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganizationRuns', function() {
      it('should call getOrganizationRuns successfully', function(done) {
        //uncomment below and update the code to test getOrganizationRuns
        //instance.getOrganizationRuns(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganizationRunsArtifactsLineage', function() {
      it('should call getOrganizationRunsArtifactsLineage successfully', function(done) {
        //uncomment below and update the code to test getOrganizationRunsArtifactsLineage
        //instance.getOrganizationRunsArtifactsLineage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganizationSettings', function() {
      it('should call getOrganizationSettings successfully', function(done) {
        //uncomment below and update the code to test getOrganizationSettings
        //instance.getOrganizationSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganizationStats', function() {
      it('should call getOrganizationStats successfully', function(done) {
        //uncomment below and update the code to test getOrganizationStats
        //instance.getOrganizationStats(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganizationVersions', function() {
      it('should call getOrganizationVersions successfully', function(done) {
        //uncomment below and update the code to test getOrganizationVersions
        //instance.getOrganizationVersions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('invalidateOrganizationRuns', function() {
      it('should call invalidateOrganizationRuns successfully', function(done) {
        //uncomment below and update the code to test invalidateOrganizationRuns
        //instance.invalidateOrganizationRuns(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listOrganizationMemberNames', function() {
      it('should call listOrganizationMemberNames successfully', function(done) {
        //uncomment below and update the code to test listOrganizationMemberNames
        //instance.listOrganizationMemberNames(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listOrganizationMembers', function() {
      it('should call listOrganizationMembers successfully', function(done) {
        //uncomment below and update the code to test listOrganizationMembers
        //instance.listOrganizationMembers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listOrganizationNames', function() {
      it('should call listOrganizationNames successfully', function(done) {
        //uncomment below and update the code to test listOrganizationNames
        //instance.listOrganizationNames(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listOrganizations', function() {
      it('should call listOrganizations successfully', function(done) {
        //uncomment below and update the code to test listOrganizations
        //instance.listOrganizations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('organizationLicense', function() {
      it('should call organizationLicense successfully', function(done) {
        //uncomment below and update the code to test organizationLicense
        //instance.organizationLicense(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('organizationPlan', function() {
      it('should call organizationPlan successfully', function(done) {
        //uncomment below and update the code to test organizationPlan
        //instance.organizationPlan(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchOrganization', function() {
      it('should call patchOrganization successfully', function(done) {
        //uncomment below and update the code to test patchOrganization
        //instance.patchOrganization(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchOrganizationInvitation', function() {
      it('should call patchOrganizationInvitation successfully', function(done) {
        //uncomment below and update the code to test patchOrganizationInvitation
        //instance.patchOrganizationInvitation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchOrganizationMember', function() {
      it('should call patchOrganizationMember successfully', function(done) {
        //uncomment below and update the code to test patchOrganizationMember
        //instance.patchOrganizationMember(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchOrganizationSettings', function() {
      it('should call patchOrganizationSettings successfully', function(done) {
        //uncomment below and update the code to test patchOrganizationSettings
        //instance.patchOrganizationSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resendOrganizationInvitation', function() {
      it('should call resendOrganizationInvitation successfully', function(done) {
        //uncomment below and update the code to test resendOrganizationInvitation
        //instance.resendOrganizationInvitation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('restoreOrganizationRuns', function() {
      it('should call restoreOrganizationRuns successfully', function(done) {
        //uncomment below and update the code to test restoreOrganizationRuns
        //instance.restoreOrganizationRuns(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('skipOrganizationRuns', function() {
      it('should call skipOrganizationRuns successfully', function(done) {
        //uncomment below and update the code to test skipOrganizationRuns
        //instance.skipOrganizationRuns(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stopOrganizationRuns', function() {
      it('should call stopOrganizationRuns successfully', function(done) {
        //uncomment below and update the code to test stopOrganizationRuns
        //instance.stopOrganizationRuns(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagOrganizationRuns', function() {
      it('should call tagOrganizationRuns successfully', function(done) {
        //uncomment below and update the code to test tagOrganizationRuns
        //instance.tagOrganizationRuns(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('transferOrganizationRuns', function() {
      it('should call transferOrganizationRuns successfully', function(done) {
        //uncomment below and update the code to test transferOrganizationRuns
        //instance.transferOrganizationRuns(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateOrganization', function() {
      it('should call updateOrganization successfully', function(done) {
        //uncomment below and update the code to test updateOrganization
        //instance.updateOrganization(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateOrganizationInvitation', function() {
      it('should call updateOrganizationInvitation successfully', function(done) {
        //uncomment below and update the code to test updateOrganizationInvitation
        //instance.updateOrganizationInvitation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateOrganizationMember', function() {
      it('should call updateOrganizationMember successfully', function(done) {
        //uncomment below and update the code to test updateOrganizationMember
        //instance.updateOrganizationMember(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateOrganizationSettings', function() {
      it('should call updateOrganizationSettings successfully', function(done) {
        //uncomment below and update the code to test updateOrganizationSettings
        //instance.updateOrganizationSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
