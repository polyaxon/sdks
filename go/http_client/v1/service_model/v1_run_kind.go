// Code generated by go-swagger; DO NOT EDIT.

package service_model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// V1RunKind Run kind enum
// Kinds: job, service, dag, matrix, schedule
// Runtime kinds: job, service, dag, dask, ray, mpijob, tfjob
// helper kinds: tuner, watchdog, notifier, cleaner, build
//
// swagger:model v1RunKind
type V1RunKind string

func NewV1RunKind(value V1RunKind) *V1RunKind {
	return &value
}

// Pointer returns a pointer to a freshly-allocated V1RunKind.
func (m V1RunKind) Pointer() *V1RunKind {
	return &m
}

const (

	// V1RunKindJob captures enum value "job"
	V1RunKindJob V1RunKind = "job"

	// V1RunKindService captures enum value "service"
	V1RunKindService V1RunKind = "service"

	// V1RunKindDag captures enum value "dag"
	V1RunKindDag V1RunKind = "dag"

	// V1RunKindDaskjob captures enum value "daskjob"
	V1RunKindDaskjob V1RunKind = "daskjob"

	// V1RunKindRayjob captures enum value "rayjob"
	V1RunKindRayjob V1RunKind = "rayjob"

	// V1RunKindMpijob captures enum value "mpijob"
	V1RunKindMpijob V1RunKind = "mpijob"

	// V1RunKindTfjob captures enum value "tfjob"
	V1RunKindTfjob V1RunKind = "tfjob"

	// V1RunKindPytorchjob captures enum value "pytorchjob"
	V1RunKindPytorchjob V1RunKind = "pytorchjob"

	// V1RunKindMatrix captures enum value "matrix"
	V1RunKindMatrix V1RunKind = "matrix"

	// V1RunKindSchedule captures enum value "schedule"
	V1RunKindSchedule V1RunKind = "schedule"

	// V1RunKindTuner captures enum value "tuner"
	V1RunKindTuner V1RunKind = "tuner"

	// V1RunKindWatchdog captures enum value "watchdog"
	V1RunKindWatchdog V1RunKind = "watchdog"

	// V1RunKindNotifier captures enum value "notifier"
	V1RunKindNotifier V1RunKind = "notifier"

	// V1RunKindBuilder captures enum value "builder"
	V1RunKindBuilder V1RunKind = "builder"

	// V1RunKindCleaner captures enum value "cleaner"
	V1RunKindCleaner V1RunKind = "cleaner"
)

// for schema
var v1RunKindEnum []interface{}

func init() {
	var res []V1RunKind
	if err := json.Unmarshal([]byte(`["job","service","dag","daskjob","rayjob","mpijob","tfjob","pytorchjob","matrix","schedule","tuner","watchdog","notifier","builder","cleaner"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v1RunKindEnum = append(v1RunKindEnum, v)
	}
}

func (m V1RunKind) validateV1RunKindEnum(path, location string, value V1RunKind) error {
	if err := validate.EnumCase(path, location, value, v1RunKindEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this v1 run kind
func (m V1RunKind) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateV1RunKindEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this v1 run kind based on context it is used
func (m V1RunKind) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
