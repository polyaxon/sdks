openapi: 3.0.1
info:
  contact:
    email: contact@polyaxon.com
    name: Polyaxon sdk
    url: https://github.com/polyaxon/polyaxon
  description: '   '
  title: Polyaxon SDKs and REST API specification.
  version: 2.9.4
servers:
- url: /
security:
- ApiKey: []
paths:
  /api/v1/archives/{user}/projects:
    get:
      operationId: ListArchivedProjects
      parameters:
      - description: User
        explode: false
        in: path
        name: user
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListProjectsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List archived projects for user
      tags:
      - ProjectsV1
      x-accepts: application/json
  /api/v1/archives/{user}/runs:
    get:
      operationId: ListArchivedRuns
      parameters:
      - description: User
        explode: false
        in: path
        name: user
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListRunsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List archived runs for user
      tags:
      - RunsV1
      x-accepts: application/json
  /api/v1/auth/change-password:
    post:
      operationId: ChangePassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1PasswordChange'
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Change password
      tags:
      - AuthV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/auth/reset-password:
    post:
      operationId: ResetPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1UserEmail'
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Reset password
      tags:
      - AuthV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/auth/reset-password-confirm:
    post:
      operationId: ResetPasswordConfirm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1PasswordChange'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Auth'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Reset password confirm
      tags:
      - AuthV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/auth/signup:
    post:
      operationId: Signup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1UserSingup'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Auth'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Signup
      tags:
      - AuthV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/auth/token:
    post:
      operationId: Login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Credentials'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Auth'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Login
      tags:
      - AuthV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/auth/trial:
    post:
      operationId: Trial
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1TrialStart'
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Trial Start
      tags:
      - AuthV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/bookmarks/{user}/projects:
    get:
      operationId: ListBookmarkedProjects
      parameters:
      - description: User
        explode: false
        in: path
        name: user
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListBookmarksResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List bookmarked projects for user
      tags:
      - ProjectsV1
      x-accepts: application/json
  /api/v1/bookmarks/{user}/runs:
    get:
      operationId: ListBookmarkedRuns
      parameters:
      - description: User
        explode: false
        in: path
        name: user
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListBookmarksResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List bookmarked runs for user
      tags:
      - RunsV1
      x-accepts: application/json
  /api/v1/compatibility/{uuid}/{version}/{service}:
    get:
      operationId: GetCompatibility
      parameters:
      - description: UUid
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      - description: Version
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      - description: Service
        explode: false
        in: path
        name: service
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Compatibility'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get compatibility versions
      tags:
      - VersionsV1
      x-accepts: application/json
  /api/v1/installation:
    get:
      operationId: GetInstallation
      parameters:
      - description: auth.
        explode: true
        in: query
        name: auth
        required: false
        schema:
          type: boolean
        style: form
      - description: orgs.
        explode: true
        in: query
        name: orgs
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Installation'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get installation versions
      tags:
      - VersionsV1
      x-accepts: application/json
  /api/v1/log_handler:
    get:
      operationId: GetLogHandler
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1LogHandler'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get log handler versions
      tags:
      - VersionsV1
      x-accepts: application/json
  /api/v1/orgs/create:
    post:
      operationId: CreateOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Organization'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Organization'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Create organization
      tags:
      - OrganizationsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/list:
    get:
      operationId: ListOrganizations
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListOrganizationsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List organizations
      tags:
      - OrganizationsV1
      x-accepts: application/json
  /api/v1/orgs/names:
    get:
      operationId: ListOrganizationNames
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListOrganizationsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List organizations names
      tags:
      - OrganizationsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}:
    delete:
      operationId: DeleteOrganization
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Owner usage query param.
        explode: true
        in: query
        name: usage
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Delete organization
      tags:
      - OrganizationsV1
      x-accepts: application/json
    get:
      operationId: GetOrganization
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Owner usage query param.
        explode: true
        in: query
        name: usage
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Organization'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get organization
      tags:
      - OrganizationsV1
      x-accepts: application/json
    patch:
      operationId: PatchOrganization
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Organization'
        description: Organization body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Organization'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Patch organization
      tags:
      - OrganizationsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: UpdateOrganization
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Organization'
        description: Organization body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Organization'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update organization
      tags:
      - OrganizationsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/activities:
    get:
      operationId: GetOrganizationActivities
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Filter by bookmarks.
        explode: true
        in: query
        name: bookmarks
        required: false
        schema:
          type: boolean
        style: form
      - description: Mode of the search.
        explode: true
        in: query
        name: mode
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListActivitiesResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get organization activities
      tags:
      - OrganizationsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/agents:
    get:
      operationId: ListAgents
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Filter by bookmarks.
        explode: true
        in: query
        name: bookmarks
        required: false
        schema:
          type: boolean
        style: form
      - description: Mode of the search.
        explode: true
        in: query
        name: mode
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListAgentsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List agents
      tags:
      - AgentsV1
      x-accepts: application/json
    post:
      operationId: CreateAgent
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Agent'
        description: Agent body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Agent'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Create agent
      tags:
      - AgentsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/agents/cron:
    post:
      operationId: CronAgent
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: Cron body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1AgentStateResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Global Cron
      tags:
      - AgentsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/agents/names:
    get:
      operationId: ListAgentNames
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Filter by bookmarks.
        explode: true
        in: query
        name: bookmarks
        required: false
        schema:
          type: boolean
        style: form
      - description: Mode of the search.
        explode: true
        in: query
        name: mode
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListAgentsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List agents names
      tags:
      - AgentsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/agents/state:
    get:
      operationId: GetGlobalState
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1AgentStateResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get Global State (queues/runs)
      tags:
      - AgentsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/agents/{agent.uuid}:
    patch:
      operationId: PatchAgent
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: UUID
        explode: false
        in: path
        name: agent.uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Agent'
        description: Agent body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Agent'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Patch agent
      tags:
      - AgentsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: UpdateAgent
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: UUID
        explode: false
        in: path
        name: agent.uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Agent'
        description: Agent body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Agent'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update agent
      tags:
      - AgentsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/agents/{agent.uuid}/config:
    patch:
      operationId: UpdateAgentConfig
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: UUID
        explode: false
        in: path
        name: agent.uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Agent'
        description: Agent body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Agent'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update agent config
      tags:
      - AgentsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/agents/{agent.uuid}/sync:
    patch:
      operationId: SyncAgent
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: UUID
        explode: false
        in: path
        name: agent.uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Agent'
        description: Agent body
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Sync agent
      tags:
      - AgentsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/agents/{agent}/queues:
    post:
      operationId: CreateQueue
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Agent that consumes the queue
        explode: false
        in: path
        name: agent
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Queue'
        description: Queue body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Queue'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Create queue
      tags:
      - QueuesV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/agents/{agent}/queues/{queue.uuid}:
    patch:
      operationId: PatchQueue
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Agent that consumes the queue
        explode: false
        in: path
        name: agent
        required: true
        schema:
          type: string
        style: simple
      - description: UUID
        explode: false
        in: path
        name: queue.uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Queue'
        description: Queue body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Queue'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Patch queue
      tags:
      - QueuesV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: UpdateQueue
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Agent that consumes the queue
        explode: false
        in: path
        name: agent
        required: true
        schema:
          type: string
        style: simple
      - description: UUID
        explode: false
        in: path
        name: queue.uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Queue'
        description: Queue body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Queue'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update queue
      tags:
      - QueuesV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/agents/{entity}/queues/{uuid}:
    delete:
      operationId: DeleteQueue
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: "Entity: project name, hub name, registry name, ..."
        explode: false
        in: path
        name: entity
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the sub-entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Delete queue
      tags:
      - QueuesV1
      x-accepts: application/json
    get:
      operationId: GetQueue
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: "Entity: project name, hub name, registry name, ..."
        explode: false
        in: path
        name: entity
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the sub-entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Queue'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get queue
      tags:
      - QueuesV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/agents/{entity}/queues/{uuid}/stats:
    get:
      operationId: GetQueueStats
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity name under namespace
        explode: false
        in: path
        name: entity
        required: true
        schema:
          type: string
        style: simple
      - description: SubEntity uuid
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Filter by bookmarks.
        explode: true
        in: query
        name: bookmarks
        required: false
        schema:
          type: boolean
        style: form
      - description: Stats Mode.
        explode: true
        in: query
        name: mode
        required: false
        schema:
          type: string
        style: form
      - description: Stats Kind.
        explode: true
        in: query
        name: kind
        required: false
        schema:
          type: string
        style: form
      - description: Stats aggregate.
        explode: true
        in: query
        name: aggregate
        required: false
        schema:
          type: string
        style: form
      - description: Stats group.
        explode: true
        in: query
        name: groupby
        required: false
        schema:
          type: string
        style: form
      - description: Stats trunc.
        explode: true
        in: query
        name: trunc
        required: false
        schema:
          type: string
        style: form
      - description: Stats start date.
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          type: string
        style: form
      - description: Stats end date.
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          type: string
        style: form
      - description: Stats boundary.
        explode: true
        in: query
        name: boundary
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get queue stats
      tags:
      - QueuesV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/agents/{entity}/token:
    patch:
      operationId: PatchAgentToken
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity
        explode: false
        in: path
        name: entity
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Token'
        description: Token body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Token'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Patch agent token
      tags:
      - AgentsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: UpdateAgentToken
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity
        explode: false
        in: path
        name: entity
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Token'
        description: Token body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Token'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update agent token
      tags:
      - AgentsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/agents/{name}/queues:
    get:
      operationId: ListQueues
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity managing the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Filter by bookmarks.
        explode: true
        in: query
        name: bookmarks
        required: false
        schema:
          type: boolean
        style: form
      - description: Mode of the search.
        explode: true
        in: query
        name: mode
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListQueuesResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List queues
      tags:
      - QueuesV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/agents/{name}/queues/names:
    get:
      operationId: ListQueueNames
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity managing the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Filter by bookmarks.
        explode: true
        in: query
        name: bookmarks
        required: false
        schema:
          type: boolean
        style: form
      - description: Mode of the search.
        explode: true
        in: query
        name: mode
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListQueuesResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List queues names
      tags:
      - QueuesV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/agents/{uuid}:
    delete:
      operationId: DeleteAgent
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the sub-entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Entity: project name, hub name, registry name, ..."
        explode: true
        in: query
        name: entity
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Delete agent
      tags:
      - AgentsV1
      x-accepts: application/json
    get:
      operationId: GetAgent
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the sub-entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Entity: project name, hub name, registry name, ..."
        explode: true
        in: query
        name: entity
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Agent'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get agent
      tags:
      - AgentsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/agents/{uuid}/config:
    get:
      operationId: GetAgentConfig
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the sub-entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Entity: project name, hub name, registry name, ..."
        explode: true
        in: query
        name: entity
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Agent'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get agent config
      tags:
      - AgentsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/agents/{uuid}/reconcile:
    patch:
      operationId: ReconcileAgent
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1AgentReconcileBodyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Reconcile agent
      tags:
      - AgentsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/agents/{uuid}/state:
    get:
      operationId: GetAgentState
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1AgentStateResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get State (queues/runs)
      tags:
      - AgentsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/agents/{uuid}/stats:
    get:
      operationId: GetAgentStats
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: SubEntity uuid
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      - description: Entity name under namespace.
        explode: true
        in: query
        name: entity
        required: false
        schema:
          type: string
        style: form
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Filter by bookmarks.
        explode: true
        in: query
        name: bookmarks
        required: false
        schema:
          type: boolean
        style: form
      - description: Stats Mode.
        explode: true
        in: query
        name: mode
        required: false
        schema:
          type: string
        style: form
      - description: Stats Kind.
        explode: true
        in: query
        name: kind
        required: false
        schema:
          type: string
        style: form
      - description: Stats aggregate.
        explode: true
        in: query
        name: aggregate
        required: false
        schema:
          type: string
        style: form
      - description: Stats group.
        explode: true
        in: query
        name: groupby
        required: false
        schema:
          type: string
        style: form
      - description: Stats trunc.
        explode: true
        in: query
        name: trunc
        required: false
        schema:
          type: string
        style: form
      - description: Stats start date.
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          type: string
        style: form
      - description: Stats end date.
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          type: string
        style: form
      - description: Stats boundary.
        explode: true
        in: query
        name: boundary
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get agent stats
      tags:
      - AgentsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/agents/{uuid}/statuses:
    get:
      operationId: GetAgentStatuses
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the sub-entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Entity: project name, hub name, registry name, ..."
        explode: true
        in: query
        name: entity
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Status'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get Agent statuses
      tags:
      - AgentsV1
      x-accepts: application/json
    post:
      operationId: CreateAgentStatus
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1AgentStatusBodyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Status'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Create new agent status
      tags:
      - AgentsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/agents/{uuid}/token:
    get:
      operationId: GetAgentToken
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Token'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get agent token
      tags:
      - AgentsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/connections:
    get:
      operationId: ListConnections
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Filter by bookmarks.
        explode: true
        in: query
        name: bookmarks
        required: false
        schema:
          type: boolean
        style: form
      - description: Mode of the search.
        explode: true
        in: query
        name: mode
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListConnectionsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List connections
      tags:
      - ConnectionsV1
      x-accepts: application/json
    post:
      operationId: CreateConnection
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ConnectionResponse'
        description: Connection body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ConnectionResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Create connection
      tags:
      - ConnectionsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/connections/names:
    get:
      operationId: ListConnectionNames
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Filter by bookmarks.
        explode: true
        in: query
        name: bookmarks
        required: false
        schema:
          type: boolean
        style: form
      - description: Mode of the search.
        explode: true
        in: query
        name: mode
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListConnectionsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List connections names
      tags:
      - ConnectionsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/connections/{connection.uuid}:
    patch:
      operationId: PatchConnection
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: UUID
        explode: false
        in: path
        name: connection.uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ConnectionResponse'
        description: Connection body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ConnectionResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Patch connection
      tags:
      - ConnectionsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: UpdateConnection
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: UUID
        explode: false
        in: path
        name: connection.uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ConnectionResponse'
        description: Connection body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ConnectionResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update connection
      tags:
      - ConnectionsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/connections/{uuid}:
    delete:
      operationId: DeleteConnection
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Delete connection
      tags:
      - ConnectionsV1
      x-accepts: application/json
    get:
      operationId: GetConnection
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ConnectionResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get connection
      tags:
      - ConnectionsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/dashboards:
    get:
      operationId: ListDashboards
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Filter by bookmarks.
        explode: true
        in: query
        name: bookmarks
        required: false
        schema:
          type: boolean
        style: form
      - description: Mode of the search.
        explode: true
        in: query
        name: mode
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListDashboardsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List dashboards
      tags:
      - DashboardsV1
      x-accepts: application/json
    post:
      operationId: CreateDashboard
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Dashboard'
        description: Dashboard body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Dashboard'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Create dashboard
      tags:
      - DashboardsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/dashboards/names:
    get:
      operationId: ListDashboardNames
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Filter by bookmarks.
        explode: true
        in: query
        name: bookmarks
        required: false
        schema:
          type: boolean
        style: form
      - description: Mode of the search.
        explode: true
        in: query
        name: mode
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListDashboardsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List dashboard names
      tags:
      - DashboardsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/dashboards/{dashboard.uuid}:
    patch:
      operationId: PatchDashboard
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: UUID
        explode: false
        in: path
        name: dashboard.uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Dashboard'
        description: Dashboard body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Dashboard'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Patch dashboard
      tags:
      - DashboardsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: UpdateDashboard
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: UUID
        explode: false
        in: path
        name: dashboard.uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Dashboard'
        description: Dashboard body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Dashboard'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update dashboard
      tags:
      - DashboardsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/dashboards/{uuid}:
    delete:
      operationId: DeleteDashboard
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Delete dashboard
      tags:
      - DashboardsV1
      x-accepts: application/json
    get:
      operationId: GetDashboard
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Dashboard'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get dashboard
      tags:
      - DashboardsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/invitations:
    delete:
      operationId: DeleteOrganizationInvitation
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: User.
        explode: true
        in: query
        name: member.user
        required: false
        schema:
          type: string
        style: form
      - description: Read-only User email.
        explode: true
        in: query
        name: member.user_email
        required: false
        schema:
          type: string
        style: form
      - description: Role.
        explode: true
        in: query
        name: member.role
        required: false
        schema:
          type: string
        style: form
      - description: Kind.
        explode: true
        in: query
        name: member.kind
        required: false
        schema:
          type: string
        style: form
      - description: Optional time when the entity was created.
        explode: true
        in: query
        name: member.created_at
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Optional last time the entity was updated.
        explode: true
        in: query
        name: member.updated_at
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Optional email.
        explode: true
        in: query
        name: email
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Delete organization invitation details
      tags:
      - OrganizationsV1
      x-accepts: application/json
    get:
      operationId: GetOrganizationInvitation
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: User.
        explode: true
        in: query
        name: member.user
        required: false
        schema:
          type: string
        style: form
      - description: Read-only User email.
        explode: true
        in: query
        name: member.user_email
        required: false
        schema:
          type: string
        style: form
      - description: Role.
        explode: true
        in: query
        name: member.role
        required: false
        schema:
          type: string
        style: form
      - description: Kind.
        explode: true
        in: query
        name: member.kind
        required: false
        schema:
          type: string
        style: form
      - description: Optional time when the entity was created.
        explode: true
        in: query
        name: member.created_at
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Optional last time the entity was updated.
        explode: true
        in: query
        name: member.updated_at
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Optional email.
        explode: true
        in: query
        name: email
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1OrganizationMember'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get organization invitation details
      tags:
      - OrganizationsV1
      x-accepts: application/json
    patch:
      operationId: PatchOrganizationInvitation
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Optional email.
        explode: true
        in: query
        name: email
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1OrganizationMember'
        description: Organization body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1OrganizationMember'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Patch organization invitation
      tags:
      - OrganizationsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
    post:
      operationId: ResendOrganizationInvitation
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Optional email.
        explode: true
        in: query
        name: email
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1OrganizationMember'
        description: Organization body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1OrganizationMember'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Resend organization invitation
      tags:
      - OrganizationsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: UpdateOrganizationInvitation
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Optional email.
        explode: true
        in: query
        name: email
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1OrganizationMember'
        description: Organization body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1OrganizationMember'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update organization invitation
      tags:
      - OrganizationsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/license:
    post:
      operationId: OrganizationLicense
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Organization'
        description: Organization body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Organization'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Organization license
      tags:
      - OrganizationsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/members:
    get:
      operationId: ListOrganizationMembers
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Filter by bookmarks.
        explode: true
        in: query
        name: bookmarks
        required: false
        schema:
          type: boolean
        style: form
      - description: Mode of the search.
        explode: true
        in: query
        name: mode
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListOrganizationMembersResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get organization members
      tags:
      - OrganizationsV1
      x-accepts: application/json
    post:
      operationId: CreateOrganizationMember
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Optional email.
        explode: true
        in: query
        name: email
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1OrganizationMember'
        description: Organization body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1OrganizationMember'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Create organization member
      tags:
      - OrganizationsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/members/names:
    get:
      operationId: ListOrganizationMemberNames
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Filter by bookmarks.
        explode: true
        in: query
        name: bookmarks
        required: false
        schema:
          type: boolean
        style: form
      - description: Mode of the search.
        explode: true
        in: query
        name: mode
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListOrganizationMembersResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get organization member names
      tags:
      - OrganizationsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/members/{member.user}:
    patch:
      operationId: PatchOrganizationMember
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: User
        explode: false
        in: path
        name: member.user
        required: true
        schema:
          type: string
        style: simple
      - description: Optional email.
        explode: true
        in: query
        name: email
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1OrganizationMember'
        description: Organization body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1OrganizationMember'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Patch organization member
      tags:
      - OrganizationsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: UpdateOrganizationMember
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: User
        explode: false
        in: path
        name: member.user
        required: true
        schema:
          type: string
        style: simple
      - description: Optional email.
        explode: true
        in: query
        name: email
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1OrganizationMember'
        description: Organization body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1OrganizationMember'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update organization member
      tags:
      - OrganizationsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/members/{name}:
    delete:
      operationId: DeleteOrganizationMember
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Component under namespace
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Delete organization member details
      tags:
      - OrganizationsV1
      x-accepts: application/json
    get:
      operationId: GetOrganizationMember
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Component under namespace
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1OrganizationMember'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get organization member details
      tags:
      - OrganizationsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/plan:
    post:
      operationId: OrganizationPlan
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Organization'
        description: Organization body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Organization'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Organization plan
      tags:
      - OrganizationsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/policies:
    get:
      operationId: ListPolicies
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Filter by bookmarks.
        explode: true
        in: query
        name: bookmarks
        required: false
        schema:
          type: boolean
        style: form
      - description: Mode of the search.
        explode: true
        in: query
        name: mode
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListPoliciesResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List Policies
      tags:
      - PoliciesV1
      x-accepts: application/json
    post:
      operationId: CreatePolicy
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Policy'
        description: Policy body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Policy'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Create Policy
      tags:
      - PoliciesV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/policies/names:
    get:
      operationId: ListPolicyNames
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Filter by bookmarks.
        explode: true
        in: query
        name: bookmarks
        required: false
        schema:
          type: boolean
        style: form
      - description: Mode of the search.
        explode: true
        in: query
        name: mode
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListPoliciesResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List scheduling policies names
      tags:
      - PoliciesV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/policies/{policy.uuid}:
    patch:
      operationId: PatchPolicy
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: UUID
        explode: false
        in: path
        name: policy.uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Policy'
        description: Policy body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Policy'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Patch Policy
      tags:
      - PoliciesV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: UpdatePolicy
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: UUID
        explode: false
        in: path
        name: policy.uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Policy'
        description: Policy body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Policy'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update Policy
      tags:
      - PoliciesV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/policies/{uuid}:
    delete:
      operationId: DeletePolicy
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the sub-entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Entity: project name, hub name, registry name, ..."
        explode: true
        in: query
        name: entity
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Delete scheduling preset
      tags:
      - PoliciesV1
      x-accepts: application/json
    get:
      operationId: GetPolicy
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the sub-entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Entity: project name, hub name, registry name, ..."
        explode: true
        in: query
        name: entity
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Policy'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get Policy
      tags:
      - PoliciesV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/presets:
    get:
      operationId: ListPresets
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Filter by bookmarks.
        explode: true
        in: query
        name: bookmarks
        required: false
        schema:
          type: boolean
        style: form
      - description: Mode of the search.
        explode: true
        in: query
        name: mode
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListPresetsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List scheduling presets
      tags:
      - PresetsV1
      x-accepts: application/json
    post:
      operationId: CreatePreset
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Preset'
        description: Preset body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Preset'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Create scheduling presets
      tags:
      - PresetsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/presets/names:
    get:
      operationId: ListPresetNames
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Filter by bookmarks.
        explode: true
        in: query
        name: bookmarks
        required: false
        schema:
          type: boolean
        style: form
      - description: Mode of the search.
        explode: true
        in: query
        name: mode
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListPresetsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List scheduling presets names
      tags:
      - PresetsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/presets/{preset.uuid}:
    patch:
      operationId: PatchPreset
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: UUID
        explode: false
        in: path
        name: preset.uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Preset'
        description: Preset body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Preset'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Patch scheduling preset
      tags:
      - PresetsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: UpdatePreset
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: UUID
        explode: false
        in: path
        name: preset.uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Preset'
        description: Preset body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Preset'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update scheduling preset
      tags:
      - PresetsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/presets/{uuid}:
    delete:
      operationId: DeletePreset
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the sub-entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Entity: project name, hub name, registry name, ..."
        explode: true
        in: query
        name: entity
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Delete scheduling preset
      tags:
      - PresetsV1
      x-accepts: application/json
    get:
      operationId: GetPreset
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the sub-entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Entity: project name, hub name, registry name, ..."
        explode: true
        in: query
        name: entity
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Preset'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get scheduling preset
      tags:
      - PresetsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/queues:
    get:
      operationId: ListOrganizationQueues
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Filter by bookmarks.
        explode: true
        in: query
        name: bookmarks
        required: false
        schema:
          type: boolean
        style: form
      - description: Mode of the search.
        explode: true
        in: query
        name: mode
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListQueuesResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List organization level queues
      tags:
      - QueuesV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/queues/names:
    get:
      operationId: ListOrganizationQueueNames
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Filter by bookmarks.
        explode: true
        in: query
        name: bookmarks
        required: false
        schema:
          type: boolean
        style: form
      - description: Mode of the search.
        explode: true
        in: query
        name: mode
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListQueuesResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List organization level queues names
      tags:
      - QueuesV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/runs:
    get:
      operationId: GetOrganizationRuns
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Filter by bookmarks.
        explode: true
        in: query
        name: bookmarks
        required: false
        schema:
          type: boolean
        style: form
      - description: Mode of the search.
        explode: true
        in: query
        name: mode
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListRunsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get all runs in an organization
      tags:
      - OrganizationsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/runs/Skip:
    post:
      operationId: SkipOrganizationRuns
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Uuids'
        description: Uuids of the entities
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Skip cross-project runs selection
      tags:
      - OrganizationsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/runs/approve:
    post:
      operationId: ApproveOrganizationRuns
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Uuids'
        description: Uuids of the entities
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Approve cross-project runs selection
      tags:
      - OrganizationsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/runs/archive:
    post:
      operationId: ArchiveOrganizationRuns
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Uuids'
        description: Uuids of the entities
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Archive cross-project runs selection
      tags:
      - OrganizationsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/runs/bookmark:
    post:
      operationId: BookmarkOrganizationRuns
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Uuids'
        description: Uuids of the entities
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Bookmark cross-project runs selection
      tags:
      - OrganizationsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/runs/delete:
    delete:
      operationId: DeleteOrganizationRuns
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Uuids'
        description: Uuids of the entities
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Delete cross-project runs selection
      tags:
      - OrganizationsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/runs/invalidate:
    post:
      operationId: InvalidateOrganizationRuns
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Uuids'
        description: Uuids of the entities
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Invalidate cross-project runs selection
      tags:
      - OrganizationsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/runs/lineage/artifacts:
    get:
      operationId: GetOrganizationRunsArtifactsLineage
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity managing the resource.
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Filter by bookmarks.
        explode: true
        in: query
        name: bookmarks
        required: false
        schema:
          type: boolean
        style: form
      - description: Mode of the search.
        explode: true
        in: query
        name: mode
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListRunArtifactsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get runs artifacts lineage
      tags:
      - OrganizationsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/runs/restore:
    post:
      operationId: RestoreOrganizationRuns
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Uuids'
        description: Uuids of the entities
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Restore cross-project runs selection
      tags:
      - OrganizationsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/runs/stop:
    post:
      operationId: StopOrganizationRuns
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Uuids'
        description: Uuids of the entities
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Stop cross-project runs selection
      tags:
      - OrganizationsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/runs/tag:
    post:
      operationId: TagOrganizationRuns
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1EntitiesTags'
        description: Data
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Tag cross-project runs selection
      tags:
      - OrganizationsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/runs/transfer:
    post:
      operationId: TransferOrganizationRuns
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1EntitiesTransfer'
        description: Data
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Transfer cross-project runs selection to a new project
      tags:
      - OrganizationsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/runs/{uuid}:
    get:
      operationId: GetOrganizationRun
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Run'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get a run in an organization
      tags:
      - OrganizationsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/sa:
    get:
      operationId: ListServiceAccounts
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Filter by bookmarks.
        explode: true
        in: query
        name: bookmarks
        required: false
        schema:
          type: boolean
        style: form
      - description: Mode of the search.
        explode: true
        in: query
        name: mode
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListServiceAccountsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List service accounts
      tags:
      - ServiceAccountsV1
      x-accepts: application/json
    post:
      operationId: CreateServiceAccount
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ServiceAccount'
        description: ServiceAccount body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ServiceAccount'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Create service account
      tags:
      - ServiceAccountsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/sa/names:
    get:
      operationId: ListServiceAccountNames
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Filter by bookmarks.
        explode: true
        in: query
        name: bookmarks
        required: false
        schema:
          type: boolean
        style: form
      - description: Mode of the search.
        explode: true
        in: query
        name: mode
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListServiceAccountsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List service accounts names
      tags:
      - ServiceAccountsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/sa/{entity}/tokens:
    post:
      operationId: CreateServiceAccountToken
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity
        explode: false
        in: path
        name: entity
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Token'
        description: Token body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Token'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Create service account token
      tags:
      - ServiceAccountsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/sa/{entity}/tokens/{token.uuid}:
    patch:
      operationId: PatchServiceAccountToken
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity
        explode: false
        in: path
        name: entity
        required: true
        schema:
          type: string
        style: simple
      - description: UUID
        explode: false
        in: path
        name: token.uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Token'
        description: Token body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Token'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Patch service account token
      tags:
      - ServiceAccountsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: UpdateServiceAccountToken
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity
        explode: false
        in: path
        name: entity
        required: true
        schema:
          type: string
        style: simple
      - description: UUID
        explode: false
        in: path
        name: token.uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Token'
        description: Token body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Token'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update service account token
      tags:
      - ServiceAccountsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/sa/{entity}/tokens/{uuid}:
    delete:
      operationId: DeleteServiceAccountToken
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: "Entity: project name, hub name, registry name, ..."
        explode: false
        in: path
        name: entity
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the sub-entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Delete service account token
      tags:
      - ServiceAccountsV1
      x-accepts: application/json
    get:
      operationId: GetServiceAccountToken
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: "Entity: project name, hub name, registry name, ..."
        explode: false
        in: path
        name: entity
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the sub-entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Token'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get service account token
      tags:
      - ServiceAccountsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/sa/{sa.uuid}:
    patch:
      operationId: PatchServiceAccount
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: UUID
        explode: false
        in: path
        name: sa.uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ServiceAccount'
        description: ServiceAccount body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ServiceAccount'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Patch service account
      tags:
      - ServiceAccountsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: UpdateServiceAccount
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: UUID
        explode: false
        in: path
        name: sa.uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ServiceAccount'
        description: ServiceAccount body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ServiceAccount'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update service account
      tags:
      - ServiceAccountsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/sa/{uuid}:
    delete:
      operationId: DeleteServiceAccount
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Delete service account
      tags:
      - ServiceAccountsV1
      x-accepts: application/json
    get:
      operationId: GetServiceAccount
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ServiceAccount'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get service account
      tags:
      - ServiceAccountsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/sa/{uuid}/tokens:
    get:
      operationId: ListServiceAccountTokens
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: SubEntity uuid
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      - description: Entity name under namespace.
        explode: true
        in: query
        name: entity
        required: false
        schema:
          type: string
        style: form
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListTokenResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List service account tokens
      tags:
      - ServiceAccountsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/searches:
    get:
      operationId: ListSearches
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Filter by bookmarks.
        explode: true
        in: query
        name: bookmarks
        required: false
        schema:
          type: boolean
        style: form
      - description: Mode of the search.
        explode: true
        in: query
        name: mode
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListSearchesResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List searches
      tags:
      - SearchesV1
      x-accepts: application/json
    post:
      operationId: CreateSearch
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Search'
        description: Search body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Search'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Create search
      tags:
      - SearchesV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/searches/names:
    get:
      operationId: ListSearchNames
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Filter by bookmarks.
        explode: true
        in: query
        name: bookmarks
        required: false
        schema:
          type: boolean
        style: form
      - description: Mode of the search.
        explode: true
        in: query
        name: mode
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListSearchesResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List search names
      tags:
      - SearchesV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/searches/{search.uuid}:
    patch:
      operationId: PatchSearch
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: UUID
        explode: false
        in: path
        name: search.uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Search'
        description: Search body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Search'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Patch search
      tags:
      - SearchesV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: UpdateSearch
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: UUID
        explode: false
        in: path
        name: search.uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Search'
        description: Search body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Search'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update search
      tags:
      - SearchesV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/searches/{uuid}:
    delete:
      operationId: DeleteSearch
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Delete search
      tags:
      - SearchesV1
      x-accepts: application/json
    get:
      operationId: GetSearch
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Search'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get search
      tags:
      - SearchesV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/settings:
    get:
      operationId: GetOrganizationSettings
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: User.
        explode: true
        in: query
        name: organization.user
        required: false
        schema:
          type: string
        style: form
      - description: Read-only User email.
        explode: true
        in: query
        name: organization.user_email
        required: false
        schema:
          type: string
        style: form
      - description: Name.
        explode: true
        in: query
        name: organization.name
        required: false
        schema:
          type: string
        style: form
      - description: Optional flag to tell if this organization is public.
        explode: true
        in: query
        name: organization.is_public
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional time when the entity was created.
        explode: true
        in: query
        name: organization.created_at
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Optional last time the entity was updated.
        explode: true
        in: query
        name: organization.updated_at
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Optional time to revoke support access.
        explode: true
        in: query
        name: organization.support_revoke_at
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Optional expiration for support.
        explode: true
        in: query
        name: organization.expiration
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Current user's role in this org.
        explode: true
        in: query
        name: organization.role
        required: false
        schema:
          type: string
        style: form
      - description: Default queue.
        explode: true
        in: query
        name: organization.queue
        required: false
        schema:
          type: string
        style: form
      - description: Default presets.
        explode: true
        in: query
        name: organization.default_presets
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Default presets ordered.
        explode: true
        in: query
        name: organization.default_presets_ordered
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Setting to enable viewable metadata on cloud.
        explode: true
        in: query
        name: organization.is_cloud_viewable
        required: false
        schema:
          type: boolean
        style: form
      - description: Setting to configure default archived deletion interval.
        explode: true
        in: query
        name: organization.archived_deletion_interval
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Organization'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get organization settings
      tags:
      - OrganizationsV1
      x-accepts: application/json
    patch:
      operationId: PatchOrganizationSettings
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Organization'
        description: Organization body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Organization'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Patch oranization settings
      tags:
      - OrganizationsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: UpdateOrganizationSettings
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Organization'
        description: Organization body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Organization'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update organization settings
      tags:
      - OrganizationsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/stats:
    get:
      operationId: GetOrganizationStats
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Filter by bookmarks.
        explode: true
        in: query
        name: bookmarks
        required: false
        schema:
          type: boolean
        style: form
      - description: Stats Mode.
        explode: true
        in: query
        name: mode
        required: false
        schema:
          type: string
        style: form
      - description: Stats Kind.
        explode: true
        in: query
        name: kind
        required: false
        schema:
          type: string
        style: form
      - description: Stats aggregate.
        explode: true
        in: query
        name: aggregate
        required: false
        schema:
          type: string
        style: form
      - description: Stats group.
        explode: true
        in: query
        name: groupby
        required: false
        schema:
          type: string
        style: form
      - description: Stats trunc.
        explode: true
        in: query
        name: trunc
        required: false
        schema:
          type: string
        style: form
      - description: Stats start date.
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          type: string
        style: form
      - description: Stats end date.
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          type: string
        style: form
      - description: Stats boundary.
        explode: true
        in: query
        name: boundary
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get organization stats
      tags:
      - OrganizationsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/tags:
    get:
      operationId: ListTags
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Filter by bookmarks.
        explode: true
        in: query
        name: bookmarks
        required: false
        schema:
          type: boolean
        style: form
      - description: Mode of the search.
        explode: true
        in: query
        name: mode
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListTagsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List tags
      tags:
      - TagsV1
      x-accepts: application/json
    post:
      operationId: CreateTag
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Tag'
        description: Tag body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Tag'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Create tag
      tags:
      - TagsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/tags/load:
    get:
      operationId: LoadTags
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Filter by bookmarks.
        explode: true
        in: query
        name: bookmarks
        required: false
        schema:
          type: boolean
        style: form
      - description: Mode of the search.
        explode: true
        in: query
        name: mode
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Load tags
      tags:
      - TagsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/tags/sync:
    post:
      operationId: SyncTags
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1EntitiesTags'
        description: Data
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Sync tags
      tags:
      - TagsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/tags/{tag.uuid}:
    patch:
      operationId: PatchTag
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: UUID
        explode: false
        in: path
        name: tag.uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Tag'
        description: Tag body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Tag'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Patch tag
      tags:
      - TagsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: UpdateTag
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: UUID
        explode: false
        in: path
        name: tag.uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Tag'
        description: Tag body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Tag'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update tag
      tags:
      - TagsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/tags/{uuid}:
    delete:
      operationId: DeleteTag
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      - description: Flag to handle sub-entities.
        explode: true
        in: query
        name: cascade
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Delete tag
      tags:
      - TagsV1
      x-accepts: application/json
    get:
      operationId: GetTag
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Tag'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get tag
      tags:
      - TagsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/teams:
    get:
      operationId: ListTeams
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Filter by bookmarks.
        explode: true
        in: query
        name: bookmarks
        required: false
        schema:
          type: boolean
        style: form
      - description: Mode of the search.
        explode: true
        in: query
        name: mode
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListTeamsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List teams
      tags:
      - TeamsV1
      x-accepts: application/json
    post:
      operationId: CreateTeam
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Team'
        description: Team body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Team'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Create team
      tags:
      - TeamsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/teams/names:
    get:
      operationId: ListTeamNames
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Filter by bookmarks.
        explode: true
        in: query
        name: bookmarks
        required: false
        schema:
          type: boolean
        style: form
      - description: Mode of the search.
        explode: true
        in: query
        name: mode
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListTeamsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List teams names
      tags:
      - TeamsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/teams/{entity}/runs/{uuid}:
    get:
      operationId: GetTeamRun
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: "Entity: project name, hub name, registry name, ..."
        explode: false
        in: path
        name: entity
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the sub-entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Run'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get a run in a team
      tags:
      - TeamsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/teams/{entity}/versions/{kind}:
    get:
      operationId: GetTeamVersions
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity name under namespace
        explode: false
        in: path
        name: entity
        required: true
        schema:
          type: string
        style: simple
      - description: Version Kind
        explode: false
        in: path
        name: kind
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListProjectVersionsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get all runs in a team
      tags:
      - TeamsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/teams/{name}:
    delete:
      operationId: DeleteTeam
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Component under namespace
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Delete team
      tags:
      - TeamsV1
      x-accepts: application/json
    get:
      operationId: GetTeam
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Component under namespace
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Team'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get team
      tags:
      - TeamsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/teams/{name}/activities:
    get:
      operationId: GetTeamActivities
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity managing the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Filter by bookmarks.
        explode: true
        in: query
        name: bookmarks
        required: false
        schema:
          type: boolean
        style: form
      - description: Mode of the search.
        explode: true
        in: query
        name: mode
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListActivitiesResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get organization activities
      tags:
      - TeamsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/teams/{name}/members:
    get:
      operationId: ListTeamMembers
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity managing the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Filter by bookmarks.
        explode: true
        in: query
        name: bookmarks
        required: false
        schema:
          type: boolean
        style: form
      - description: Mode of the search.
        explode: true
        in: query
        name: mode
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListTeamMembersResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get team members
      tags:
      - TeamsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/teams/{name}/runs:
    get:
      operationId: GetTeamRuns
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity managing the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Filter by bookmarks.
        explode: true
        in: query
        name: bookmarks
        required: false
        schema:
          type: boolean
        style: form
      - description: Mode of the search.
        explode: true
        in: query
        name: mode
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListRunsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get all runs in a team
      tags:
      - TeamsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/teams/{name}/runs/Skip:
    post:
      operationId: SkipTeamRuns
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity under namespace
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Uuids'
        description: Uuids of the entities
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Skip cross-project runs selection
      tags:
      - TeamsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/teams/{name}/runs/approve:
    post:
      operationId: ApproveTeamRuns
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity under namespace
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Uuids'
        description: Uuids of the entities
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Approve cross-project runs selection
      tags:
      - TeamsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/teams/{name}/runs/archive:
    post:
      operationId: ArchiveTeamRuns
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity under namespace
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Uuids'
        description: Uuids of the entities
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Archive cross-project runs selection
      tags:
      - TeamsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/teams/{name}/runs/bookmark:
    post:
      operationId: BookmarkTeamRuns
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity under namespace
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Uuids'
        description: Uuids of the entities
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Bookmark cross-project runs selection
      tags:
      - TeamsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/teams/{name}/runs/delete:
    delete:
      operationId: DeleteTeamRuns
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity under namespace
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Uuids'
        description: Uuids of the entities
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Delete cross-project runs selection
      tags:
      - TeamsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/teams/{name}/runs/invalidate:
    post:
      operationId: InvalidateTeamRuns
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity under namespace
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Uuids'
        description: Uuids of the entities
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Invalidate cross-project runs selection
      tags:
      - TeamsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/teams/{name}/runs/lineage/artifacts:
    get:
      operationId: GetTeamRunsArtifactsLineage
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity managing the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Filter by bookmarks.
        explode: true
        in: query
        name: bookmarks
        required: false
        schema:
          type: boolean
        style: form
      - description: Mode of the search.
        explode: true
        in: query
        name: mode
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListRunArtifactsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get runs artifacts lineage
      tags:
      - TeamsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/teams/{name}/runs/restore:
    post:
      operationId: RestoreTeamRuns
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity under namespace
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Uuids'
        description: Uuids of the entities
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Restore cross-project runs selection
      tags:
      - TeamsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/teams/{name}/runs/stop:
    post:
      operationId: StopTeamRuns
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity under namespace
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Uuids'
        description: Uuids of the entities
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Stop cross-project runs selection
      tags:
      - TeamsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/teams/{name}/runs/tag:
    post:
      operationId: TagTeamRuns
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity under namespace
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1EntitiesTags'
        description: Data
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Tag cross-project runs selection
      tags:
      - TeamsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/teams/{name}/runs/transfer:
    post:
      operationId: TransferTeamRuns
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity under namespace
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1EntitiesTransfer'
        description: Data
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Transfer cross-project runs selection to a new project
      tags:
      - TeamsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/teams/{name}/stats:
    get:
      operationId: GetTeamStats
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity managing the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Filter by bookmarks.
        explode: true
        in: query
        name: bookmarks
        required: false
        schema:
          type: boolean
        style: form
      - description: Stats Mode.
        explode: true
        in: query
        name: mode
        required: false
        schema:
          type: string
        style: form
      - description: Stats Kind.
        explode: true
        in: query
        name: kind
        required: false
        schema:
          type: string
        style: form
      - description: Stats aggregate.
        explode: true
        in: query
        name: aggregate
        required: false
        schema:
          type: string
        style: form
      - description: Stats group.
        explode: true
        in: query
        name: groupby
        required: false
        schema:
          type: string
        style: form
      - description: Stats trunc.
        explode: true
        in: query
        name: trunc
        required: false
        schema:
          type: string
        style: form
      - description: Stats start date.
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          type: string
        style: form
      - description: Stats end date.
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          type: string
        style: form
      - description: Stats boundary.
        explode: true
        in: query
        name: boundary
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get team stats
      tags:
      - TeamsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/teams/{team.name}:
    patch:
      operationId: PatchTeam
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Name
        explode: false
        in: path
        name: team.name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Team'
        description: Team body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Team'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Patch team
      tags:
      - TeamsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: UpdateTeam
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Name
        explode: false
        in: path
        name: team.name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Team'
        description: Team body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Team'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update team
      tags:
      - TeamsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/teams/{team}/members:
    post:
      operationId: CreateTeamMember
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Team
        explode: false
        in: path
        name: team
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1TeamMember'
        description: Team body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1TeamMember'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Create team member
      tags:
      - TeamsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/teams/{team}/members/{member.user}:
    patch:
      operationId: PatchTeamMember
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Team
        explode: false
        in: path
        name: team
        required: true
        schema:
          type: string
        style: simple
      - description: User
        explode: false
        in: path
        name: member.user
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1TeamMember'
        description: Team body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1TeamMember'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Patch team member
      tags:
      - TeamsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: UpdateTeamMember
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Team
        explode: false
        in: path
        name: team
        required: true
        schema:
          type: string
        style: simple
      - description: User
        explode: false
        in: path
        name: member.user
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1TeamMember'
        description: Team body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1TeamMember'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update team member
      tags:
      - TeamsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/teams/{team}/members/{user}:
    delete:
      operationId: DeleteTeamMember
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Team under namespace
        explode: false
        in: path
        name: team
        required: true
        schema:
          type: string
        style: simple
      - description: Member under team
        explode: false
        in: path
        name: user
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Delete team member details
      tags:
      - TeamsV1
      x-accepts: application/json
    get:
      operationId: GetTeamMember
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Team under namespace
        explode: false
        in: path
        name: team
        required: true
        schema:
          type: string
        style: simple
      - description: Member under team
        explode: false
        in: path
        name: user
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1TeamMember'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get team member details
      tags:
      - TeamsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/versions/{kind}:
    get:
      operationId: GetOrganizationVersions
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Version Kind
        explode: false
        in: path
        name: kind
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListProjectVersionsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get all runs in an organization
      tags:
      - OrganizationsV1
      x-accepts: application/json
  /api/v1/users:
    get:
      operationId: GetUser
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1User'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get current user
      tags:
      - UsersV1
      x-accepts: application/json
    patch:
      operationId: PatchUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1User'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1User'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Patch current user
      tags:
      - UsersV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: UpdateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1User'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1User'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update current user
      tags:
      - UsersV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/users/history:
    get:
      operationId: GetHistory
      parameters:
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListActivitiesResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: User History
      tags:
      - UsersV1
      x-accepts: application/json
  /api/v1/users/suggestions:
    get:
      operationId: GetSuggestions
      parameters:
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: User suggestions
      tags:
      - UsersV1
      x-accepts: application/json
  /api/v1/users/tokens:
    get:
      operationId: ListTokens
      parameters:
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListTokenResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List tokens
      tags:
      - UsersV1
      x-accepts: application/json
    post:
      operationId: CreateToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Token'
        description: Token body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Token'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Create token
      tags:
      - UsersV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/users/tokens/{token.uuid}:
    patch:
      operationId: PatchToken
      parameters:
      - description: UUID
        explode: false
        in: path
        name: token.uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Token'
        description: Token body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Token'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Patch token
      tags:
      - UsersV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: UpdateToken
      parameters:
      - description: UUID
        explode: false
        in: path
        name: token.uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Token'
        description: Token body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Token'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update token
      tags:
      - UsersV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/users/tokens/{uuid}:
    delete:
      operationId: DeleteToken
      parameters:
      - description: UUid of the namespace
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Delete token
      tags:
      - UsersV1
      x-accepts: application/json
    get:
      operationId: GetToken
      parameters:
      - description: UUid of the namespace
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Token'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get token
      tags:
      - UsersV1
      x-accepts: application/json
  /api/v1/users/workspaces:
    get:
      operationId: GetWorkspaces
      parameters:
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: User workspaces
      tags:
      - UsersV1
      x-accepts: application/json
  /api/v1/{owner}/projects/create:
    post:
      operationId: CreateProject
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Project'
        description: Project body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Project'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Create new project
      tags:
      - ProjectsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/{owner}/projects/list:
    get:
      operationId: ListProjects
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Filter by bookmarks.
        explode: true
        in: query
        name: bookmarks
        required: false
        schema:
          type: boolean
        style: form
      - description: Mode of the search.
        explode: true
        in: query
        name: mode
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListProjectsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List projects
      tags:
      - ProjectsV1
      x-accepts: application/json
  /api/v1/{owner}/projects/names:
    get:
      operationId: ListProjectNames
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Filter by bookmarks.
        explode: true
        in: query
        name: bookmarks
        required: false
        schema:
          type: boolean
        style: form
      - description: Mode of the search.
        explode: true
        in: query
        name: mode
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListProjectsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List project names
      tags:
      - ProjectsV1
      x-accepts: application/json
  /api/v1/{owner}/{entity}/dashboards/{uuid}:
    delete:
      operationId: DeleteProjectDashboard
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: "Entity: project name, hub name, registry name, ..."
        explode: false
        in: path
        name: entity
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the sub-entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Delete project dashboard
      tags:
      - ProjectDashboardsV1
      x-accepts: application/json
    get:
      operationId: GetProjectDashboard
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: "Entity: project name, hub name, registry name, ..."
        explode: false
        in: path
        name: entity
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the sub-entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Dashboard'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get project dashboard
      tags:
      - ProjectDashboardsV1
      x-accepts: application/json
  /api/v1/{owner}/{entity}/dashboards/{uuid}/promote:
    post:
      operationId: PromoteProjectDashboard
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: "Entity: project name, hub name, registry name, ..."
        explode: false
        in: path
        name: entity
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the sub-entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Promote project dashboard
      tags:
      - ProjectDashboardsV1
      x-accepts: application/json
  /api/v1/{owner}/{entity}/runs/{uuid}:
    delete:
      operationId: DeleteRun
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: "Entity: project name, hub name, registry name, ..."
        explode: false
        in: path
        name: entity
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the sub-entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Delete run
      tags:
      - RunsV1
      x-accepts: application/json
    get:
      operationId: GetRun
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: "Entity: project name, hub name, registry name, ..."
        explode: false
        in: path
        name: entity
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the sub-entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Run'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get run
      tags:
      - RunsV1
      x-accepts: application/json
  /api/v1/{owner}/{entity}/runs/{uuid}/approve:
    post:
      operationId: ApproveRun
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: "Entity: project name, hub name, registry name, ..."
        explode: false
        in: path
        name: entity
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the sub-entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Approve run
      tags:
      - RunsV1
      x-accepts: application/json
  /api/v1/{owner}/{entity}/runs/{uuid}/archive:
    post:
      operationId: ArchiveRun
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: "Entity: project name, hub name, registry name, ..."
        explode: false
        in: path
        name: entity
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the sub-entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Archive run
      tags:
      - RunsV1
      x-accepts: application/json
  /api/v1/{owner}/{entity}/runs/{uuid}/bookmark:
    post:
      operationId: BookmarkRun
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: "Entity: project name, hub name, registry name, ..."
        explode: false
        in: path
        name: entity
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the sub-entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Bookmark run
      tags:
      - RunsV1
      x-accepts: application/json
  /api/v1/{owner}/{entity}/runs/{uuid}/impersonate:
    post:
      operationId: ImpersonateToken
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: "Entity: project name, hub name, registry name, ..."
        explode: false
        in: path
        name: entity
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the sub-entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Auth'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Impersonate run token
      tags:
      - RunsV1
      x-accepts: application/json
  /api/v1/{owner}/{entity}/runs/{uuid}/invalidate:
    post:
      operationId: InvalidateRun
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: "Entity: project name, hub name, registry name, ..."
        explode: false
        in: path
        name: entity
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the sub-entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Invalidate run
      tags:
      - RunsV1
      x-accepts: application/json
  /api/v1/{owner}/{entity}/runs/{uuid}/lineage/artifacts:
    get:
      operationId: GetRunArtifactsLineage
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity name under namespace
        explode: false
        in: path
        name: entity
        required: true
        schema:
          type: string
        style: simple
      - description: SubEntity uuid
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListRunArtifactsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get run artifacts lineage
      tags:
      - RunsV1
      x-accepts: application/json
  /api/v1/{owner}/{entity}/runs/{uuid}/lineage/artifacts/names:
    get:
      operationId: GetRunArtifactsLineageNames
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity name under namespace
        explode: false
        in: path
        name: entity
        required: true
        schema:
          type: string
        style: simple
      - description: SubEntity uuid
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListRunArtifactsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get run artifacts lineage names
      tags:
      - RunsV1
      x-accepts: application/json
  /api/v1/{owner}/{entity}/runs/{uuid}/lineage/clones:
    get:
      operationId: GetRunClonesLineage
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity name under namespace
        explode: false
        in: path
        name: entity
        required: true
        schema:
          type: string
        style: simple
      - description: SubEntity uuid
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListRunsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get run clones lineage
      tags:
      - RunsV1
      x-accepts: application/json
  /api/v1/{owner}/{entity}/runs/{uuid}/lineage/connections:
    get:
      operationId: GetRunConnectionsLineage
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity name under namespace
        explode: false
        in: path
        name: entity
        required: true
        schema:
          type: string
        style: simple
      - description: SubEntity uuid
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListRunConnectionsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get run connections lineage
      tags:
      - RunsV1
      x-accepts: application/json
  /api/v1/{owner}/{entity}/runs/{uuid}/lineage/downstream:
    get:
      operationId: GetRunDownstreamLineage
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity name under namespace
        explode: false
        in: path
        name: entity
        required: true
        schema:
          type: string
        style: simple
      - description: SubEntity uuid
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListRunEdgesResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get run downstream lineage
      tags:
      - RunsV1
      x-accepts: application/json
  /api/v1/{owner}/{entity}/runs/{uuid}/lineage/upstream:
    get:
      operationId: GetRunUpstreamLineage
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity name under namespace
        explode: false
        in: path
        name: entity
        required: true
        schema:
          type: string
        style: simple
      - description: SubEntity uuid
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListRunEdgesResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get run upstream lineage
      tags:
      - RunsV1
      x-accepts: application/json
  /api/v1/{owner}/{entity}/runs/{uuid}/namespace:
    get:
      operationId: GetRunNamespace
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: "Entity: project name, hub name, registry name, ..."
        explode: false
        in: path
        name: entity
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the sub-entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1RunSettings'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get Run namespace
      tags:
      - RunsV1
      x-accepts: application/json
  /api/v1/{owner}/{entity}/runs/{uuid}/restore:
    post:
      operationId: RestoreRun
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: "Entity: project name, hub name, registry name, ..."
        explode: false
        in: path
        name: entity
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the sub-entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Restore run
      tags:
      - RunsV1
      x-accepts: application/json
  /api/v1/{owner}/{entity}/runs/{uuid}/settings:
    get:
      operationId: GetRunSettings
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: "Entity: project name, hub name, registry name, ..."
        explode: false
        in: path
        name: entity
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the sub-entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1RunSettings'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get Run settings
      tags:
      - RunsV1
      x-accepts: application/json
  /api/v1/{owner}/{entity}/runs/{uuid}/skip:
    post:
      operationId: SkipRun
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: "Entity: project name, hub name, registry name, ..."
        explode: false
        in: path
        name: entity
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the sub-entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Skip run
      tags:
      - RunsV1
      x-accepts: application/json
  /api/v1/{owner}/{entity}/runs/{uuid}/stats:
    get:
      operationId: GetRunStats
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity name under namespace
        explode: false
        in: path
        name: entity
        required: true
        schema:
          type: string
        style: simple
      - description: SubEntity uuid
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Filter by bookmarks.
        explode: true
        in: query
        name: bookmarks
        required: false
        schema:
          type: boolean
        style: form
      - description: Stats Mode.
        explode: true
        in: query
        name: mode
        required: false
        schema:
          type: string
        style: form
      - description: Stats Kind.
        explode: true
        in: query
        name: kind
        required: false
        schema:
          type: string
        style: form
      - description: Stats aggregate.
        explode: true
        in: query
        name: aggregate
        required: false
        schema:
          type: string
        style: form
      - description: Stats group.
        explode: true
        in: query
        name: groupby
        required: false
        schema:
          type: string
        style: form
      - description: Stats trunc.
        explode: true
        in: query
        name: trunc
        required: false
        schema:
          type: string
        style: form
      - description: Stats start date.
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          type: string
        style: form
      - description: Stats end date.
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          type: string
        style: form
      - description: Stats boundary.
        explode: true
        in: query
        name: boundary
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get run stats
      tags:
      - RunsV1
      x-accepts: application/json
  /api/v1/{owner}/{entity}/runs/{uuid}/statuses:
    get:
      operationId: GetRunStatuses
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: "Entity: project name, hub name, registry name, ..."
        explode: false
        in: path
        name: entity
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the sub-entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Status'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get run statuses
      tags:
      - RunsV1
      x-accepts: application/json
  /api/v1/{owner}/{entity}/runs/{uuid}/stop:
    post:
      operationId: StopRun
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: "Entity: project name, hub name, registry name, ..."
        explode: false
        in: path
        name: entity
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the sub-entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Stop run
      tags:
      - RunsV1
      x-accepts: application/json
  /api/v1/{owner}/{entity}/runs/{uuid}/unbookmark:
    delete:
      operationId: UnbookmarkRun
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: "Entity: project name, hub name, registry name, ..."
        explode: false
        in: path
        name: entity
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the sub-entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Unbookmark run
      tags:
      - RunsV1
      x-accepts: application/json
  /api/v1/{owner}/{entity}/searches/{uuid}:
    delete:
      operationId: DeleteProjectSearch
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: "Entity: project name, hub name, registry name, ..."
        explode: false
        in: path
        name: entity
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the sub-entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Delete project search
      tags:
      - ProjectSearchesV1
      x-accepts: application/json
    get:
      operationId: GetProjectSearch
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: "Entity: project name, hub name, registry name, ..."
        explode: false
        in: path
        name: entity
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the sub-entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Search'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get project search
      tags:
      - ProjectSearchesV1
      x-accepts: application/json
  /api/v1/{owner}/{entity}/searches/{uuid}/promote:
    post:
      operationId: PromoteProjectSearch
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: "Entity: project name, hub name, registry name, ..."
        explode: false
        in: path
        name: entity
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the sub-entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Promote project search
      tags:
      - ProjectSearchesV1
      x-accepts: application/json
  /api/v1/{owner}/{entity}/versions/{kind}:
    get:
      operationId: ListVersions
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity name under namespace
        explode: false
        in: path
        name: entity
        required: true
        schema:
          type: string
        style: simple
      - description: Version Kind
        explode: false
        in: path
        name: kind
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListProjectVersionsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List versions
      tags:
      - ProjectsV1
      x-accepts: application/json
  /api/v1/{owner}/{entity}/versions/{kind}/names:
    get:
      operationId: ListVersionNames
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity name under namespace
        explode: false
        in: path
        name: entity
        required: true
        schema:
          type: string
        style: simple
      - description: Version Kind
        explode: false
        in: path
        name: kind
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListProjectVersionsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List versions names
      tags:
      - ProjectsV1
      x-accepts: application/json
  /api/v1/{owner}/{entity}/versions/{kind}/{name}:
    delete:
      operationId: DeleteVersion
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: "Entity: project name, hub name, registry name, ..."
        explode: false
        in: path
        name: entity
        required: true
        schema:
          type: string
        style: simple
      - description: Version Kind
        explode: false
        in: path
        name: kind
        required: true
        schema:
          type: string
        style: simple
      - description: Sub-entity name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Delete version
      tags:
      - ProjectsV1
      x-accepts: application/json
    get:
      operationId: GetVersion
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: "Entity: project name, hub name, registry name, ..."
        explode: false
        in: path
        name: entity
        required: true
        schema:
          type: string
        style: simple
      - description: Version Kind
        explode: false
        in: path
        name: kind
        required: true
        schema:
          type: string
        style: simple
      - description: Sub-entity name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ProjectVersion'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get version
      tags:
      - ProjectsV1
      x-accepts: application/json
  /api/v1/{owner}/{entity}/versions/{kind}/{name}/stages:
    get:
      operationId: GetVersionStages
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: "Entity: project name, hub name, registry name, ..."
        explode: false
        in: path
        name: entity
        required: true
        schema:
          type: string
        style: simple
      - description: Version Kind
        explode: false
        in: path
        name: kind
        required: true
        schema:
          type: string
        style: simple
      - description: Sub-entity name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Stage'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get version stages
      tags:
      - ProjectsV1
      x-accepts: application/json
    post:
      operationId: CreateVersionStage
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity namespace
        explode: false
        in: path
        name: entity
        required: true
        schema:
          type: string
        style: simple
      - description: "Optional kind, only required for an version entity"
        explode: false
        in: path
        name: kind
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the entity to apply the stage to
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1EntityStageBodyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Stage'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Create new artifact version stage
      tags:
      - ProjectsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/{owner}/{name}:
    delete:
      operationId: DeleteProject
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Component under namespace
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Delete project
      tags:
      - ProjectsV1
      x-accepts: application/json
    get:
      operationId: GetProject
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Component under namespace
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Project'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get project
      tags:
      - ProjectsV1
      x-accepts: application/json
  /api/v1/{owner}/{name}/activities:
    get:
      operationId: GetProjectActivities
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity managing the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Filter by bookmarks.
        explode: true
        in: query
        name: bookmarks
        required: false
        schema:
          type: boolean
        style: form
      - description: Mode of the search.
        explode: true
        in: query
        name: mode
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListActivitiesResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get project activities
      tags:
      - ProjectsV1
      x-accepts: application/json
  /api/v1/{owner}/{name}/archive:
    post:
      operationId: ArchiveProject
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Component under namespace
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Archive project
      tags:
      - ProjectsV1
      x-accepts: application/json
  /api/v1/{owner}/{name}/bookmark:
    post:
      operationId: BookmarkProject
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Component under namespace
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Bookmark project
      tags:
      - ProjectsV1
      x-accepts: application/json
  /api/v1/{owner}/{name}/ci:
    delete:
      operationId: DisableProjectCI
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Component under namespace
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Disbale project CI
      tags:
      - ProjectsV1
      x-accepts: application/json
    post:
      operationId: EnableProjectCI
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Component under namespace
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Enable project CI
      tags:
      - ProjectsV1
      x-accepts: application/json
  /api/v1/{owner}/{name}/dashboards:
    get:
      operationId: ListProjectDashboards
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity managing the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Filter by bookmarks.
        explode: true
        in: query
        name: bookmarks
        required: false
        schema:
          type: boolean
        style: form
      - description: Mode of the search.
        explode: true
        in: query
        name: mode
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListDashboardsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List project dashboards
      tags:
      - ProjectDashboardsV1
      x-accepts: application/json
  /api/v1/{owner}/{name}/dashboards/names:
    get:
      operationId: ListProjectDashboardNames
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity managing the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Filter by bookmarks.
        explode: true
        in: query
        name: bookmarks
        required: false
        schema:
          type: boolean
        style: form
      - description: Mode of the search.
        explode: true
        in: query
        name: mode
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListDashboardsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List project dashboard
      tags:
      - ProjectDashboardsV1
      x-accepts: application/json
  /api/v1/{owner}/{name}/restore:
    post:
      operationId: RestoreProject
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Component under namespace
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Restore project
      tags:
      - ProjectsV1
      x-accepts: application/json
  /api/v1/{owner}/{name}/runs:
    get:
      operationId: ListRuns
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity managing the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Filter by bookmarks.
        explode: true
        in: query
        name: bookmarks
        required: false
        schema:
          type: boolean
        style: form
      - description: Mode of the search.
        explode: true
        in: query
        name: mode
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListRunsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List runs
      tags:
      - RunsV1
      x-accepts: application/json
  /api/v1/{owner}/{name}/runs/approve:
    post:
      operationId: ApproveRuns
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity under namespace
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Uuids'
        description: Uuids of the entities
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Approve runs
      tags:
      - RunsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/{owner}/{name}/runs/archive:
    post:
      operationId: ArchiveRuns
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity under namespace
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Uuids'
        description: Uuids of the entities
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Archive runs
      tags:
      - RunsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/{owner}/{name}/runs/bookmark:
    post:
      operationId: BookmarkRuns
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity under namespace
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Uuids'
        description: Uuids of the entities
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Bookmark runs
      tags:
      - RunsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/{owner}/{name}/runs/delete:
    delete:
      operationId: DeleteRuns
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity under namespace
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Uuids'
        description: Uuids of the entities
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Delete runs
      tags:
      - RunsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/{owner}/{name}/runs/invalidate:
    post:
      operationId: InvalidateRuns
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity under namespace
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Uuids'
        description: Uuids of the entities
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Invalidate runs
      tags:
      - RunsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/{owner}/{name}/runs/lineage/artifacts:
    get:
      operationId: GetRunsArtifactsLineage
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity managing the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Filter by bookmarks.
        explode: true
        in: query
        name: bookmarks
        required: false
        schema:
          type: boolean
        style: form
      - description: Mode of the search.
        explode: true
        in: query
        name: mode
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListRunArtifactsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get runs artifacts lineage
      tags:
      - RunsV1
      x-accepts: application/json
  /api/v1/{owner}/{name}/runs/restore:
    post:
      operationId: RestoreRuns
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity under namespace
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Uuids'
        description: Uuids of the entities
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Restore runs
      tags:
      - RunsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/{owner}/{name}/runs/skip:
    post:
      operationId: SkipRuns
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity under namespace
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Uuids'
        description: Uuids of the entities
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Skip runs
      tags:
      - RunsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/{owner}/{name}/runs/stop:
    post:
      operationId: StopRuns
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity under namespace
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Uuids'
        description: Uuids of the entities
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Stop runs
      tags:
      - RunsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/{owner}/{name}/runs/tag:
    post:
      operationId: TagRuns
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity under namespace
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1EntitiesTags'
        description: Data
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Tag runs
      tags:
      - RunsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/{owner}/{name}/runs/transfer:
    post:
      operationId: TransferRuns
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity under namespace
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1EntitiesTransfer'
        description: Data
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Transfer runs
      tags:
      - RunsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/{owner}/{name}/searches:
    get:
      operationId: ListProjectSearches
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity managing the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Filter by bookmarks.
        explode: true
        in: query
        name: bookmarks
        required: false
        schema:
          type: boolean
        style: form
      - description: Mode of the search.
        explode: true
        in: query
        name: mode
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListSearchesResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List project searches
      tags:
      - ProjectSearchesV1
      x-accepts: application/json
  /api/v1/{owner}/{name}/searches/names:
    get:
      operationId: ListProjectSearchNames
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity managing the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Filter by bookmarks.
        explode: true
        in: query
        name: bookmarks
        required: false
        schema:
          type: boolean
        style: form
      - description: Mode of the search.
        explode: true
        in: query
        name: mode
        required: false
        schema:
          type: string
        style: form
      - description: No pagination.
        explode: true
        in: query
        name: no_page
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListSearchesResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List project search names
      tags:
      - ProjectSearchesV1
      x-accepts: application/json
  /api/v1/{owner}/{name}/settings:
    get:
      operationId: GetProjectSettings
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Component under namespace
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ProjectSettings'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get Project settings
      tags:
      - ProjectsV1
      x-accepts: application/json
  /api/v1/{owner}/{name}/stats:
    get:
      operationId: GetProjectStats
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity managing the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination offset.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Limit size.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Sort to order the search.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query filter the search.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Filter by bookmarks.
        explode: true
        in: query
        name: bookmarks
        required: false
        schema:
          type: boolean
        style: form
      - description: Stats Mode.
        explode: true
        in: query
        name: mode
        required: false
        schema:
          type: string
        style: form
      - description: Stats Kind.
        explode: true
        in: query
        name: kind
        required: false
        schema:
          type: string
        style: form
      - description: Stats aggregate.
        explode: true
        in: query
        name: aggregate
        required: false
        schema:
          type: string
        style: form
      - description: Stats group.
        explode: true
        in: query
        name: groupby
        required: false
        schema:
          type: string
        style: form
      - description: Stats trunc.
        explode: true
        in: query
        name: trunc
        required: false
        schema:
          type: string
        style: form
      - description: Stats start date.
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          type: string
        style: form
      - description: Stats end date.
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          type: string
        style: form
      - description: Stats boundary.
        explode: true
        in: query
        name: boundary
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get project stats
      tags:
      - ProjectsV1
      x-accepts: application/json
  /api/v1/{owner}/{name}/unbookmark:
    delete:
      operationId: UnbookmarkProject
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Component under namespace
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Unbookmark project
      tags:
      - ProjectsV1
      x-accepts: application/json
  /api/v1/{owner}/{project.name}:
    patch:
      operationId: PatchProject
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Required name
        explode: false
        in: path
        name: project.name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Project'
        description: Project body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Project'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Patch project
      tags:
      - ProjectsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: UpdateProject
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Required name
        explode: false
        in: path
        name: project.name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Project'
        description: Project body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Project'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update project
      tags:
      - ProjectsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/{owner}/{project}/dashboards:
    post:
      operationId: CreateProjectDashboard
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Project under namespace
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Dashboard'
        description: Dashboard body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Dashboard'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Create project dashboard
      tags:
      - ProjectDashboardsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/{owner}/{project}/dashboards/{dashboard.uuid}:
    patch:
      operationId: PatchProjectDashboard
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Project under namespace
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: UUID
        explode: false
        in: path
        name: dashboard.uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Dashboard'
        description: Dashboard body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Dashboard'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Patch project dashboard
      tags:
      - ProjectDashboardsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: UpdateProjectDashboard
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Project under namespace
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: UUID
        explode: false
        in: path
        name: dashboard.uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Dashboard'
        description: Dashboard body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Dashboard'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update project dashboard
      tags:
      - ProjectDashboardsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/{owner}/{project}/runs:
    post:
      operationId: CreateRun
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Project where the run will be assigned
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1OperationBody'
        description: operation object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Run'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Create new run
      tags:
      - RunsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/{owner}/{project}/runs/sync:
    post:
      operationId: SyncRun
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Project where the run will be assigned
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Run'
        description: Run object
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Sync offline run
      tags:
      - RunsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/{owner}/{project}/runs/{run.uuid}:
    patch:
      operationId: PatchRun
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Project where the run will be assigned
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: UUID
        explode: false
        in: path
        name: run.uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Run'
        description: Run object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Run'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Patch run
      tags:
      - RunsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: UpdateRun
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Project where the run will be assigned
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: UUID
        explode: false
        in: path
        name: run.uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Run'
        description: Run object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Run'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update run
      tags:
      - RunsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/{owner}/{project}/runs/{run.uuid}/copy:
    post:
      operationId: CopyRun
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Project where the run will be assigned
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: UUID
        explode: false
        in: path
        name: run.uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Run'
        description: Run object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Run'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Restart run with copy
      tags:
      - RunsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/{owner}/{project}/runs/{run.uuid}/restart:
    post:
      operationId: RestartRun
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Project where the run will be assigned
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: UUID
        explode: false
        in: path
        name: run.uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Run'
        description: Run object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Run'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Restart run
      tags:
      - RunsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/{owner}/{project}/runs/{run.uuid}/resume:
    post:
      operationId: ResumeRun
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Project where the run will be assigned
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: UUID
        explode: false
        in: path
        name: run.uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Run'
        description: Run object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Run'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Resume run
      tags:
      - RunsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/{owner}/{project}/runs/{run.uuid}/transfer:
    post:
      operationId: TransferRun
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Project where the run will be assigned
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: UUID
        explode: false
        in: path
        name: run.uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Run'
        description: Run object
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Transfer run
      tags:
      - RunsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/{owner}/{project}/runs/{uuid}/lineage/artifacts:
    post:
      operationId: CreateRunArtifactsLineage
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Project where the run will be assigned
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1RunArtifacts'
        description: Run Artifacts
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Create bulk run artifacts lineage
      tags:
      - RunsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/{owner}/{project}/runs/{uuid}/lineage/artifacts/{name}:
    delete:
      operationId: DeleteRunArtifactLineage
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Project where the run will be assigned
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      - description: Artifact name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: namespace.
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Delete run artifact lineage
      tags:
      - RunsV1
      x-accepts: application/json
    get:
      operationId: GetRunArtifactLineage
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Project where the run will be assigned
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      - description: Artifact name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: namespace.
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1RunArtifact'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get run artifacts lineage
      tags:
      - RunsV1
      x-accepts: application/json
  /api/v1/{owner}/{project}/runs/{uuid}/lineage/edges:
    post:
      operationId: SetRunEdgesLineage
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Project
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: Run uuid
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1RunEdgesGraph'
        description: Run edges graph
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Set run edges graph lineage
      tags:
      - RunsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/{owner}/{project}/runs/{uuid}/statuses:
    post:
      operationId: CreateRunStatus
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Project where the run will be assigned
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1EntityStatusBodyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Status'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Create new run status
      tags:
      - RunsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/{owner}/{project}/searches:
    post:
      operationId: CreateProjectSearch
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Project under namespace
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Search'
        description: Search body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Search'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Create project search
      tags:
      - ProjectSearchesV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/{owner}/{project}/searches/{search.uuid}:
    patch:
      operationId: PatchProjectSearch
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Project under namespace
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: UUID
        explode: false
        in: path
        name: search.uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Search'
        description: Search body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Search'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Patch project search
      tags:
      - ProjectSearchesV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: UpdateProjectSearch
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Project under namespace
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: UUID
        explode: false
        in: path
        name: search.uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Search'
        description: Search body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Search'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update project search
      tags:
      - ProjectSearchesV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/{owner}/{project}/settings:
    patch:
      operationId: PatchProjectSettings
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Project name
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ProjectSettings'
        description: Project settings body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ProjectSettings'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Patch project settings
      tags:
      - ProjectsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: UpdateProjectSettings
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Project name
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ProjectSettings'
        description: Project settings body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ProjectSettings'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update project settings
      tags:
      - ProjectsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/{owner}/{project}/versions/{version.kind}:
    post:
      operationId: CreateVersion
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Project name
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: Optional kind to tell the kind of this version
        explode: false
        in: path
        name: version.kind
        required: true
        schema:
          enum:
          - component
          - model
          - artifact
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ProjectVersion'
        description: Project version body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ProjectVersion'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Create version
      tags:
      - ProjectsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/{owner}/{project}/versions/{version.kind}/{version.name}:
    patch:
      operationId: PatchVersion
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Project name
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: Optional kind to tell the kind of this version
        explode: false
        in: path
        name: version.kind
        required: true
        schema:
          enum:
          - component
          - model
          - artifact
          type: string
        style: simple
      - description: "Optional component name, should be a valid fully qualified value:\
          \ name[:version]"
        explode: false
        in: path
        name: version.name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ProjectVersion'
        description: Project version body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ProjectVersion'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Patch version
      tags:
      - ProjectsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: UpdateVersion
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Project name
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: Optional kind to tell the kind of this version
        explode: false
        in: path
        name: version.kind
        required: true
        schema:
          enum:
          - component
          - model
          - artifact
          type: string
        style: simple
      - description: "Optional component name, should be a valid fully qualified value:\
          \ name[:version]"
        explode: false
        in: path
        name: version.name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ProjectVersion'
        description: Project version body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ProjectVersion'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update version
      tags:
      - ProjectsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/{owner}/{project}/versions/{version.kind}/{version.name}/transfer:
    post:
      operationId: TransferVersion
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Project name
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: Optional kind to tell the kind of this version
        explode: false
        in: path
        name: version.kind
        required: true
        schema:
          enum:
          - component
          - model
          - artifact
          type: string
        style: simple
      - description: "Optional component name, should be a valid fully qualified value:\
          \ name[:version]"
        explode: false
        in: path
        name: version.name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ProjectVersion'
        description: Project version body
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Transfer version
      tags:
      - ProjectsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/{owner}/{team}/projects/create:
    post:
      operationId: CreateTeamProject
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Team
        explode: false
        in: path
        name: team
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Project'
        description: Project body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Project'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Create new project via team space
      tags:
      - ProjectsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /internal/v1/{namespace}/{owner}/agents/{uuid}/collect:
    post:
      operationId: CollectAgentData
      parameters:
      - description: namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: collect agent
      tags:
      - AgentsV1
      x-accepts: application/json
  /internal/v1/{namespace}/{owner}/{project}/runs/{uuid}/{kind}/logs:
    post:
      operationId: CollectRunLogs
      parameters:
      - explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Project where the run will be assigned
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      - description: Kind of the entity
        explode: false
        in: path
        name: kind
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Internal API to collect run logs
      tags:
      - RunsV1
      x-accepts: application/json
  /schemas:
    get:
      operationId: NoOp
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Schemas'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: NoOp
      tags:
      - SchemasV1
      x-accepts: application/json
  /streams/v1/{namespace}/orgs/{owner}/runs/multi/events/{kind}:
    get:
      operationId: GetOrganizationMultiRunEvents
      parameters:
      - description: namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: The artifact kind
        explode: false
        in: path
        name: kind
        required: true
        schema:
          enum:
          - model
          - audio
          - video
          - histogram
          - image
          - tensor
          - dataframe
          - chart
          - csv
          - tsv
          - psv
          - ssv
          - metric
          - env
          - html
          - text
          - file
          - dir
          - dockerfile
          - docker_image
          - data
          - coderef
          - table
          - tensorboard
          - curve
          - confusion
          - analysis
          - iteration
          - markdown
          - system
          - span
          - artifact
          type: string
        style: simple
      - description: Entity where the run will be assigned.
        explode: true
        in: query
        name: entity
        required: false
        schema:
          type: string
        style: form
      - description: Names query param.
        explode: true
        in: query
        name: names
        required: false
        schema:
          type: string
        style: form
      - description: Runs query param.
        explode: true
        in: query
        name: runs
        required: false
        schema:
          type: string
        style: form
      - description: Orient query param.
        explode: true
        in: query
        name: orient
        required: false
        schema:
          type: string
        style: form
      - description: Force query param.
        explode: true
        in: query
        name: force
        required: false
        schema:
          type: boolean
        style: form
      - description: Sample query param.
        explode: true
        in: query
        name: sample
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Connection to use.
        explode: true
        in: query
        name: connection
        required: false
        schema:
          type: string
        style: form
      - description: Optional status.
        explode: true
        in: query
        name: status
        required: false
        schema:
          default: created
          enum:
          - created
          - resuming
          - on_schedule
          - compiled
          - queued
          - scheduled
          - starting
          - running
          - processing
          - stopping
          - failed
          - stopped
          - succeeded
          - skipped
          - warning
          - unschedulable
          - upstream_failed
          - retrying
          - unknown
          - done
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1MultiEventsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get multi runs events
      tags:
      - OrganizationsV1
      x-accepts: application/json
  /streams/v1/{namespace}/orgs/{owner}/runs/multi/importance:
    post:
      operationId: GetOrganizationMultiRunImportance
      parameters:
      - description: namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity where the run will be assigned.
        explode: true
        in: query
        name: entity
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: Params/Metrics data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1MultiEventsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get multi run importance
      tags:
      - OrganizationsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /streams/v1/{namespace}/orgs/{owner}/teams/{entity}/runs/multi/events/{kind}:
    get:
      operationId: GetTeamMultiRunEvents
      parameters:
      - description: namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity where the run will be assigned
        explode: false
        in: path
        name: entity
        required: true
        schema:
          type: string
        style: simple
      - description: The artifact kind
        explode: false
        in: path
        name: kind
        required: true
        schema:
          enum:
          - model
          - audio
          - video
          - histogram
          - image
          - tensor
          - dataframe
          - chart
          - csv
          - tsv
          - psv
          - ssv
          - metric
          - env
          - html
          - text
          - file
          - dir
          - dockerfile
          - docker_image
          - data
          - coderef
          - table
          - tensorboard
          - curve
          - confusion
          - analysis
          - iteration
          - markdown
          - system
          - span
          - artifact
          type: string
        style: simple
      - description: Names query param.
        explode: true
        in: query
        name: names
        required: false
        schema:
          type: string
        style: form
      - description: Runs query param.
        explode: true
        in: query
        name: runs
        required: false
        schema:
          type: string
        style: form
      - description: Orient query param.
        explode: true
        in: query
        name: orient
        required: false
        schema:
          type: string
        style: form
      - description: Force query param.
        explode: true
        in: query
        name: force
        required: false
        schema:
          type: boolean
        style: form
      - description: Sample query param.
        explode: true
        in: query
        name: sample
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Connection to use.
        explode: true
        in: query
        name: connection
        required: false
        schema:
          type: string
        style: form
      - description: Optional status.
        explode: true
        in: query
        name: status
        required: false
        schema:
          default: created
          enum:
          - created
          - resuming
          - on_schedule
          - compiled
          - queued
          - scheduled
          - starting
          - running
          - processing
          - stopping
          - failed
          - stopped
          - succeeded
          - skipped
          - warning
          - unschedulable
          - upstream_failed
          - retrying
          - unknown
          - done
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1MultiEventsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get multi runs events
      tags:
      - TeamsV1
      x-accepts: application/json
  /streams/v1/{namespace}/orgs/{owner}/teams/{entity}/runs/multi/importance:
    post:
      operationId: GetTeamMultiRunImportance
      parameters:
      - description: namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity where the run will be assigned
        explode: false
        in: path
        name: entity
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: Params/Metrics data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1MultiEventsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get multi run importance
      tags:
      - TeamsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /streams/v1/{namespace}/{owner}/agents/{uuid}/k8s_inspect:
    get:
      operationId: InspectAgent
      parameters:
      - description: namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      - description: Service.
        explode: true
        in: query
        name: service
        required: false
        schema:
          type: string
        style: form
      - description: last_file.
        explode: true
        in: query
        name: last_file
        required: false
        schema:
          type: string
        style: form
      - description: Force query param.
        explode: true
        in: query
        name: force
        required: false
        schema:
          type: boolean
        style: form
      - description: Connection to use.
        explode: true
        in: query
        name: connection
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Inspect an agent's service full conditions
      tags:
      - AgentsV1
      x-accepts: application/json
  /streams/v1/{namespace}/{owner}/agents/{uuid}/logs:
    get:
      operationId: GetAgentLogs
      parameters:
      - description: namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      - description: Service.
        explode: true
        in: query
        name: service
        required: false
        schema:
          type: string
        style: form
      - description: last_file.
        explode: true
        in: query
        name: last_file
        required: false
        schema:
          type: string
        style: form
      - description: Force query param.
        explode: true
        in: query
        name: force
        required: false
        schema:
          type: boolean
        style: form
      - description: Connection to use.
        explode: true
        in: query
        name: connection
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Logs'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get run logs
      tags:
      - AgentsV1
      x-accepts: application/json
  /streams/v1/{namespace}/{owner}/{entity}/runs/multi/events/{kind}:
    get:
      operationId: GetMultiRunEvents
      parameters:
      - description: namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity where the run will be assigned
        explode: false
        in: path
        name: entity
        required: true
        schema:
          type: string
        style: simple
      - description: The artifact kind
        explode: false
        in: path
        name: kind
        required: true
        schema:
          enum:
          - model
          - audio
          - video
          - histogram
          - image
          - tensor
          - dataframe
          - chart
          - csv
          - tsv
          - psv
          - ssv
          - metric
          - env
          - html
          - text
          - file
          - dir
          - dockerfile
          - docker_image
          - data
          - coderef
          - table
          - tensorboard
          - curve
          - confusion
          - analysis
          - iteration
          - markdown
          - system
          - span
          - artifact
          type: string
        style: simple
      - description: Names query param.
        explode: true
        in: query
        name: names
        required: false
        schema:
          type: string
        style: form
      - description: Runs query param.
        explode: true
        in: query
        name: runs
        required: false
        schema:
          type: string
        style: form
      - description: Orient query param.
        explode: true
        in: query
        name: orient
        required: false
        schema:
          type: string
        style: form
      - description: Force query param.
        explode: true
        in: query
        name: force
        required: false
        schema:
          type: boolean
        style: form
      - description: Sample query param.
        explode: true
        in: query
        name: sample
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Connection to use.
        explode: true
        in: query
        name: connection
        required: false
        schema:
          type: string
        style: form
      - description: Optional status.
        explode: true
        in: query
        name: status
        required: false
        schema:
          default: created
          enum:
          - created
          - resuming
          - on_schedule
          - compiled
          - queued
          - scheduled
          - starting
          - running
          - processing
          - stopping
          - failed
          - stopped
          - succeeded
          - skipped
          - warning
          - unschedulable
          - upstream_failed
          - retrying
          - unknown
          - done
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1MultiEventsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get multi runs events
      tags:
      - RunsV1
      x-accepts: application/json
  /streams/v1/{namespace}/{owner}/{entity}/runs/multi/importance:
    post:
      operationId: GetMultiRunImportance
      parameters:
      - description: namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Entity where the run will be assigned
        explode: false
        in: path
        name: entity
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: Params/Metrics data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1MultiEventsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get multi run importance
      tags:
      - RunsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/artifact:
    delete:
      operationId: DeleteRunArtifact
      parameters:
      - description: namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Project where the run will be assigned
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      - description: Path query param.
        explode: true
        in: query
        name: path
        required: false
        schema:
          type: string
        style: form
      - description: Connection to use.
        explode: true
        in: query
        name: connection
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Delete run artifact
      tags:
      - RunsV1
      x-accepts: application/json
    get:
      operationId: GetRunArtifact
      parameters:
      - description: namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Project where the entity will be assigned
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: Unique integer identifier of the entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      - description: Artifact filepath.
        explode: true
        in: query
        name: path
        required: false
        schema:
          type: string
        style: form
      - description: Whether to stream the file.
        explode: true
        in: query
        name: stream
        required: false
        schema:
          type: boolean
        style: form
      - description: Whether to force reload.
        explode: true
        in: query
        name: force
        required: false
        schema:
          type: boolean
        style: form
      - description: Connection to use.
        explode: true
        in: query
        name: connection
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
      summary: Get run artifact
      tags:
      - RunsV1
      x-accepts: application/json
  /streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/artifacts:
    delete:
      operationId: DeleteRunArtifacts
      parameters:
      - description: namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Project where the run will be assigned
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      - description: Path query param.
        explode: true
        in: query
        name: path
        required: false
        schema:
          type: string
        style: form
      - description: Connection to use.
        explode: true
        in: query
        name: connection
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Delete run artifacts
      tags:
      - RunsV1
      x-accepts: application/json
    get:
      operationId: GetRunArtifacts
      parameters:
      - description: namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Project where the entity will be assigned
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: Unique integer identifier of the entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      - description: Artifact filepath.
        explode: true
        in: query
        name: path
        required: false
        schema:
          type: string
        style: form
      - description: Whether to force reload.
        explode: true
        in: query
        name: force
        required: false
        schema:
          type: boolean
        style: form
      - description: Connection to use.
        explode: true
        in: query
        name: connection
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
      summary: Get run artifacts
      tags:
      - RunsV1
      x-accepts: application/json
  /streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/artifacts/tree:
    get:
      operationId: GetRunArtifactsTree
      parameters:
      - description: namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Project where the run will be assigned
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      - description: Path query param.
        explode: true
        in: query
        name: path
        required: false
        schema:
          type: string
        style: form
      - description: Connection to use.
        explode: true
        in: query
        name: connection
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ArtifactTree'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get run artifacts tree
      tags:
      - RunsV1
      x-accepts: application/json
  /streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/events/{kind}:
    get:
      operationId: GetRunEvents
      parameters:
      - description: namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Project where the run will be assigned
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      - description: The artifact kind
        explode: false
        in: path
        name: kind
        required: true
        schema:
          enum:
          - model
          - audio
          - video
          - histogram
          - image
          - tensor
          - dataframe
          - chart
          - csv
          - tsv
          - psv
          - ssv
          - metric
          - env
          - html
          - text
          - file
          - dir
          - dockerfile
          - docker_image
          - data
          - coderef
          - table
          - tensorboard
          - curve
          - confusion
          - analysis
          - iteration
          - markdown
          - system
          - span
          - artifact
          type: string
        style: simple
      - description: Names query param.
        explode: true
        in: query
        name: names
        required: false
        schema:
          type: string
        style: form
      - description: Orient query param.
        explode: true
        in: query
        name: orient
        required: false
        schema:
          type: string
        style: form
      - description: Force query param.
        explode: true
        in: query
        name: force
        required: false
        schema:
          type: boolean
        style: form
      - description: Sample query param.
        explode: true
        in: query
        name: sample
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Connection to use.
        explode: true
        in: query
        name: connection
        required: false
        schema:
          type: string
        style: form
      - description: Optional status.
        explode: true
        in: query
        name: status
        required: false
        schema:
          default: created
          enum:
          - created
          - resuming
          - on_schedule
          - compiled
          - queued
          - scheduled
          - starting
          - running
          - processing
          - stopping
          - failed
          - stopped
          - succeeded
          - skipped
          - warning
          - unschedulable
          - upstream_failed
          - retrying
          - unknown
          - done
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1EventsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get run events
      tags:
      - RunsV1
      x-accepts: application/json
  /streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/k8s_inspect:
    get:
      operationId: InspectRun
      parameters:
      - description: namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Project where the run will be assigned
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      - description: Names query param.
        explode: true
        in: query
        name: names
        required: false
        schema:
          type: string
        style: form
      - description: Query param flag to tail the values.
        explode: true
        in: query
        name: tail
        required: false
        schema:
          type: boolean
        style: form
      - description: Force query param.
        explode: true
        in: query
        name: force
        required: false
        schema:
          type: boolean
        style: form
      - description: Sample query param.
        explode: true
        in: query
        name: sample
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Connection to use.
        explode: true
        in: query
        name: connection
        required: false
        schema:
          type: string
        style: form
      - description: Optional status.
        explode: true
        in: query
        name: status
        required: false
        schema:
          default: created
          enum:
          - created
          - resuming
          - on_schedule
          - compiled
          - queued
          - scheduled
          - starting
          - running
          - processing
          - stopping
          - failed
          - stopped
          - succeeded
          - skipped
          - warning
          - unschedulable
          - upstream_failed
          - retrying
          - unknown
          - done
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Inspect an active run full conditions
      tags:
      - RunsV1
      x-accepts: application/json
  /streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/logs:
    get:
      operationId: GetRunLogs
      parameters:
      - explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Project where the run will be assigned
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      - description: last time.
        explode: true
        in: query
        name: last_time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: last file.
        explode: true
        in: query
        name: last_file
        required: false
        schema:
          type: string
        style: form
      - description: Force query param.
        explode: true
        in: query
        name: force
        required: false
        schema:
          type: boolean
        style: form
      - description: Connection to use.
        explode: true
        in: query
        name: connection
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Logs'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get run logs
      tags:
      - RunsV1
      x-accepts: application/json
  /streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/notify:
    post:
      operationId: NotifyRunStatus
      parameters:
      - description: "Na,espace"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Project where the run will be assigned
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1EntityNotificationBody'
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Notify run status
      tags:
      - RunsV1
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts: application/json
  /streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/resources:
    get:
      operationId: GetRunResources
      parameters:
      - description: namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Project where the run will be assigned
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: Uuid identifier of the entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      - description: Names query param.
        explode: true
        in: query
        name: names
        required: false
        schema:
          type: string
        style: form
      - description: Query param flag to tail the values.
        explode: true
        in: query
        name: tail
        required: false
        schema:
          type: boolean
        style: form
      - description: Force query param.
        explode: true
        in: query
        name: force
        required: false
        schema:
          type: boolean
        style: form
      - description: Sample query param.
        explode: true
        in: query
        name: sample
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Connection to use.
        explode: true
        in: query
        name: connection
        required: false
        schema:
          type: string
        style: form
      - description: Optional status.
        explode: true
        in: query
        name: status
        required: false
        schema:
          default: created
          enum:
          - created
          - resuming
          - on_schedule
          - compiled
          - queued
          - scheduled
          - starting
          - running
          - processing
          - stopping
          - failed
          - stopped
          - succeeded
          - skipped
          - warning
          - unschedulable
          - upstream_failed
          - retrying
          - unknown
          - done
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1EventsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get run resources events
      tags:
      - RunsV1
      x-accepts: application/json
  /api/v1/catalogs/{owner}/artifacts/{uuid}/upload:
    post:
      operationId: UploadArtifact
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Unique integer identifier of the entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      - description: File path query params.
        explode: true
        in: query
        name: path
        required: false
        schema:
          type: string
        style: form
      - description: File path query params.
        explode: true
        in: query
        name: overwrite
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/uuid_upload_body'
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
      summary: Upload artifact to a store
      tags:
      - ArtifactsStoresV1
      x-content-type: multipart/form-data
      x-accepts: application/json
  /api/v1/{owner}/{project}/artifacts/{uuid}/upload:
    post:
      operationId: UploadProjectArtifact
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Project having access to the store
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: Unique integer identifier of the entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      - description: File path query params.
        explode: true
        in: query
        name: path
        required: false
        schema:
          type: string
        style: form
      - description: File path query params.
        explode: true
        in: query
        name: overwrite
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/uuid_upload_body_1'
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
      summary: Upload artifact to a store via project access
      tags:
      - ProjectsV1
      x-content-type: multipart/form-data
      x-accepts: application/json
  /api/v1/{owner}/{project}/runs/{uuid}/logs/upload:
    post:
      operationId: UploadRunLogs
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Project having access to the store
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: Unique integer identifier of the entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      - description: File path query params.
        explode: true
        in: query
        name: path
        required: false
        schema:
          type: string
        style: form
      - description: File path query params.
        explode: true
        in: query
        name: overwrite
        required: false
        schema:
          type: boolean
        style: form
      - description: Connection to use.
        explode: true
        in: query
        name: connection
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/logs_upload_body'
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
      summary: Upload a logs file to a store via run access
      tags:
      - RunsV1
      x-content-type: multipart/form-data
      x-accepts: application/json
  /api/v1/{owner}/{project}/runs/{uuid}/artifacts/upload:
    post:
      operationId: UploadRunArtifact
      parameters:
      - description: Owner of the namespace
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: Project having access to the store
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: Unique integer identifier of the entity
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      - description: File path query params.
        explode: true
        in: query
        name: path
        required: false
        schema:
          type: string
        style: form
      - description: File path query params.
        explode: true
        in: query
        name: overwrite
        required: false
        schema:
          type: boolean
        style: form
      - description: Connection to use.
        explode: true
        in: query
        name: connection
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/artifacts_upload_body'
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
      summary: Upload an artifact file to a store via run access
      tags:
      - RunsV1
      x-content-type: multipart/form-data
      x-accepts: application/json
components:
  schemas:
    AgentStateResponseAgentState:
      example:
        deleting: "{}"
        checks: "{}"
        apply: "{}"
        stopping: "{}"
        schedules: "{}"
        queued: "{}"
        watchdogs: "{}"
        hooks: "{}"
        tuners: "{}"
        full: true
      properties:
        schedules:
          properties: {}
          title: List of schdules runs
          type: object
        hooks:
          properties: {}
          title: List of hooks runs
          type: object
        watchdogs:
          properties: {}
          title: List of watchdogs runs
          type: object
        tuners:
          properties: {}
          title: List of tuners runs
          type: object
        queued:
          properties: {}
          title: List of queued runs
          type: object
        stopping:
          properties: {}
          title: List of stopping runs
          type: object
        deleting:
          properties: {}
          title: List of deleting runs
          type: object
        apply:
          properties: {}
          title: List of apply runs
          type: object
        checks:
          properties: {}
          title: List of run checks
          type: object
        full:
          title: A flag to tell the agent that the queues are still full
          type: boolean
      type: object
    MXJobMode:
      default: MXTrain
      enum:
      - MXTrain
      - MXTune
      title: |-
        - MXTrain: Train Mode, requires Server, Scheduler, Worker
         - MXTune: Tune Mode, requires Tuner
      type: string
    SearchView:
      default: any
      description: |-
        - any: Any view
         - runs: Runs view
         - selection: Selection view
         - analytics: Analytics view
         - components: Components view
         - models: Models view
         - artifacts: Artifacts view
         - projects: Projects view
      enum:
      - any
      - runs
      - selection
      - analytics
      - components
      - models
      - artifacts
      - projects
      title: Search view
      type: string
    protobufAny:
      description: |-
        `Any` contains an arbitrary serialized protocol buffer message along with a
        URL that describes the type of the serialized message.

        Protobuf library provides support to pack/unpack Any values in the form
        of utility functions or additional generated methods of the Any type.

        Example 1: Pack and unpack a message in C++.

            Foo foo = ...;
            Any any;
            any.PackFrom(foo);
            ...
            if (any.UnpackTo(&foo)) {
              ...
            }

        Example 2: Pack and unpack a message in Java.

            Foo foo = ...;
            Any any = Any.pack(foo);
            ...
            if (any.is(Foo.class)) {
              foo = any.unpack(Foo.class);
            }
            // or ...
            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
              foo = any.unpack(Foo.getDefaultInstance());
            }

        Example 3: Pack and unpack a message in Python.

            foo = Foo(...)
            any = Any()
            any.Pack(foo)
            ...
            if any.Is(Foo.DESCRIPTOR):
              any.Unpack(foo)
              ...

        Example 4: Pack and unpack a message in Go

             foo := &pb.Foo{...}
             any, err := anypb.New(foo)
             if err != nil {
               ...
             }
             ...
             foo := &pb.Foo{}
             if err := any.UnmarshalTo(foo); err != nil {
               ...
             }

        The pack methods provided by protobuf library will by default use
        'type.googleapis.com/full.type.name' as the type URL and the unpack
        methods only use the fully qualified type name after the last '/'
        in the type URL, for example "foo.bar.com/x/y.z" will yield type
        name "y.z".

        JSON

        The JSON representation of an `Any` value uses the regular
        representation of the deserialized, embedded message, with an
        additional field `@type` which contains the type URL. Example:

            package google.profile;
            message Person {
              string first_name = 1;
              string last_name = 2;
            }

            {
              "@type": "type.googleapis.com/google.profile.Person",
              "firstName": <string>,
              "lastName": <string>
            }

        If the embedded message type is well-known and has a custom JSON
        representation, that representation will be embedded adding a field
        `value` which holds the custom JSON in addition to the `@type`
        field. Example (for message [google.protobuf.Duration][]):

            {
              "@type": "type.googleapis.com/google.protobuf.Duration",
              "value": "1.212s"
            }
      properties:
        type_url:
          description: |-
            A URL/resource name that uniquely identifies the type of the serialized
            protocol buffer message. This string must contain at least
            one "/" character. The last segment of the URL's path must represent
            the fully qualified name of the type (as in
            `path/google.protobuf.Duration`). The name should be in a canonical form
            (e.g., leading "." is not accepted).

            In practice, teams usually precompile into the binary all types that they
            expect it to use in the context of Any. However, for URLs which use the
            scheme `http`, `https`, or no scheme, one can optionally set up a type
            server that maps type URLs to message definitions as follows:

            * If no scheme is provided, `https` is assumed.
            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
              value in binary format, or produce an error.
            * Applications are allowed to cache lookup results based on the
              URL, or have them precompiled into a binary to avoid any
              lookup. Therefore, binary compatibility needs to be preserved
              on changes to types. (Use versioned type names to manage
              breaking changes.)

            Note: this functionality is not currently available in the official
            protobuf release, and it is not used for type URLs beginning with
            type.googleapis.com.

            Schemes other than `http`, `https` (or the empty scheme) might be
            used with implementation specific semantics.
          type: string
        value:
          description: Must be a valid serialized protocol buffer of the above specified
            type.
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
      type: object
    protobufNullValue:
      default: NULL_VALUE
      description: |-
        `NullValue` is a singleton enumeration to represent the null value for the
        `Value` type union.

         The JSON representation for `NullValue` is JSON `null`.

         - NULL_VALUE: Null value.
      enum:
      - NULL_VALUE
      type: string
    runtimeError:
      properties:
        error:
          type: string
        code:
          format: int32
          type: integer
        message:
          type: string
        details:
          items:
            $ref: '#/components/schemas/protobufAny'
          type: array
      type: object
    v1Activity:
      example:
        actor: actor
        owner: owner
        event_action: event_action
        object_name: object_name
        created_at: 2000-01-23T04:56:07.000+00:00
        object_uuid: object_uuid
        object_parent: object_parent
        event_subject: event_subject
      properties:
        actor:
          title: Actor
          type: string
        owner:
          title: Owner
          type: string
        created_at:
          format: date-time
          title: Created at
          type: string
        event_action:
          title: Event action
          type: string
        event_subject:
          title: Event subject
          type: string
        object_name:
          title: Object name
          type: string
        object_uuid:
          title: Object uuid
          type: string
        object_parent:
          title: Object parent
          type: string
      title: Activity specification
      type: object
    v1Affinity:
      title: Placeholder for Affinity
      type: object
    v1Agent:
      example:
        settings: "{}"
        version_api: "{}"
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        live_state: 6
        is_replica: true
        uuid: uuid
        version: version
        is_ui_managed: true
        content: content
        tags:
        - tags
        - tags
        hostname: hostname
        updated_at: 2000-01-23T04:56:07.000+00:00
        stats: "{}"
        name: name
        namespace: namespace
        status_conditions:
        - reason: reason
          last_update_time: 2000-01-23T04:56:07.000+00:00
          meta_info: "{}"
          last_transition_time: 2000-01-23T04:56:07.000+00:00
          type: null
          message: message
          status: status
        - reason: reason
          last_update_time: 2000-01-23T04:56:07.000+00:00
          meta_info: "{}"
          last_transition_time: 2000-01-23T04:56:07.000+00:00
          type: null
          message: message
          status: status
        status: null
      properties:
        uuid:
          title: UUID
          type: string
        name:
          title: Name
          type: string
        description:
          title: Optional description
          type: string
        tags:
          items:
            type: string
          title: Optional tags of this entity
          type: array
        live_state:
          format: int32
          title: Current live state
          type: integer
        namespace:
          title: Namespace where the agent is deployed
          type: string
        version_api:
          properties: {}
          title: Optional version api
          type: object
        version:
          title: Agent version
          type: string
        content:
          title: Content of the agent config
          type: string
        created_at:
          format: date-time
          title: Optional time when the entity was created
          type: string
        updated_at:
          format: date-time
          title: Optional last time the entity was updated
          type: string
        status:
          $ref: '#/components/schemas/v1Statuses'
        status_conditions:
          items:
            $ref: '#/components/schemas/v1StatusCondition'
          title: The status conditions timeline
          type: array
        is_replica:
          title: Agent is in replica mode
          type: boolean
        is_ui_managed:
          title: Agent is updatable and managed from the UI
          type: boolean
        hostname:
          title: Agent hostname
          type: string
        settings:
          properties: {}
          title: Optional settings
          type: object
        stats:
          properties: {}
          title: Optional agent stats
          type: object
      title: Agent specification
      type: object
    v1AgentReconcileBodyRequest:
      properties:
        owner:
          title: Owner of the namespace
          type: string
        uuid:
          title: Uuid identifier of the entity
          type: string
        reconcile:
          properties: {}
          title: Reconcile reconcile
          type: object
      title: Request data to reconcile agent
      type: object
    v1AgentStateResponse:
      example:
        compatible_updates: "{}"
        live_state: 0
        state:
          deleting: "{}"
          checks: "{}"
          apply: "{}"
          stopping: "{}"
          schedules: "{}"
          queued: "{}"
          watchdogs: "{}"
          hooks: "{}"
          tuners: "{}"
          full: true
        status: null
      properties:
        status:
          $ref: '#/components/schemas/v1Statuses'
        state:
          $ref: '#/components/schemas/AgentStateResponseAgentState'
        live_state:
          format: int32
          type: integer
        compatible_updates:
          properties: {}
          type: object
      title: Contains the agents (queues/runs) state
      type: object
    v1AgentStatusBodyRequest:
      properties:
        owner:
          title: Owner of the namespace
          type: string
        uuid:
          title: Uuid identifier of the entity
          type: string
        condition:
          $ref: '#/components/schemas/v1StatusCondition'
      title: Request data to create/update agent status
      type: object
    v1AnalyticsSpec:
      example:
        view: view
        trunc: trunc
        groupby: groupby
        frequency: frequency
      properties:
        view:
          title: View
          type: string
        trunc:
          title: Trunc field
          type: string
        groupby:
          title: Groupby field
          type: string
        frequency:
          title: Stats frequency
          type: string
      title: Analytics spec definition
      type: object
    v1ArtifactKind:
      default: model
      description: |-
        - model: Model asset/event
         - audio: Audio asset/event
         - video: Vidio asset/event
         - histogram: Histogram asset/event
         - image: Image asset/event
         - tensor: Tensor asset/event
         - dataframe: Dataframe asset/event
         - chart: plotly/bokeh/vega chart
         - csv: Comma separated values
         - tsv: Tab separated values
         - psv: Pipe separated values
         - ssv: Space separated values
         - metric: Metric asset/event
         - env: Env file
         - html: HTML asset/event
         - text: Text asset/event
         - file: File asset/lineage
         - dir: Dir asset/lineage
         - dockerfile: Dockerfile asset
         - docker_image: Docker image
         - data: Data asset/event
         - coderef: Coderef lineage
         - table: Table asset/event
         - tensorboard: Tensorboard lineage
         - curve: Curve event
         - confusion: Confusion matrix event
         - analysis: Analysis lineage
         - iteration: Iteration lineage
         - markdown: Mardown event
         - system: System event
         - span: Trace/Span event
         - artifact: Generic artifact
      enum:
      - model
      - audio
      - video
      - histogram
      - image
      - tensor
      - dataframe
      - chart
      - csv
      - tsv
      - psv
      - ssv
      - metric
      - env
      - html
      - text
      - file
      - dir
      - dockerfile
      - docker_image
      - data
      - coderef
      - table
      - tensorboard
      - curve
      - confusion
      - analysis
      - iteration
      - markdown
      - system
      - span
      - artifact
      title: Artifact kind
      type: string
    v1ArtifactTree:
      example:
        is_done: true
        files:
          key: 0
        dirs:
        - dirs
        - dirs
      properties:
        files:
          additionalProperties:
            format: int32
            type: integer
          type: object
        dirs:
          items:
            type: string
          type: array
        is_done:
          type: boolean
      title: Artifact tree response
      type: object
    v1ArtifactsMount:
      example:
        paths:
        - paths
        - paths
        name: name
      properties:
        name:
          title: Name of the artifact(connection)
          type: string
        paths:
          items:
            type: string
          title: Paths to mount
          type: array
      title: Artifact mount specification
      type: object
    v1ArtifactsType:
      example:
        files:
        - "{}"
        - "{}"
        dirs:
        - "{}"
        - "{}"
        workers: 3
      properties:
        files:
          items:
            properties: {}
            type: object
          title: Optional files to initialize
          type: array
        dirs:
          items:
            properties: {}
            type: object
          title: Optional dirs to initialize
          type: array
        workers:
          format: int32
          title: Optional number of concurrent threads to use
          type: integer
      title: Artifacts type specification
      type: object
    v1Auth:
      example:
        token: token
      properties:
        token:
          title: token hash
          type: string
      title: Auth specification
      type: object
    v1AuthType:
      example:
        password: password
        user: user
      properties:
        user:
          title: Optional user
          type: string
        password:
          title: Optional password
          type: string
      title: Auth type specification
      type: object
    v1Bayes:
      example:
        maxIterations: 8
        tuner:
          presets:
          - presets
          - presets
          hubRef: hubRef
          namespace: namespace
          params:
            key:
              ref: ref
              toEnv: toEnv
              contextOnly: true
              connection: connection
              toInit: true
              value: "{}"
          queue: queue
        seed: 9
        metric:
          optimization: null
          name: name
        kind: bayes
        numInitialRuns: 6
        utilityFunction: "{}"
        params:
          key: "{}"
        earlyStopping:
        - "{}"
        - "{}"
        concurrency: 6
      properties:
        kind:
          default: bayes
          title: "Kind of matrix, should be equal to \"bayes\""
          type: string
        params:
          additionalProperties:
            properties: {}
            type: object
          title: Hyperparams/Space definition of params to traverse
          type: object
        numInitialRuns:
          format: int32
          title: Number of intial random observations to create
          type: integer
        maxIterations:
          format: int32
          title: Maximim number of iteration to produce new observations
          type: integer
        utilityFunction:
          properties: {}
          title: A utility function to use for the bayesian optimization
          type: object
        metric:
          $ref: '#/components/schemas/v1OptimizationMetric'
        seed:
          format: int32
          title: Seed for the random generator
          type: integer
        concurrency:
          format: int32
          title: Number of concurrent runs
          type: integer
        tuner:
          $ref: '#/components/schemas/v1Tuner'
        earlyStopping:
          items:
            properties: {}
            type: object
          title: "A list of Early stopping objects, accpets both metric and failure\
            \ early stopping mechanisms"
          type: array
      title: Matrix based on Bayesian Optimization
      type: object
    v1BucketConnection:
      example:
        bucket: bucket
      properties:
        bucket:
          title: Bucket
          type: string
      title: Bucket connection schema validation specification
      type: object
    v1Build:
      example:
        cache:
          disable: true
          io:
          - io
          - io
          ttl: 7
          sections:
          - sections
          - sections
        presets:
        - presets
        - presets
        runPatch: "{}"
        hubRef: hubRef
        namespace: namespace
        connection: connection
        patchStrategy: null
        params:
          key:
            ref: ref
            toEnv: toEnv
            contextOnly: true
            connection: connection
            toInit: true
            value: "{}"
        queue: queue
      properties:
        hubRef:
          title: Component name to use
          type: string
        connection:
          title: Connection to use
          type: string
        presets:
          items:
            type: string
          title: Optional list of presets to use for running this tuner
          type: array
        queue:
          title: Optional queue to use for scheduling the tuner
          type: string
        namespace:
          title: "Optional namespace to use, uses agent's namespace by default"
          type: string
        cache:
          $ref: '#/components/schemas/v1Cache'
        params:
          additionalProperties:
            $ref: '#/components/schemas/v1Param'
          title: Optional dict of params
          type: object
        runPatch:
          properties: {}
          title: Optional a run section to override the content of the run in the
            template
          type: object
        patchStrategy:
          $ref: '#/components/schemas/v1PatchStrategy'
      title: Build definition
      type: object
    v1Cache:
      example:
        disable: true
        io:
        - io
        - io
        ttl: 7
        sections:
        - sections
        - sections
      properties:
        disable:
          title: "Optional flag to disable cache, Cache is enabled by default"
          type: boolean
        ttl:
          format: int32
          title: |-
            Optional time to live for the cache before it gets invalidated automatically,
            the TTL is calculated based on the time the run starts
          type: integer
        io:
          items:
            type: string
          title: "Optional Inputs/Outputs' names to consider for the cache, default\
            \ behavior to consider all inputs/outputs"
          type: array
        sections:
          items:
            type: string
          title: "Optional sections to consider for the cache, default behavior to\
            \ consider container(command, args), init section, and connections section"
          type: array
      title: |-
        Cache specification
        Cache is calculated based on inputs state as well as component version if used
      type: object
    v1ClaimConnection:
      example:
        mountPath: mountPath
        kind: "{}"
        readOnly: true
        volumeClaim: volumeClaim
      properties:
        volumeClaim:
          title: Claim name
          type: string
        mountPath:
          title: Mount path
          type: string
        readOnly:
          title: Read Only
          type: boolean
        kind:
          type: object
      title: Claim connection schema validation specification
      type: object
    v1CleanPodPolicy:
      default: All
      enum:
      - All
      - Running
      - None
      title: CleanPodPolicy
      type: string
    v1Cloning:
      example:
        kind: null
        name: name
        uuid: uuid
      properties:
        uuid:
          title: Optional uuid of the original run
          type: string
        name:
          title: Optional name of the original run
          type: string
        kind:
          $ref: '#/components/schemas/v1CloningKind'
      type: object
    v1CloningKind:
      default: copy
      enum:
      - copy
      - restart
      - cache
      type: string
    v1Compatibility:
      example:
        cli:
          min: min
          latest: latest
        agent:
          min: min
          latest: latest
        ui:
          min: min
          latest: latest
        platform:
          min: min
          latest: latest
      properties:
        cli:
          $ref: '#/components/schemas/v1Version'
        platform:
          $ref: '#/components/schemas/v1Version'
        agent:
          $ref: '#/components/schemas/v1Version'
        ui:
          $ref: '#/components/schemas/v1Version'
      type: object
    v1CompiledOperation:
      example:
        joins:
          key:
            ref: ref
            offset: 0
            query: query
            limit: 4
            sort: sort
            params:
              key:
                toEnv: toEnv
                contextOnly: true
                connection: connection
                toInit: true
                value: value
        outputs:
        - delayValidation: true
          toEnv: toEnv
          description: description
          isOptional: true
          type: type
          isList: true
          isFlag: true
          argFormat: argFormat
          name: name
          options:
          - "{}"
          - "{}"
          connection: connection
          toInit: true
          value: "{}"
          validation:
            multipleOf: 0
            maxItems: 8
            excludes:
            - "{}"
            - "{}"
            keys:
            - keys
            - keys
            minLength: 5
            lt: 7
            maxDigits: 0
            containsKeys:
            - containsKeys
            - containsKeys
            gt: 1
            minItems: 6
            regex: regex
            contains:
            - "{}"
            - "{}"
            delay: true
            decimalPlaces: 7
            excludesKeys:
            - excludesKeys
            - excludesKeys
            minDigits: 9
            options:
            - "{}"
            - "{}"
            le: 9
            ge: 4
            maxLength: 4
        - delayValidation: true
          toEnv: toEnv
          description: description
          isOptional: true
          type: type
          isList: true
          isFlag: true
          argFormat: argFormat
          name: name
          options:
          - "{}"
          - "{}"
          connection: connection
          toInit: true
          value: "{}"
          validation:
            multipleOf: 0
            maxItems: 8
            excludes:
            - "{}"
            - "{}"
            keys:
            - keys
            - keys
            minLength: 5
            lt: 7
            maxDigits: 0
            containsKeys:
            - containsKeys
            - containsKeys
            gt: 1
            minItems: 6
            regex: regex
            contains:
            - "{}"
            - "{}"
            delay: true
            decimalPlaces: 7
            excludesKeys:
            - excludesKeys
            - excludesKeys
            minDigits: 9
            options:
            - "{}"
            - "{}"
            le: 9
            ge: 4
            maxLength: 4
        plugins:
          mountArtifactsStore: true
          syncStatuses: true
          auth: true
          collectResources: true
          collectLogs: true
          externalHost: true
          docker: true
          collectArtifacts: true
          logLevel: logLevel
          autoResume: true
          sidecar:
            sleepInterval: 5
            monitorSpec: true
            image: image
            imagePullPolicy: imagePullPolicy
            syncInterval: 3
            resources: "{}"
            monitorLogs: true
            imageTag: imageTag
          shm: true
          notifications:
          - trigger: null
            connections:
            - connections
            - connections
          - trigger: null
            connections:
            - connections
            - connections
        inputs:
        - delayValidation: true
          toEnv: toEnv
          description: description
          isOptional: true
          type: type
          isList: true
          isFlag: true
          argFormat: argFormat
          name: name
          options:
          - "{}"
          - "{}"
          connection: connection
          toInit: true
          value: "{}"
          validation:
            multipleOf: 0
            maxItems: 8
            excludes:
            - "{}"
            - "{}"
            keys:
            - keys
            - keys
            minLength: 5
            lt: 7
            maxDigits: 0
            containsKeys:
            - containsKeys
            - containsKeys
            gt: 1
            minItems: 6
            regex: regex
            contains:
            - "{}"
            - "{}"
            delay: true
            decimalPlaces: 7
            excludesKeys:
            - excludesKeys
            - excludesKeys
            minDigits: 9
            options:
            - "{}"
            - "{}"
            le: 9
            ge: 4
            maxLength: 4
        - delayValidation: true
          toEnv: toEnv
          description: description
          isOptional: true
          type: type
          isList: true
          isFlag: true
          argFormat: argFormat
          name: name
          options:
          - "{}"
          - "{}"
          connection: connection
          toInit: true
          value: "{}"
          validation:
            multipleOf: 0
            maxItems: 8
            excludes:
            - "{}"
            - "{}"
            keys:
            - keys
            - keys
            minLength: 5
            lt: 7
            maxDigits: 0
            containsKeys:
            - containsKeys
            - containsKeys
            gt: 1
            minItems: 6
            regex: regex
            contains:
            - "{}"
            - "{}"
            delay: true
            decimalPlaces: 7
            excludesKeys:
            - excludesKeys
            - excludesKeys
            minDigits: 9
            options:
            - "{}"
            - "{}"
            le: 9
            ge: 4
            maxLength: 4
        description: description
        run: "{}"
        contexts:
        - delayValidation: true
          toEnv: toEnv
          description: description
          isOptional: true
          type: type
          isList: true
          isFlag: true
          argFormat: argFormat
          name: name
          options:
          - "{}"
          - "{}"
          connection: connection
          toInit: true
          value: "{}"
          validation:
            multipleOf: 0
            maxItems: 8
            excludes:
            - "{}"
            - "{}"
            keys:
            - keys
            - keys
            minLength: 5
            lt: 7
            maxDigits: 0
            containsKeys:
            - containsKeys
            - containsKeys
            gt: 1
            minItems: 6
            regex: regex
            contains:
            - "{}"
            - "{}"
            delay: true
            decimalPlaces: 7
            excludesKeys:
            - excludesKeys
            - excludesKeys
            minDigits: 9
            options:
            - "{}"
            - "{}"
            le: 9
            ge: 4
            maxLength: 4
        - delayValidation: true
          toEnv: toEnv
          description: description
          isOptional: true
          type: type
          isList: true
          isFlag: true
          argFormat: argFormat
          name: name
          options:
          - "{}"
          - "{}"
          connection: connection
          toInit: true
          value: "{}"
          validation:
            multipleOf: 0
            maxItems: 8
            excludes:
            - "{}"
            - "{}"
            keys:
            - keys
            - keys
            minLength: 5
            lt: 7
            maxDigits: 0
            containsKeys:
            - containsKeys
            - containsKeys
            gt: 1
            minItems: 6
            regex: regex
            contains:
            - "{}"
            - "{}"
            delay: true
            decimalPlaces: 7
            excludesKeys:
            - excludesKeys
            - excludesKeys
            minDigits: 9
            options:
            - "{}"
            - "{}"
            le: 9
            ge: 4
            maxLength: 4
        matrix: "{}"
        isApproved: true
        hooks:
        - presets:
          - presets
          - presets
          hubRef: hubRef
          namespace: namespace
          disableDefaults: true
          connection: connection
          trigger: null
          conditions: conditions
          params:
            key:
              ref: ref
              toEnv: toEnv
              contextOnly: true
              connection: connection
              toInit: true
              value: "{}"
          queue: queue
        - presets:
          - presets
          - presets
          hubRef: hubRef
          namespace: namespace
          disableDefaults: true
          connection: connection
          trigger: null
          conditions: conditions
          params:
            key:
              ref: ref
              toEnv: toEnv
              contextOnly: true
              connection: connection
              toInit: true
              value: "{}"
          queue: queue
        events:
        - ref: ref
          kinds:
          - null
          - null
        - ref: ref
          kinds:
          - null
          - null
        termination:
          maxRetries: 3
          ttl: 3
          timeout: 7
        cache:
          disable: true
          io:
          - io
          - io
          ttl: 7
          sections:
          - sections
          - sections
        cost: 3.7814124
        kind: kind
        trigger: null
        version: 7.6068635
        tags:
        - tags
        - tags
        dependencies:
        - dependencies
        - dependencies
        schedule: "{}"
        presets:
        - presets
        - presets
        skipOnUpstreamSkip: true
        build:
          cache:
            disable: true
            io:
            - io
            - io
            ttl: 7
            sections:
            - sections
            - sections
          presets:
          - presets
          - presets
          runPatch: "{}"
          hubRef: hubRef
          namespace: namespace
          connection: connection
          patchStrategy: null
          params:
            key:
              ref: ref
              toEnv: toEnv
              contextOnly: true
              connection: connection
              toInit: true
              value: "{}"
          queue: queue
        name: name
        namespace: namespace
        conditions: conditions
        queue: queue
      properties:
        version:
          format: float
          title: Spec version
          type: number
        kind:
          title: "Optional component kind, should be equal to 'operation'"
          type: string
        name:
          title: "Optional component name, should a valid slug"
          type: string
        description:
          title: Optional component description
          type: string
        tags:
          items:
            type: string
          title: Optional component tags
          type: array
        presets:
          items:
            type: string
          title: Optional presets to use for running this component
          type: array
        queue:
          title: Optional queue to use for running this component
          type: string
        cache:
          $ref: '#/components/schemas/v1Cache'
        namespace:
          title: "Optional namespace to use, uses agent's namespace by default"
          type: string
        termination:
          $ref: '#/components/schemas/v1Termination'
        plugins:
          $ref: '#/components/schemas/v1Plugins'
        schedule:
          properties: {}
          title: "Optional schedule section, must be a valid Schedule option (Cron/Interval/Repeatable/ExactTime)"
          type: object
        events:
          items:
            $ref: '#/components/schemas/v1EventTrigger'
          title: "Optional events section, must be a valid List of EventTrigger option\
            \ (Run/Git/Alert/Webhook/Dataset)"
          type: array
        build:
          $ref: '#/components/schemas/v1Build'
        hooks:
          items:
            $ref: '#/components/schemas/v1Hook'
          title: Optional hooks section
          type: array
        dependencies:
          items:
            type: string
          title: Optional graph dependencies of this op
          type: array
        trigger:
          $ref: '#/components/schemas/v1TriggerPolicy'
        conditions:
          title: An optional template containing conditions to check before starting
            the run
          type: string
        skipOnUpstreamSkip:
          title: Optional flag to skip this run if upstream was skipped
          type: boolean
        matrix:
          properties: {}
          title: "Optional matrix section, must be a valid matrix option (Random/Grid/BO/Hyperband/Hyperopt/Mapping/Iterative)"
          type: object
        joins:
          additionalProperties:
            $ref: '#/components/schemas/v1Join'
          title: Optional dict of joins
          type: object
        inputs:
          items:
            $ref: '#/components/schemas/v1IO'
          title: Optional inputs definition
          type: array
        outputs:
          items:
            $ref: '#/components/schemas/v1IO'
          title: Optional outputs definition
          type: array
        contexts:
          items:
            $ref: '#/components/schemas/v1IO'
          title: Optional outputs definition
          type: array
        isApproved:
          title: Optional flag to mark this specification requires approval before
            running
          type: boolean
        cost:
          format: float
          title: Optional field to assign cost to this Component
          type: number
        run:
          properties: {}
          title: "Run definition, should be one of run composition: Container/Ray/Dask/Kubeflow/Dask/Dag"
          type: object
      title: CompiledOperation specification
      type: object
    v1Component:
      example:
        termination:
          maxRetries: 3
          ttl: 3
          timeout: 7
        outputs:
        - delayValidation: true
          toEnv: toEnv
          description: description
          isOptional: true
          type: type
          isList: true
          isFlag: true
          argFormat: argFormat
          name: name
          options:
          - "{}"
          - "{}"
          connection: connection
          toInit: true
          value: "{}"
          validation:
            multipleOf: 0
            maxItems: 8
            excludes:
            - "{}"
            - "{}"
            keys:
            - keys
            - keys
            minLength: 5
            lt: 7
            maxDigits: 0
            containsKeys:
            - containsKeys
            - containsKeys
            gt: 1
            minItems: 6
            regex: regex
            contains:
            - "{}"
            - "{}"
            delay: true
            decimalPlaces: 7
            excludesKeys:
            - excludesKeys
            - excludesKeys
            minDigits: 9
            options:
            - "{}"
            - "{}"
            le: 9
            ge: 4
            maxLength: 4
        - delayValidation: true
          toEnv: toEnv
          description: description
          isOptional: true
          type: type
          isList: true
          isFlag: true
          argFormat: argFormat
          name: name
          options:
          - "{}"
          - "{}"
          connection: connection
          toInit: true
          value: "{}"
          validation:
            multipleOf: 0
            maxItems: 8
            excludes:
            - "{}"
            - "{}"
            keys:
            - keys
            - keys
            minLength: 5
            lt: 7
            maxDigits: 0
            containsKeys:
            - containsKeys
            - containsKeys
            gt: 1
            minItems: 6
            regex: regex
            contains:
            - "{}"
            - "{}"
            delay: true
            decimalPlaces: 7
            excludesKeys:
            - excludesKeys
            - excludesKeys
            minDigits: 9
            options:
            - "{}"
            - "{}"
            le: 9
            ge: 4
            maxLength: 4
        template:
          description: description
          fields:
          - fields
          - fields
          enabled: true
        cache:
          disable: true
          io:
          - io
          - io
          ttl: 7
          sections:
          - sections
          - sections
        cost: 4.459605
        kind: kind
        plugins:
          mountArtifactsStore: true
          syncStatuses: true
          auth: true
          collectResources: true
          collectLogs: true
          externalHost: true
          docker: true
          collectArtifacts: true
          logLevel: logLevel
          autoResume: true
          sidecar:
            sleepInterval: 5
            monitorSpec: true
            image: image
            imagePullPolicy: imagePullPolicy
            syncInterval: 3
            resources: "{}"
            monitorLogs: true
            imageTag: imageTag
          shm: true
          notifications:
          - trigger: null
            connections:
            - connections
            - connections
          - trigger: null
            connections:
            - connections
            - connections
        inputs:
        - delayValidation: true
          toEnv: toEnv
          description: description
          isOptional: true
          type: type
          isList: true
          isFlag: true
          argFormat: argFormat
          name: name
          options:
          - "{}"
          - "{}"
          connection: connection
          toInit: true
          value: "{}"
          validation:
            multipleOf: 0
            maxItems: 8
            excludes:
            - "{}"
            - "{}"
            keys:
            - keys
            - keys
            minLength: 5
            lt: 7
            maxDigits: 0
            containsKeys:
            - containsKeys
            - containsKeys
            gt: 1
            minItems: 6
            regex: regex
            contains:
            - "{}"
            - "{}"
            delay: true
            decimalPlaces: 7
            excludesKeys:
            - excludesKeys
            - excludesKeys
            minDigits: 9
            options:
            - "{}"
            - "{}"
            le: 9
            ge: 4
            maxLength: 4
        - delayValidation: true
          toEnv: toEnv
          description: description
          isOptional: true
          type: type
          isList: true
          isFlag: true
          argFormat: argFormat
          name: name
          options:
          - "{}"
          - "{}"
          connection: connection
          toInit: true
          value: "{}"
          validation:
            multipleOf: 0
            maxItems: 8
            excludes:
            - "{}"
            - "{}"
            keys:
            - keys
            - keys
            minLength: 5
            lt: 7
            maxDigits: 0
            containsKeys:
            - containsKeys
            - containsKeys
            gt: 1
            minItems: 6
            regex: regex
            contains:
            - "{}"
            - "{}"
            delay: true
            decimalPlaces: 7
            excludesKeys:
            - excludesKeys
            - excludesKeys
            minDigits: 9
            options:
            - "{}"
            - "{}"
            le: 9
            ge: 4
            maxLength: 4
        description: description
        run: "{}"
        version: 4.2587733
        tags:
        - tags
        - tags
        presets:
        - presets
        - presets
        build:
          cache:
            disable: true
            io:
            - io
            - io
            ttl: 7
            sections:
            - sections
            - sections
          presets:
          - presets
          - presets
          runPatch: "{}"
          hubRef: hubRef
          namespace: namespace
          connection: connection
          patchStrategy: null
          params:
            key:
              ref: ref
              toEnv: toEnv
              contextOnly: true
              connection: connection
              toInit: true
              value: "{}"
          queue: queue
        name: name
        namespace: namespace
        isApproved: true
        hooks:
        - presets:
          - presets
          - presets
          hubRef: hubRef
          namespace: namespace
          disableDefaults: true
          connection: connection
          trigger: null
          conditions: conditions
          params:
            key:
              ref: ref
              toEnv: toEnv
              contextOnly: true
              connection: connection
              toInit: true
              value: "{}"
          queue: queue
        - presets:
          - presets
          - presets
          hubRef: hubRef
          namespace: namespace
          disableDefaults: true
          connection: connection
          trigger: null
          conditions: conditions
          params:
            key:
              ref: ref
              toEnv: toEnv
              contextOnly: true
              connection: connection
              toInit: true
              value: "{}"
          queue: queue
        queue: queue
      properties:
        version:
          format: float
          title: Spec version
          type: number
        kind:
          title: "Optional component kind, should be equal to 'operation'"
          type: string
        name:
          title: "Optional component name, should be a valid fully qualified value:\
            \ name[:version]"
          type: string
        description:
          title: Optional component description
          type: string
        tags:
          items:
            type: string
          title: Optional component tags
          type: array
        presets:
          items:
            type: string
          title: Optional presets to use for running this component
          type: array
        queue:
          title: Optional queue to use for running this component
          type: string
        cache:
          $ref: '#/components/schemas/v1Cache'
        namespace:
          title: "Optional namespace to use, uses agent's namespace by default"
          type: string
        termination:
          $ref: '#/components/schemas/v1Termination'
        plugins:
          $ref: '#/components/schemas/v1Plugins'
        hooks:
          items:
            $ref: '#/components/schemas/v1Hook'
          title: Optional hooks section
          type: array
        inputs:
          items:
            $ref: '#/components/schemas/v1IO'
          title: Optional inputs definition
          type: array
        outputs:
          items:
            $ref: '#/components/schemas/v1IO'
          title: Optional outputs definition
          type: array
        build:
          $ref: '#/components/schemas/v1Build'
        run:
          properties: {}
          title: "Run definition, should be one of: Job/Service/Ray/Kubeflow/Dask/Dag"
          type: object
        template:
          $ref: '#/components/schemas/v1Template'
        isApproved:
          title: Optional flag to mark this specification requires approval before
            running
          type: boolean
        cost:
          format: float
          title: Optional field to assign cost to this Component
          type: number
      title: Component specification
      type: object
    v1ConnectionKind:
      default: host_path
      enum:
      - host_path
      - volume_claim
      - gcs
      - s3
      - wasb
      - registry
      - git
      - aws
      - gcp
      - azure
      - mysql
      - postgres
      - oracle
      - vertica
      - sqlite
      - mssql
      - redis
      - presto
      - mongo
      - cassandra
      - ftp
      - grpc
      - hdfs
      - http
      - pig_cli
      - hive_cli
      - hive_metastore
      - hive_server2
      - jdbc
      - jenkins
      - samba
      - snowflake
      - ssh
      - cloudant
      - databricks
      - segment
      - slack
      - discord
      - mattermost
      - pagerduty
      - hipchat
      - webhook
      - custom
      title: Connection kinds
      type: string
    v1ConnectionResource:
      example:
        mountPath: mountPath
        defaultMode: 7
        name: name
        items:
        - items
        - items
      properties:
        name:
          type: string
        mountPath:
          type: string
        items:
          items:
            type: string
          type: array
        defaultMode:
          format: int32
          type: integer
      title: K8S resource schema validation
      type: object
    v1ConnectionResponse:
      example:
        agent: agent
        updated_at: 2000-01-23T04:56:07.000+00:00
        kind: null
        name: name
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        live_state: 6
        uuid: uuid
        tags:
        - tags
        - tags
      properties:
        uuid:
          title: UUID
          type: string
        name:
          title: Name
          type: string
        agent:
          title: Agent
          type: string
        description:
          title: Optional description
          type: string
        tags:
          items:
            type: string
          title: Optional tags of this entity
          type: array
        created_at:
          format: date-time
          title: Optional time when the entity was created
          type: string
        updated_at:
          format: date-time
          title: Optional last time the entity was updated
          type: string
        live_state:
          format: int32
          title: Current live state
          type: integer
        kind:
          $ref: '#/components/schemas/v1ConnectionKind'
      title: Connection specification
      type: object
    v1ConnectionSchema:
      example:
        hostConnection:
          insecure: true
          url: url
        claimConnection:
          mountPath: mountPath
          kind: "{}"
          readOnly: true
          volumeClaim: volumeClaim
        hostPathConnection:
          mountPath: mountPath
          kind: "{}"
          readOnly: true
          hostPath: hostPath
        gitConnection:
          flags:
          - flags
          - flags
          url: url
          revision: true
        bucketConnection:
          bucket: bucket
      properties:
        bucketConnection:
          $ref: '#/components/schemas/v1BucketConnection'
        hostPathConnection:
          $ref: '#/components/schemas/v1HostPathConnection'
        claimConnection:
          $ref: '#/components/schemas/v1ClaimConnection'
        hostConnection:
          $ref: '#/components/schemas/v1HostConnection'
        gitConnection:
          $ref: '#/components/schemas/v1GitConnection'
      type: object
    v1ConnectionType:
      example:
        schema: "{}"
        kind: null
        configMap:
          mountPath: mountPath
          defaultMode: 7
          name: name
          items:
          - items
          - items
        name: name
        description: description
        annotations:
          key: annotations
        secret:
          mountPath: mountPath
          defaultMode: 7
          name: name
          items:
          - items
          - items
        env:
        - "{}"
        - "{}"
        tags: tags
      properties:
        name:
          title: Connection name
          type: string
        description:
          title: Optional connection description
          type: string
        tags:
          title: Optional connection tags
          type: string
        kind:
          $ref: '#/components/schemas/v1ConnectionKind'
        schema:
          properties: {}
          title: The connection schema should be a valid ConnectionSchema
          type: object
        secret:
          $ref: '#/components/schemas/v1ConnectionResource'
        configMap:
          $ref: '#/components/schemas/v1ConnectionResource'
        env:
          items:
            properties: {}
            type: object
          title: Environment variables
          type: array
        annotations:
          additionalProperties:
            type: string
          title: Optional Metadata annotations to pass to k8s
          type: object
      type: object
    v1Container:
      title: Placeholder for Container
      type: object
    v1Credentials:
      properties:
        username:
          title: User username or email
          type: string
        password:
          title: User password
          type: string
      title: Login
      type: object
    v1CronSchedule:
      example:
        cron: cron
        dependsOnPast: true
        maxRuns: 3
        kind: cron
        endAt: 2000-01-23T04:56:07.000+00:00
        startAt: 2000-01-23T04:56:07.000+00:00
      properties:
        kind:
          default: cron
          title: "Kind of schedule, should be equal to \"cron\""
          type: string
        startAt:
          format: date-time
          title: Whan to start this cron schedule
          type: string
        endAt:
          format: date-time
          title: Whan to end this cron schedule
          type: string
        maxRuns:
          format: int32
          title: Limit to stop executing this schedule
          type: integer
        cron:
          title: "Cron definition, e.g. 0 1 * * *"
          type: string
        dependsOnPast:
          title: A flag to set a dependency on past executions
          type: boolean
      title: Cron schedule specification
      type: object
    v1Dag:
      example:
        components:
        - termination:
            maxRetries: 3
            ttl: 3
            timeout: 7
          outputs:
          - delayValidation: true
            toEnv: toEnv
            description: description
            isOptional: true
            type: type
            isList: true
            isFlag: true
            argFormat: argFormat
            name: name
            options:
            - "{}"
            - "{}"
            connection: connection
            toInit: true
            value: "{}"
            validation:
              multipleOf: 0
              maxItems: 8
              excludes:
              - "{}"
              - "{}"
              keys:
              - keys
              - keys
              minLength: 5
              lt: 7
              maxDigits: 0
              containsKeys:
              - containsKeys
              - containsKeys
              gt: 1
              minItems: 6
              regex: regex
              contains:
              - "{}"
              - "{}"
              delay: true
              decimalPlaces: 7
              excludesKeys:
              - excludesKeys
              - excludesKeys
              minDigits: 9
              options:
              - "{}"
              - "{}"
              le: 9
              ge: 4
              maxLength: 4
          - delayValidation: true
            toEnv: toEnv
            description: description
            isOptional: true
            type: type
            isList: true
            isFlag: true
            argFormat: argFormat
            name: name
            options:
            - "{}"
            - "{}"
            connection: connection
            toInit: true
            value: "{}"
            validation:
              multipleOf: 0
              maxItems: 8
              excludes:
              - "{}"
              - "{}"
              keys:
              - keys
              - keys
              minLength: 5
              lt: 7
              maxDigits: 0
              containsKeys:
              - containsKeys
              - containsKeys
              gt: 1
              minItems: 6
              regex: regex
              contains:
              - "{}"
              - "{}"
              delay: true
              decimalPlaces: 7
              excludesKeys:
              - excludesKeys
              - excludesKeys
              minDigits: 9
              options:
              - "{}"
              - "{}"
              le: 9
              ge: 4
              maxLength: 4
          template:
            description: description
            fields:
            - fields
            - fields
            enabled: true
          cache:
            disable: true
            io:
            - io
            - io
            ttl: 7
            sections:
            - sections
            - sections
          cost: 4.459605
          kind: kind
          plugins:
            mountArtifactsStore: true
            syncStatuses: true
            auth: true
            collectResources: true
            collectLogs: true
            externalHost: true
            docker: true
            collectArtifacts: true
            logLevel: logLevel
            autoResume: true
            sidecar:
              sleepInterval: 5
              monitorSpec: true
              image: image
              imagePullPolicy: imagePullPolicy
              syncInterval: 3
              resources: "{}"
              monitorLogs: true
              imageTag: imageTag
            shm: true
            notifications:
            - trigger: null
              connections:
              - connections
              - connections
            - trigger: null
              connections:
              - connections
              - connections
          inputs:
          - delayValidation: true
            toEnv: toEnv
            description: description
            isOptional: true
            type: type
            isList: true
            isFlag: true
            argFormat: argFormat
            name: name
            options:
            - "{}"
            - "{}"
            connection: connection
            toInit: true
            value: "{}"
            validation:
              multipleOf: 0
              maxItems: 8
              excludes:
              - "{}"
              - "{}"
              keys:
              - keys
              - keys
              minLength: 5
              lt: 7
              maxDigits: 0
              containsKeys:
              - containsKeys
              - containsKeys
              gt: 1
              minItems: 6
              regex: regex
              contains:
              - "{}"
              - "{}"
              delay: true
              decimalPlaces: 7
              excludesKeys:
              - excludesKeys
              - excludesKeys
              minDigits: 9
              options:
              - "{}"
              - "{}"
              le: 9
              ge: 4
              maxLength: 4
          - delayValidation: true
            toEnv: toEnv
            description: description
            isOptional: true
            type: type
            isList: true
            isFlag: true
            argFormat: argFormat
            name: name
            options:
            - "{}"
            - "{}"
            connection: connection
            toInit: true
            value: "{}"
            validation:
              multipleOf: 0
              maxItems: 8
              excludes:
              - "{}"
              - "{}"
              keys:
              - keys
              - keys
              minLength: 5
              lt: 7
              maxDigits: 0
              containsKeys:
              - containsKeys
              - containsKeys
              gt: 1
              minItems: 6
              regex: regex
              contains:
              - "{}"
              - "{}"
              delay: true
              decimalPlaces: 7
              excludesKeys:
              - excludesKeys
              - excludesKeys
              minDigits: 9
              options:
              - "{}"
              - "{}"
              le: 9
              ge: 4
              maxLength: 4
          description: description
          run: "{}"
          version: 4.2587733
          tags:
          - tags
          - tags
          presets:
          - presets
          - presets
          build:
            cache:
              disable: true
              io:
              - io
              - io
              ttl: 7
              sections:
              - sections
              - sections
            presets:
            - presets
            - presets
            runPatch: "{}"
            hubRef: hubRef
            namespace: namespace
            connection: connection
            patchStrategy: null
            params:
              key:
                ref: ref
                toEnv: toEnv
                contextOnly: true
                connection: connection
                toInit: true
                value: "{}"
            queue: queue
          name: name
          namespace: namespace
          isApproved: true
          hooks:
          - presets:
            - presets
            - presets
            hubRef: hubRef
            namespace: namespace
            disableDefaults: true
            connection: connection
            trigger: null
            conditions: conditions
            params:
              key:
                ref: ref
                toEnv: toEnv
                contextOnly: true
                connection: connection
                toInit: true
                value: "{}"
            queue: queue
          - presets:
            - presets
            - presets
            hubRef: hubRef
            namespace: namespace
            disableDefaults: true
            connection: connection
            trigger: null
            conditions: conditions
            params:
              key:
                ref: ref
                toEnv: toEnv
                contextOnly: true
                connection: connection
                toInit: true
                value: "{}"
            queue: queue
          queue: queue
        - termination:
            maxRetries: 3
            ttl: 3
            timeout: 7
          outputs:
          - delayValidation: true
            toEnv: toEnv
            description: description
            isOptional: true
            type: type
            isList: true
            isFlag: true
            argFormat: argFormat
            name: name
            options:
            - "{}"
            - "{}"
            connection: connection
            toInit: true
            value: "{}"
            validation:
              multipleOf: 0
              maxItems: 8
              excludes:
              - "{}"
              - "{}"
              keys:
              - keys
              - keys
              minLength: 5
              lt: 7
              maxDigits: 0
              containsKeys:
              - containsKeys
              - containsKeys
              gt: 1
              minItems: 6
              regex: regex
              contains:
              - "{}"
              - "{}"
              delay: true
              decimalPlaces: 7
              excludesKeys:
              - excludesKeys
              - excludesKeys
              minDigits: 9
              options:
              - "{}"
              - "{}"
              le: 9
              ge: 4
              maxLength: 4
          - delayValidation: true
            toEnv: toEnv
            description: description
            isOptional: true
            type: type
            isList: true
            isFlag: true
            argFormat: argFormat
            name: name
            options:
            - "{}"
            - "{}"
            connection: connection
            toInit: true
            value: "{}"
            validation:
              multipleOf: 0
              maxItems: 8
              excludes:
              - "{}"
              - "{}"
              keys:
              - keys
              - keys
              minLength: 5
              lt: 7
              maxDigits: 0
              containsKeys:
              - containsKeys
              - containsKeys
              gt: 1
              minItems: 6
              regex: regex
              contains:
              - "{}"
              - "{}"
              delay: true
              decimalPlaces: 7
              excludesKeys:
              - excludesKeys
              - excludesKeys
              minDigits: 9
              options:
              - "{}"
              - "{}"
              le: 9
              ge: 4
              maxLength: 4
          template:
            description: description
            fields:
            - fields
            - fields
            enabled: true
          cache:
            disable: true
            io:
            - io
            - io
            ttl: 7
            sections:
            - sections
            - sections
          cost: 4.459605
          kind: kind
          plugins:
            mountArtifactsStore: true
            syncStatuses: true
            auth: true
            collectResources: true
            collectLogs: true
            externalHost: true
            docker: true
            collectArtifacts: true
            logLevel: logLevel
            autoResume: true
            sidecar:
              sleepInterval: 5
              monitorSpec: true
              image: image
              imagePullPolicy: imagePullPolicy
              syncInterval: 3
              resources: "{}"
              monitorLogs: true
              imageTag: imageTag
            shm: true
            notifications:
            - trigger: null
              connections:
              - connections
              - connections
            - trigger: null
              connections:
              - connections
              - connections
          inputs:
          - delayValidation: true
            toEnv: toEnv
            description: description
            isOptional: true
            type: type
            isList: true
            isFlag: true
            argFormat: argFormat
            name: name
            options:
            - "{}"
            - "{}"
            connection: connection
            toInit: true
            value: "{}"
            validation:
              multipleOf: 0
              maxItems: 8
              excludes:
              - "{}"
              - "{}"
              keys:
              - keys
              - keys
              minLength: 5
              lt: 7
              maxDigits: 0
              containsKeys:
              - containsKeys
              - containsKeys
              gt: 1
              minItems: 6
              regex: regex
              contains:
              - "{}"
              - "{}"
              delay: true
              decimalPlaces: 7
              excludesKeys:
              - excludesKeys
              - excludesKeys
              minDigits: 9
              options:
              - "{}"
              - "{}"
              le: 9
              ge: 4
              maxLength: 4
          - delayValidation: true
            toEnv: toEnv
            description: description
            isOptional: true
            type: type
            isList: true
            isFlag: true
            argFormat: argFormat
            name: name
            options:
            - "{}"
            - "{}"
            connection: connection
            toInit: true
            value: "{}"
            validation:
              multipleOf: 0
              maxItems: 8
              excludes:
              - "{}"
              - "{}"
              keys:
              - keys
              - keys
              minLength: 5
              lt: 7
              maxDigits: 0
              containsKeys:
              - containsKeys
              - containsKeys
              gt: 1
              minItems: 6
              regex: regex
              contains:
              - "{}"
              - "{}"
              delay: true
              decimalPlaces: 7
              excludesKeys:
              - excludesKeys
              - excludesKeys
              minDigits: 9
              options:
              - "{}"
              - "{}"
              le: 9
              ge: 4
              maxLength: 4
          description: description
          run: "{}"
          version: 4.2587733
          tags:
          - tags
          - tags
          presets:
          - presets
          - presets
          build:
            cache:
              disable: true
              io:
              - io
              - io
              ttl: 7
              sections:
              - sections
              - sections
            presets:
            - presets
            - presets
            runPatch: "{}"
            hubRef: hubRef
            namespace: namespace
            connection: connection
            patchStrategy: null
            params:
              key:
                ref: ref
                toEnv: toEnv
                contextOnly: true
                connection: connection
                toInit: true
                value: "{}"
            queue: queue
          name: name
          namespace: namespace
          isApproved: true
          hooks:
          - presets:
            - presets
            - presets
            hubRef: hubRef
            namespace: namespace
            disableDefaults: true
            connection: connection
            trigger: null
            conditions: conditions
            params:
              key:
                ref: ref
                toEnv: toEnv
                contextOnly: true
                connection: connection
                toInit: true
                value: "{}"
            queue: queue
          - presets:
            - presets
            - presets
            hubRef: hubRef
            namespace: namespace
            disableDefaults: true
            connection: connection
            trigger: null
            conditions: conditions
            params:
              key:
                ref: ref
                toEnv: toEnv
                contextOnly: true
                connection: connection
                toInit: true
                value: "{}"
            queue: queue
          queue: queue
        environment:
          nodeName: nodeName
          dnsPolicy: dnsPolicy
          serviceAccountName: serviceAccountName
          hostNetwork: true
          dnsConfig: "{}"
          imagePullSecrets:
          - imagePullSecrets
          - imagePullSecrets
          priorityClassName: priorityClassName
          annotations:
            key: annotations
          hostAliases:
          - null
          - null
          securityContext: "{}"
          priority: 3
          restartPolicy: restartPolicy
          labels:
            key: labels
          nodeSelector:
            key: nodeSelector
          tolerations:
          - null
          - null
          schedulerName: schedulerName
          affinity: "{}"
          hostPID: hostPID
        operations:
        - joins:
            key:
              ref: ref
              offset: 0
              query: query
              limit: 4
              sort: sort
              params:
                key:
                  toEnv: toEnv
                  contextOnly: true
                  connection: connection
                  toInit: true
                  value: value
          template:
            description: description
            fields:
            - fields
            - fields
            enabled: true
          dagRef: dagRef
          plugins:
            mountArtifactsStore: true
            syncStatuses: true
            auth: true
            collectResources: true
            collectLogs: true
            externalHost: true
            docker: true
            collectArtifacts: true
            logLevel: logLevel
            autoResume: true
            sidecar:
              sleepInterval: 5
              monitorSpec: true
              image: image
              imagePullPolicy: imagePullPolicy
              syncInterval: 3
              resources: "{}"
              monitorLogs: true
              imageTag: imageTag
            shm: true
            notifications:
            - trigger: null
              connections:
              - connections
              - connections
            - trigger: null
              connections:
              - connections
              - connections
          hubRef: hubRef
          description: description
          matrix: "{}"
          isApproved: true
          hooks:
          - presets:
            - presets
            - presets
            hubRef: hubRef
            namespace: namespace
            disableDefaults: true
            connection: connection
            trigger: null
            conditions: conditions
            params:
              key:
                ref: ref
                toEnv: toEnv
                contextOnly: true
                connection: connection
                toInit: true
                value: "{}"
            queue: queue
          - presets:
            - presets
            - presets
            hubRef: hubRef
            namespace: namespace
            disableDefaults: true
            connection: connection
            trigger: null
            conditions: conditions
            params:
              key:
                ref: ref
                toEnv: toEnv
                contextOnly: true
                connection: connection
                toInit: true
                value: "{}"
            queue: queue
          events:
          - ref: ref
            kinds:
            - null
            - null
          - ref: ref
            kinds:
            - null
            - null
          termination:
            maxRetries: 3
            ttl: 3
            timeout: 7
          cache:
            disable: true
            io:
            - io
            - io
            ttl: 7
            sections:
            - sections
            - sections
          cost: 6.628464
          kind: kind
          isPreset: true
          trigger: null
          params:
            key:
              ref: ref
              toEnv: toEnv
              contextOnly: true
              connection: connection
              toInit: true
              value: "{}"
          version: 8.969579
          tags:
          - tags
          - tags
          dependencies:
          - dependencies
          - dependencies
          schedule: "{}"
          component:
            termination:
              maxRetries: 3
              ttl: 3
              timeout: 7
            outputs:
            - delayValidation: true
              toEnv: toEnv
              description: description
              isOptional: true
              type: type
              isList: true
              isFlag: true
              argFormat: argFormat
              name: name
              options:
              - "{}"
              - "{}"
              connection: connection
              toInit: true
              value: "{}"
              validation:
                multipleOf: 0
                maxItems: 8
                excludes:
                - "{}"
                - "{}"
                keys:
                - keys
                - keys
                minLength: 5
                lt: 7
                maxDigits: 0
                containsKeys:
                - containsKeys
                - containsKeys
                gt: 1
                minItems: 6
                regex: regex
                contains:
                - "{}"
                - "{}"
                delay: true
                decimalPlaces: 7
                excludesKeys:
                - excludesKeys
                - excludesKeys
                minDigits: 9
                options:
                - "{}"
                - "{}"
                le: 9
                ge: 4
                maxLength: 4
            - delayValidation: true
              toEnv: toEnv
              description: description
              isOptional: true
              type: type
              isList: true
              isFlag: true
              argFormat: argFormat
              name: name
              options:
              - "{}"
              - "{}"
              connection: connection
              toInit: true
              value: "{}"
              validation:
                multipleOf: 0
                maxItems: 8
                excludes:
                - "{}"
                - "{}"
                keys:
                - keys
                - keys
                minLength: 5
                lt: 7
                maxDigits: 0
                containsKeys:
                - containsKeys
                - containsKeys
                gt: 1
                minItems: 6
                regex: regex
                contains:
                - "{}"
                - "{}"
                delay: true
                decimalPlaces: 7
                excludesKeys:
                - excludesKeys
                - excludesKeys
                minDigits: 9
                options:
                - "{}"
                - "{}"
                le: 9
                ge: 4
                maxLength: 4
            template:
              description: description
              fields:
              - fields
              - fields
              enabled: true
            cache:
              disable: true
              io:
              - io
              - io
              ttl: 7
              sections:
              - sections
              - sections
            cost: 4.459605
            kind: kind
            plugins:
              mountArtifactsStore: true
              syncStatuses: true
              auth: true
              collectResources: true
              collectLogs: true
              externalHost: true
              docker: true
              collectArtifacts: true
              logLevel: logLevel
              autoResume: true
              sidecar:
                sleepInterval: 5
                monitorSpec: true
                image: image
                imagePullPolicy: imagePullPolicy
                syncInterval: 3
                resources: "{}"
                monitorLogs: true
                imageTag: imageTag
              shm: true
              notifications:
              - trigger: null
                connections:
                - connections
                - connections
              - trigger: null
                connections:
                - connections
                - connections
            inputs:
            - delayValidation: true
              toEnv: toEnv
              description: description
              isOptional: true
              type: type
              isList: true
              isFlag: true
              argFormat: argFormat
              name: name
              options:
              - "{}"
              - "{}"
              connection: connection
              toInit: true
              value: "{}"
              validation:
                multipleOf: 0
                maxItems: 8
                excludes:
                - "{}"
                - "{}"
                keys:
                - keys
                - keys
                minLength: 5
                lt: 7
                maxDigits: 0
                containsKeys:
                - containsKeys
                - containsKeys
                gt: 1
                minItems: 6
                regex: regex
                contains:
                - "{}"
                - "{}"
                delay: true
                decimalPlaces: 7
                excludesKeys:
                - excludesKeys
                - excludesKeys
                minDigits: 9
                options:
                - "{}"
                - "{}"
                le: 9
                ge: 4
                maxLength: 4
            - delayValidation: true
              toEnv: toEnv
              description: description
              isOptional: true
              type: type
              isList: true
              isFlag: true
              argFormat: argFormat
              name: name
              options:
              - "{}"
              - "{}"
              connection: connection
              toInit: true
              value: "{}"
              validation:
                multipleOf: 0
                maxItems: 8
                excludes:
                - "{}"
                - "{}"
                keys:
                - keys
                - keys
                minLength: 5
                lt: 7
                maxDigits: 0
                containsKeys:
                - containsKeys
                - containsKeys
                gt: 1
                minItems: 6
                regex: regex
                contains:
                - "{}"
                - "{}"
                delay: true
                decimalPlaces: 7
                excludesKeys:
                - excludesKeys
                - excludesKeys
                minDigits: 9
                options:
                - "{}"
                - "{}"
                le: 9
                ge: 4
                maxLength: 4
            description: description
            run: "{}"
            version: 4.2587733
            tags:
            - tags
            - tags
            presets:
            - presets
            - presets
            build:
              cache:
                disable: true
                io:
                - io
                - io
                ttl: 7
                sections:
                - sections
                - sections
              presets:
              - presets
              - presets
              runPatch: "{}"
              hubRef: hubRef
              namespace: namespace
              connection: connection
              patchStrategy: null
              params:
                key:
                  ref: ref
                  toEnv: toEnv
                  contextOnly: true
                  connection: connection
                  toInit: true
                  value: "{}"
              queue: queue
            name: name
            namespace: namespace
            isApproved: true
            hooks:
            - presets:
              - presets
              - presets
              hubRef: hubRef
              namespace: namespace
              disableDefaults: true
              connection: connection
              trigger: null
              conditions: conditions
              params:
                key:
                  ref: ref
                  toEnv: toEnv
                  contextOnly: true
                  connection: connection
                  toInit: true
                  value: "{}"
              queue: queue
            - presets:
              - presets
              - presets
              hubRef: hubRef
              namespace: namespace
              disableDefaults: true
              connection: connection
              trigger: null
              conditions: conditions
              params:
                key:
                  ref: ref
                  toEnv: toEnv
                  contextOnly: true
                  connection: connection
                  toInit: true
                  value: "{}"
              queue: queue
            queue: queue
          presets:
          - presets
          - presets
          skipOnUpstreamSkip: true
          runPatch: "{}"
          build:
            cache:
              disable: true
              io:
              - io
              - io
              ttl: 7
              sections:
              - sections
              - sections
            presets:
            - presets
            - presets
            runPatch: "{}"
            hubRef: hubRef
            namespace: namespace
            connection: connection
            patchStrategy: null
            params:
              key:
                ref: ref
                toEnv: toEnv
                contextOnly: true
                connection: connection
                toInit: true
                value: "{}"
            queue: queue
          name: name
          namespace: namespace
          patchStrategy: null
          urlRef: urlRef
          conditions: conditions
          pathRef: pathRef
          queue: queue
        - joins:
            key:
              ref: ref
              offset: 0
              query: query
              limit: 4
              sort: sort
              params:
                key:
                  toEnv: toEnv
                  contextOnly: true
                  connection: connection
                  toInit: true
                  value: value
          template:
            description: description
            fields:
            - fields
            - fields
            enabled: true
          dagRef: dagRef
          plugins:
            mountArtifactsStore: true
            syncStatuses: true
            auth: true
            collectResources: true
            collectLogs: true
            externalHost: true
            docker: true
            collectArtifacts: true
            logLevel: logLevel
            autoResume: true
            sidecar:
              sleepInterval: 5
              monitorSpec: true
              image: image
              imagePullPolicy: imagePullPolicy
              syncInterval: 3
              resources: "{}"
              monitorLogs: true
              imageTag: imageTag
            shm: true
            notifications:
            - trigger: null
              connections:
              - connections
              - connections
            - trigger: null
              connections:
              - connections
              - connections
          hubRef: hubRef
          description: description
          matrix: "{}"
          isApproved: true
          hooks:
          - presets:
            - presets
            - presets
            hubRef: hubRef
            namespace: namespace
            disableDefaults: true
            connection: connection
            trigger: null
            conditions: conditions
            params:
              key:
                ref: ref
                toEnv: toEnv
                contextOnly: true
                connection: connection
                toInit: true
                value: "{}"
            queue: queue
          - presets:
            - presets
            - presets
            hubRef: hubRef
            namespace: namespace
            disableDefaults: true
            connection: connection
            trigger: null
            conditions: conditions
            params:
              key:
                ref: ref
                toEnv: toEnv
                contextOnly: true
                connection: connection
                toInit: true
                value: "{}"
            queue: queue
          events:
          - ref: ref
            kinds:
            - null
            - null
          - ref: ref
            kinds:
            - null
            - null
          termination:
            maxRetries: 3
            ttl: 3
            timeout: 7
          cache:
            disable: true
            io:
            - io
            - io
            ttl: 7
            sections:
            - sections
            - sections
          cost: 6.628464
          kind: kind
          isPreset: true
          trigger: null
          params:
            key:
              ref: ref
              toEnv: toEnv
              contextOnly: true
              connection: connection
              toInit: true
              value: "{}"
          version: 8.969579
          tags:
          - tags
          - tags
          dependencies:
          - dependencies
          - dependencies
          schedule: "{}"
          component:
            termination:
              maxRetries: 3
              ttl: 3
              timeout: 7
            outputs:
            - delayValidation: true
              toEnv: toEnv
              description: description
              isOptional: true
              type: type
              isList: true
              isFlag: true
              argFormat: argFormat
              name: name
              options:
              - "{}"
              - "{}"
              connection: connection
              toInit: true
              value: "{}"
              validation:
                multipleOf: 0
                maxItems: 8
                excludes:
                - "{}"
                - "{}"
                keys:
                - keys
                - keys
                minLength: 5
                lt: 7
                maxDigits: 0
                containsKeys:
                - containsKeys
                - containsKeys
                gt: 1
                minItems: 6
                regex: regex
                contains:
                - "{}"
                - "{}"
                delay: true
                decimalPlaces: 7
                excludesKeys:
                - excludesKeys
                - excludesKeys
                minDigits: 9
                options:
                - "{}"
                - "{}"
                le: 9
                ge: 4
                maxLength: 4
            - delayValidation: true
              toEnv: toEnv
              description: description
              isOptional: true
              type: type
              isList: true
              isFlag: true
              argFormat: argFormat
              name: name
              options:
              - "{}"
              - "{}"
              connection: connection
              toInit: true
              value: "{}"
              validation:
                multipleOf: 0
                maxItems: 8
                excludes:
                - "{}"
                - "{}"
                keys:
                - keys
                - keys
                minLength: 5
                lt: 7
                maxDigits: 0
                containsKeys:
                - containsKeys
                - containsKeys
                gt: 1
                minItems: 6
                regex: regex
                contains:
                - "{}"
                - "{}"
                delay: true
                decimalPlaces: 7
                excludesKeys:
                - excludesKeys
                - excludesKeys
                minDigits: 9
                options:
                - "{}"
                - "{}"
                le: 9
                ge: 4
                maxLength: 4
            template:
              description: description
              fields:
              - fields
              - fields
              enabled: true
            cache:
              disable: true
              io:
              - io
              - io
              ttl: 7
              sections:
              - sections
              - sections
            cost: 4.459605
            kind: kind
            plugins:
              mountArtifactsStore: true
              syncStatuses: true
              auth: true
              collectResources: true
              collectLogs: true
              externalHost: true
              docker: true
              collectArtifacts: true
              logLevel: logLevel
              autoResume: true
              sidecar:
                sleepInterval: 5
                monitorSpec: true
                image: image
                imagePullPolicy: imagePullPolicy
                syncInterval: 3
                resources: "{}"
                monitorLogs: true
                imageTag: imageTag
              shm: true
              notifications:
              - trigger: null
                connections:
                - connections
                - connections
              - trigger: null
                connections:
                - connections
                - connections
            inputs:
            - delayValidation: true
              toEnv: toEnv
              description: description
              isOptional: true
              type: type
              isList: true
              isFlag: true
              argFormat: argFormat
              name: name
              options:
              - "{}"
              - "{}"
              connection: connection
              toInit: true
              value: "{}"
              validation:
                multipleOf: 0
                maxItems: 8
                excludes:
                - "{}"
                - "{}"
                keys:
                - keys
                - keys
                minLength: 5
                lt: 7
                maxDigits: 0
                containsKeys:
                - containsKeys
                - containsKeys
                gt: 1
                minItems: 6
                regex: regex
                contains:
                - "{}"
                - "{}"
                delay: true
                decimalPlaces: 7
                excludesKeys:
                - excludesKeys
                - excludesKeys
                minDigits: 9
                options:
                - "{}"
                - "{}"
                le: 9
                ge: 4
                maxLength: 4
            - delayValidation: true
              toEnv: toEnv
              description: description
              isOptional: true
              type: type
              isList: true
              isFlag: true
              argFormat: argFormat
              name: name
              options:
              - "{}"
              - "{}"
              connection: connection
              toInit: true
              value: "{}"
              validation:
                multipleOf: 0
                maxItems: 8
                excludes:
                - "{}"
                - "{}"
                keys:
                - keys
                - keys
                minLength: 5
                lt: 7
                maxDigits: 0
                containsKeys:
                - containsKeys
                - containsKeys
                gt: 1
                minItems: 6
                regex: regex
                contains:
                - "{}"
                - "{}"
                delay: true
                decimalPlaces: 7
                excludesKeys:
                - excludesKeys
                - excludesKeys
                minDigits: 9
                options:
                - "{}"
                - "{}"
                le: 9
                ge: 4
                maxLength: 4
            description: description
            run: "{}"
            version: 4.2587733
            tags:
            - tags
            - tags
            presets:
            - presets
            - presets
            build:
              cache:
                disable: true
                io:
                - io
                - io
                ttl: 7
                sections:
                - sections
                - sections
              presets:
              - presets
              - presets
              runPatch: "{}"
              hubRef: hubRef
              namespace: namespace
              connection: connection
              patchStrategy: null
              params:
                key:
                  ref: ref
                  toEnv: toEnv
                  contextOnly: true
                  connection: connection
                  toInit: true
                  value: "{}"
              queue: queue
            name: name
            namespace: namespace
            isApproved: true
            hooks:
            - presets:
              - presets
              - presets
              hubRef: hubRef
              namespace: namespace
              disableDefaults: true
              connection: connection
              trigger: null
              conditions: conditions
              params:
                key:
                  ref: ref
                  toEnv: toEnv
                  contextOnly: true
                  connection: connection
                  toInit: true
                  value: "{}"
              queue: queue
            - presets:
              - presets
              - presets
              hubRef: hubRef
              namespace: namespace
              disableDefaults: true
              connection: connection
              trigger: null
              conditions: conditions
              params:
                key:
                  ref: ref
                  toEnv: toEnv
                  contextOnly: true
                  connection: connection
                  toInit: true
                  value: "{}"
              queue: queue
            queue: queue
          presets:
          - presets
          - presets
          skipOnUpstreamSkip: true
          runPatch: "{}"
          build:
            cache:
              disable: true
              io:
              - io
              - io
              ttl: 7
              sections:
              - sections
              - sections
            presets:
            - presets
            - presets
            runPatch: "{}"
            hubRef: hubRef
            namespace: namespace
            connection: connection
            patchStrategy: null
            params:
              key:
                ref: ref
                toEnv: toEnv
                contextOnly: true
                connection: connection
                toInit: true
                value: "{}"
            queue: queue
          name: name
          namespace: namespace
          patchStrategy: null
          urlRef: urlRef
          conditions: conditions
          pathRef: pathRef
          queue: queue
        kind: dag
        volumes:
        - null
        - null
        earlyStopping:
        - "{}"
        - "{}"
        connections:
        - connections
        - connections
        concurrency: 3
      properties:
        kind:
          default: dag
          title: "Optional component kind, should be equal to 'dag'"
          type: string
        operations:
          items:
            $ref: '#/components/schemas/v1Operation'
          title: Ops used in the graph
          type: array
        components:
          items:
            $ref: '#/components/schemas/v1Component'
          title: Optional component refrences
          type: array
        concurrency:
          format: int32
          title: Optional component description
          type: integer
        earlyStopping:
          items:
            properties: {}
            type: object
          title: Optional component tags
          type: array
        environment:
          $ref: '#/components/schemas/v1Environment'
        connections:
          items:
            type: string
          title: Optional connections section
          type: array
        volumes:
          description: Volumes is a list of volumes that can be mounted.
          items:
            $ref: '#/components/schemas/v1Volume'
          type: array
      title: Dag specificaiton
      type: object
    v1DagRef:
      example:
        kind: dag_ref
        name: name
      properties:
        kind:
          default: dag_ref
          title: "Kind of reference, should be equal to \"dag_ref\""
          type: string
        name:
          title: Value
          type: string
      title: Dag reference specification
      type: object
    v1Dashboard:
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        org_level: true
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        live_state: 6
        uuid: uuid
        spec:
          xaxis: xaxis
          sample_size: 7
          step: 4
          smoothing: 2
          ignore_outliers: true
          sections:
          - is_frozen: true
            columns: 1
            widgets:
            - "{}"
            - "{}"
            xaxis: xaxis
            sample_size: 7
            is_minimized: true
            page_index: 9
            name: name
            step: 2
            smoothing: 5
            ignore_outliers: true
            height: 5
            page_size: 3
          - is_frozen: true
            columns: 1
            widgets:
            - "{}"
            - "{}"
            xaxis: xaxis
            sample_size: 7
            is_minimized: true
            page_index: 9
            name: name
            step: 2
            smoothing: 5
            ignore_outliers: true
            height: 5
            page_size: 3
        tags:
        - tags
        - tags
      properties:
        uuid:
          title: UUID
          type: string
        name:
          title: Optional name
          type: string
        description:
          title: Optional description
          type: string
        tags:
          items:
            type: string
          title: Optional tags of this entity
          type: array
        live_state:
          format: int32
          title: Current live state
          type: integer
        spec:
          $ref: '#/components/schemas/v1DashboardSpec'
        org_level:
          title: Optional dashboard level
          type: boolean
        created_at:
          format: date-time
          title: Optional time when the entity was created
          type: string
        updated_at:
          format: date-time
          title: Optional last time the entity was updated
          type: string
      title: Dashboard specification
      type: object
    v1DashboardSpec:
      example:
        xaxis: xaxis
        sample_size: 7
        step: 4
        smoothing: 2
        ignore_outliers: true
        sections:
        - is_frozen: true
          columns: 1
          widgets:
          - "{}"
          - "{}"
          xaxis: xaxis
          sample_size: 7
          is_minimized: true
          page_index: 9
          name: name
          step: 2
          smoothing: 5
          ignore_outliers: true
          height: 5
          page_size: 3
        - is_frozen: true
          columns: 1
          widgets:
          - "{}"
          - "{}"
          xaxis: xaxis
          sample_size: 7
          is_minimized: true
          page_index: 9
          name: name
          step: 2
          smoothing: 5
          ignore_outliers: true
          height: 5
          page_size: 3
      properties:
        sections:
          items:
            $ref: '#/components/schemas/v1SectionSpec'
          title: Section Spec
          type: array
        xaxis:
          title: xaxis
          type: string
        smoothing:
          format: int32
          title: Smoothing
          type: integer
        step:
          format: int32
          title: Step
          type: integer
        ignore_outliers:
          title: Ignore outliers
          type: boolean
        sample_size:
          format: int32
          title: Sample size
          type: integer
      title: Dashboard spec definition
      type: object
    v1DaskJob:
      example:
        scheduler:
          container: "{}"
          init:
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          sidecars:
          - null
          - null
          environment:
            nodeName: nodeName
            dnsPolicy: dnsPolicy
            serviceAccountName: serviceAccountName
            hostNetwork: true
            dnsConfig: "{}"
            imagePullSecrets:
            - imagePullSecrets
            - imagePullSecrets
            priorityClassName: priorityClassName
            annotations:
              key: annotations
            hostAliases:
            - null
            - null
            securityContext: "{}"
            priority: 3
            restartPolicy: restartPolicy
            labels:
              key: labels
            nodeSelector:
              key: nodeSelector
            tolerations:
            - null
            - null
            schedulerName: schedulerName
            affinity: "{}"
            hostPID: hostPID
          replicas: 0
          volumes:
          - null
          - null
          connections:
          - connections
          - connections
        kind: daskjob
        job:
          container: "{}"
          init:
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          sidecars:
          - null
          - null
          environment:
            nodeName: nodeName
            dnsPolicy: dnsPolicy
            serviceAccountName: serviceAccountName
            hostNetwork: true
            dnsConfig: "{}"
            imagePullSecrets:
            - imagePullSecrets
            - imagePullSecrets
            priorityClassName: priorityClassName
            annotations:
              key: annotations
            hostAliases:
            - null
            - null
            securityContext: "{}"
            priority: 3
            restartPolicy: restartPolicy
            labels:
              key: labels
            nodeSelector:
              key: nodeSelector
            tolerations:
            - null
            - null
            schedulerName: schedulerName
            affinity: "{}"
            hostPID: hostPID
          replicas: 0
          volumes:
          - null
          - null
          connections:
          - connections
          - connections
        worker:
          container: "{}"
          init:
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          sidecars:
          - null
          - null
          environment:
            nodeName: nodeName
            dnsPolicy: dnsPolicy
            serviceAccountName: serviceAccountName
            hostNetwork: true
            dnsConfig: "{}"
            imagePullSecrets:
            - imagePullSecrets
            - imagePullSecrets
            priorityClassName: priorityClassName
            annotations:
              key: annotations
            hostAliases:
            - null
            - null
            securityContext: "{}"
            priority: 3
            restartPolicy: restartPolicy
            labels:
              key: labels
            nodeSelector:
              key: nodeSelector
            tolerations:
            - null
            - null
            schedulerName: schedulerName
            affinity: "{}"
            hostPID: hostPID
          replicas: 0
          volumes:
          - null
          - null
          connections:
          - connections
          - connections
      properties:
        kind:
          default: daskjob
          title: "Optional component kind, should be equal to 'daskjob'"
          type: string
        job:
          $ref: '#/components/schemas/v1DaskReplica'
        worker:
          $ref: '#/components/schemas/v1DaskReplica'
        scheduler:
          $ref: '#/components/schemas/v1DaskReplica'
      title: Dask specification
      type: object
    v1DaskReplica:
      example:
        container: "{}"
        init:
        - modelRef: modelRef
          container: "{}"
          path: path
          git:
            flags:
            - flags
            - flags
            url: url
            revision: revision
          file:
            filename: filename
            kind: kind
            chmod: chmod
            content: content
          tensorboard:
            port: 6
            plugins: plugins
            use_names: true
            uuids:
            - uuids
            - uuids
            path_prefix: path_prefix
          artifactRef: artifactRef
          paths:
          - "{}"
          - "{}"
          dockerfile:
            image: image
            gid: 0
            workdirPath: workdirPath
            run:
            - run
            - run
            env:
              key: env
            path:
            - path
            - path
            uid: 7
            filename: filename
            workdir: workdir
            shell: shell
            post_run_copy:
            - "{}"
            - "{}"
            langEnv: langEnv
            copy:
            - "{}"
            - "{}"
            username: 7
          connection: connection
          lineageRef: lineageRef
          artifacts:
            files:
            - "{}"
            - "{}"
            dirs:
            - "{}"
            - "{}"
            workers: 3
        - modelRef: modelRef
          container: "{}"
          path: path
          git:
            flags:
            - flags
            - flags
            url: url
            revision: revision
          file:
            filename: filename
            kind: kind
            chmod: chmod
            content: content
          tensorboard:
            port: 6
            plugins: plugins
            use_names: true
            uuids:
            - uuids
            - uuids
            path_prefix: path_prefix
          artifactRef: artifactRef
          paths:
          - "{}"
          - "{}"
          dockerfile:
            image: image
            gid: 0
            workdirPath: workdirPath
            run:
            - run
            - run
            env:
              key: env
            path:
            - path
            - path
            uid: 7
            filename: filename
            workdir: workdir
            shell: shell
            post_run_copy:
            - "{}"
            - "{}"
            langEnv: langEnv
            copy:
            - "{}"
            - "{}"
            username: 7
          connection: connection
          lineageRef: lineageRef
          artifacts:
            files:
            - "{}"
            - "{}"
            dirs:
            - "{}"
            - "{}"
            workers: 3
        sidecars:
        - null
        - null
        environment:
          nodeName: nodeName
          dnsPolicy: dnsPolicy
          serviceAccountName: serviceAccountName
          hostNetwork: true
          dnsConfig: "{}"
          imagePullSecrets:
          - imagePullSecrets
          - imagePullSecrets
          priorityClassName: priorityClassName
          annotations:
            key: annotations
          hostAliases:
          - null
          - null
          securityContext: "{}"
          priority: 3
          restartPolicy: restartPolicy
          labels:
            key: labels
          nodeSelector:
            key: nodeSelector
          tolerations:
          - null
          - null
          schedulerName: schedulerName
          affinity: "{}"
          hostPID: hostPID
        replicas: 0
        volumes:
        - null
        - null
        connections:
        - connections
        - connections
      properties:
        replicas:
          format: int32
          title: Number of replicas
          type: integer
        environment:
          $ref: '#/components/schemas/v1Environment'
        connections:
          items:
            type: string
          title: Optional connections section
          type: array
        volumes:
          items:
            $ref: '#/components/schemas/v1Volume'
          title: Optional connections section
          type: array
        init:
          items:
            $ref: '#/components/schemas/v1Init'
          title: Optional init connections section
          type: array
        sidecars:
          items:
            $ref: '#/components/schemas/v1Container'
          title: Optional sidecars section
          type: array
        container:
          title: Placeholder for Container
          type: object
      title: Dask replica definition
      type: object
    v1DateTimeSchedule:
      example:
        kind: datetime
        startAt: 2000-01-23T04:56:07.000+00:00
      properties:
        kind:
          default: datetime
          title: "Kind of schedule, should be equal to \"datetime\""
          type: string
        startAt:
          format: date-time
          title: Whan to start this cron schedule
          type: string
      title: DateTime schedule specification
      type: object
    v1DiffStoppingPolicy:
      description: |-
        Early stopping with diff factor stopping, this policy computes checks runs against the best run
        and stops those whose performance is worse than the best by the factor defined by the user.
      example:
        minSamples: 7
        kind: kind
        minInterval: 2
        evaluationInterval: 5
        percent: 5.962134
      properties:
        kind:
          title: "Kind of this stopping policy, should be equal to \"average\""
          type: string
        percent:
          format: float
          title: "The diff factor, if not given than a zero tolerance policy is applied"
          type: number
        evaluationInterval:
          description: Interval/Frequency for applying the policy.
          format: int32
          type: integer
        minInterval:
          format: int32
          title: Min interval (e.g steps) before starting the process
          type: integer
        minSamples:
          format: int32
          title: Min samples runs succeeded before starting the process
          type: integer
      type: object
    v1DockerfileType:
      example:
        image: image
        gid: 0
        workdirPath: workdirPath
        run:
        - run
        - run
        env:
          key: env
        path:
        - path
        - path
        uid: 7
        filename: filename
        workdir: workdir
        shell: shell
        post_run_copy:
        - "{}"
        - "{}"
        langEnv: langEnv
        copy:
        - "{}"
        - "{}"
        username: 7
      properties:
        image:
          title: Docker image to use as a base
          type: string
        env:
          additionalProperties:
            type: string
          title: "An optional list of tuples(key, value) for defining env vars, translate\
            \ to an ENV statements"
          type: object
        path:
          items:
            type: string
          title: "An optional list of strings for exporting paths, translate to a\
            \ PATH statements"
          type: array
        copy:
          items:
            properties: {}
            type: object
          title: "An optional list of strings or tuples for copying paths, translate\
            \ to a COPY statements, if string is passed the path is copy to the workdir"
          type: array
        post_run_copy:
          items:
            properties: {}
            type: object
          title: "An optional list of strings or tuples for copying paths post run\
            \ commands to leverage the cache, translate to a COPY statements, if string\
            \ is passed the path is copy to the workdir"
          type: array
        run:
          items:
            type: string
          title: "An optional list of strings for executing Run commands, translate\
            \ to a RUN statements"
          type: array
        langEnv:
          title: "An optional string defining a language, e.g. en_US.UTF-8"
          type: string
        uid:
          format: int32
          title: A uid to use when creating the docker image
          type: integer
        gid:
          format: int32
          title: A gid to use when creating the docker image
          type: integer
        username:
          format: int32
          title: "Optional username value to use, default to \"polyaxon\""
          type: integer
        filename:
          title: A filename to give to the generated dockerfile
          type: string
        workdir:
          title: "A work dir to copy code to, default to /code"
          type: string
        workdirPath:
          title: An optional workdir path
          type: string
        shell:
          title: "An optional shell type, defaults to \"/bin/bash\""
          type: string
      title: Dockerfile type specification
      type: object
    v1EarlyStopping:
      example:
        median:
          minSamples: 1
          kind: median
          minInterval: 6
          evaluationInterval: 0
        metric:
          metric: metric
          optimization: null
          kind: metric_early_stopping
          value: value
          policy: "{}"
        failure:
          kind: failure_early_stopping
          percent: 7
        diff:
          minSamples: 7
          kind: kind
          minInterval: 2
          evaluationInterval: 5
          percent: 5.962134
        truncation:
          minSamples: 4
          includeSucceeded: true
          kind: truncation
          minInterval: 2
          evaluationInterval: 3
          percent: 9
      properties:
        median:
          $ref: '#/components/schemas/v1MedianStoppingPolicy'
        diff:
          $ref: '#/components/schemas/v1DiffStoppingPolicy'
        truncation:
          $ref: '#/components/schemas/v1TruncationStoppingPolicy'
        metric:
          $ref: '#/components/schemas/v1MetricEarlyStopping'
        failure:
          $ref: '#/components/schemas/v1FailureEarlyStopping'
      title: All Schemas message
      type: object
    v1EntitiesTags:
      properties:
        uuids:
          items:
            type: string
          type: array
        tags:
          items:
            type: string
          type: array
      type: object
    v1EntitiesTransfer:
      properties:
        uuids:
          items:
            type: string
          type: array
        project:
          type: string
      type: object
    v1EntityNotificationBody:
      properties:
        namespace:
          title: "Na,espace"
          type: string
        owner:
          title: Owner of the namespace
          type: string
        project:
          title: Project where the run will be assigned
          type: string
        uuid:
          title: Uuid identifier of the entity
          type: string
        name:
          title: Optional name of the entity
          type: string
        condition:
          $ref: '#/components/schemas/v1StatusCondition'
        connections:
          items:
            type: string
          title: Connections to notify
          type: array
      title: Request data to create/update entity status
      type: object
    v1EntityStageBodyRequest:
      properties:
        owner:
          title: Owner of the namespace
          type: string
        entity:
          title: Entity namespace
          type: string
        kind:
          title: "Optional kind, only required for an version entity"
          type: string
        name:
          title: Name of the entity to apply the stage to
          type: string
        condition:
          $ref: '#/components/schemas/v1StageCondition'
      title: Request data to create/update entity stage
      type: object
    v1EntityStatusBodyRequest:
      properties:
        owner:
          title: Owner of the namespace
          type: string
        project:
          title: Project where the run will be assigned
          type: string
        uuid:
          title: Uuid identifier of the entity
          type: string
        condition:
          $ref: '#/components/schemas/v1StatusCondition'
        force:
          title: Force flag
          type: boolean
      title: Request data to create/update entity status
      type: object
    v1Environment:
      example:
        nodeName: nodeName
        dnsPolicy: dnsPolicy
        serviceAccountName: serviceAccountName
        hostNetwork: true
        dnsConfig: "{}"
        imagePullSecrets:
        - imagePullSecrets
        - imagePullSecrets
        priorityClassName: priorityClassName
        annotations:
          key: annotations
        hostAliases:
        - null
        - null
        securityContext: "{}"
        priority: 3
        restartPolicy: restartPolicy
        labels:
          key: labels
        nodeSelector:
          key: nodeSelector
        tolerations:
        - null
        - null
        schedulerName: schedulerName
        affinity: "{}"
        hostPID: hostPID
      properties:
        labels:
          additionalProperties:
            type: string
          title: Optional Metadata labels to pass to k8s
          type: object
        annotations:
          additionalProperties:
            type: string
          title: Optional Metadata annotations to pass to k8s
          type: object
        nodeSelector:
          additionalProperties:
            type: string
          title: |-
            Optional NodeSelector is a selector which must be true for the pod to fit on a node.
            Selector which must match a node's labels for the pod to be scheduled on that node.
            More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
          type: object
        affinity:
          title: Placeholder for Affinity
          type: object
        tolerations:
          description: Optional Tolerations to apply.
          items:
            $ref: '#/components/schemas/v1Toleration'
          type: array
        nodeName:
          description: |-
            Optional NodeName is a request to schedule this pod onto a specific node. If it is non-empty,
            the scheduler simply schedules this pod onto that node, assuming that it fits resource
            requirements.
          type: string
        serviceAccountName:
          title: Optional service account name to use for this run
          type: string
        hostAliases:
          description: Optional HostAliases is an optional list of hosts and IPs that
            will be injected into the pod spec.
          items:
            $ref: '#/components/schemas/v1HostAlias'
          type: array
        securityContext:
          title: Placeholder for PodSecurityContext
          type: object
        imagePullSecrets:
          items:
            type: string
          title: |-
            Optional image pull secrets to use for this run
            ImagePullSecrets is a list of references to secrets in the same namespace to use for pulling any images
            in pods that reference this ServiceAccount. ImagePullSecrets are distinct from Secrets because Secrets
            can be mounted in the pod, but ImagePullSecrets are only accessed by the kubelet.
            More info: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
          type: array
        hostNetwork:
          description: Host networking requested for this workflow pod. Default to
            false.
          type: boolean
        hostPID:
          description: Use the host's pid namespace. Default to false.
          type: string
        dnsPolicy:
          description: |-
            Set DNS policy for the pod.
            Defaults to "ClusterFirst".
            Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'.
            DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy.
            To have DNS options set along with hostNetwork, you have to specify DNS policy
            explicitly to 'ClusterFirstWithHostNet'.
          type: string
        dnsConfig:
          title: Placeholder for PodDNSConfig
          type: object
        schedulerName:
          title: |-
            If specified, the pod will be dispatched by specified scheduler.
            Or it will be dispatched by workflow scope scheduler if specified.
            If neither specified, the pod will be dispatched by default scheduler.
            +optional
          type: string
        priorityClassName:
          description: |-
            If specified, indicates the pod's priority. "system-node-critical" and
            "system-cluster-critical" are two special keywords which indicate the
            highest priorities with the former being the highest priority. Any other
            name must be defined by creating a PriorityClass object with that name.
            If not specified, the pod priority will be default or zero if there is no
            default.
          type: string
        priority:
          description: |-
            The priority value. Various system components use this field to find the
            priority of the pod. When Priority Admission Controller is enabled, it
            prevents users from setting this field. The admission controller populates
            this field from PriorityClassName.
            The higher the value, the higher the priority.
          format: int32
          type: integer
        restartPolicy:
          title: A valid restart policy
          type: string
      title: Environment specification
      type: object
    v1Event:
      example:
        image:
          path: path
          colorspace: 8
          width: 3
          height: 2
        curve:
          annotation: annotation
          kind: null
          x:
          - 2.535259
          - 2.535259
          "y":
          - 6.173804
          - 6.173804
        video:
          path: path
          content_type: content_type
          colorspace: 0
          width: 9
          height: 2
        histogram:
          counts:
          - 0.4833312865174044
          - 0.4833312865174044
          values:
          - 4.518309517874243
          - 4.518309517874243
        artifact:
          path: path
          kind: null
        metric: 3.1497903
        step: 0
        html: html
        model:
          path: path
          framework: framework
          spec: "{}"
        audio:
          num_channels: 7
          path: path
          length_frames: 4
          sample_rate: 0.3526219
          content_type: content_type
        text: text
        dataframe:
          path: path
          content_type: content_type
        chart:
          figure: "{}"
          kind: null
        confusion:
          x:
          - "{}"
          - "{}"
          "y":
          - "{}"
          - "{}"
          z:
          - "{}"
          - "{}"
        timestamp: 2000-01-23T04:56:07.000+00:00
        span:
          outputs: "{}"
          metadata: "{}"
          finished_at: 2000-01-23T04:56:07.000+00:00
          children:
          - null
          - null
          inputs: "{}"
          kind: null
          name: name
          started_at: 2000-01-23T04:56:07.000+00:00
          uuid: uuid
          status_conditions:
          - reason: reason
            last_update_time: 2000-01-23T04:56:07.000+00:00
            meta_info: "{}"
            last_transition_time: 2000-01-23T04:56:07.000+00:00
            type: null
            message: message
            status: status
          - reason: reason
            last_update_time: 2000-01-23T04:56:07.000+00:00
            meta_info: "{}"
            last_transition_time: 2000-01-23T04:56:07.000+00:00
            type: null
            message: message
            status: status
          tags:
          - tags
          - tags
          status: null
      properties:
        timestamp:
          format: date-time
          title: Optional time when the entity was created
          type: string
        step:
          description: Global step of the event.
          format: int32
          type: integer
        metric:
          format: float
          type: number
        image:
          $ref: '#/components/schemas/v1EventImage'
        histogram:
          $ref: '#/components/schemas/v1EventHistogram'
        audio:
          $ref: '#/components/schemas/v1EventAudio'
        video:
          $ref: '#/components/schemas/v1EventVideo'
        html:
          type: string
        text:
          type: string
        chart:
          $ref: '#/components/schemas/v1EventChart'
        model:
          $ref: '#/components/schemas/v1EventModel'
        artifact:
          $ref: '#/components/schemas/v1EventArtifact'
        dataframe:
          $ref: '#/components/schemas/v1EventDataframe'
        curve:
          $ref: '#/components/schemas/v1EventCurve'
        confusion:
          $ref: '#/components/schemas/v1EventConfusionMatrix'
        span:
          $ref: '#/components/schemas/v1EventSpan'
      title: Event spec definition
      type: object
    v1EventArtifact:
      example:
        path: path
        kind: null
      properties:
        kind:
          $ref: '#/components/schemas/v1ArtifactKind'
        path:
          title: Filepath
          type: string
      title: Artifact spec definition
      type: object
    v1EventAudio:
      example:
        num_channels: 7
        path: path
        length_frames: 4
        sample_rate: 0.3526219
        content_type: content_type
      properties:
        sample_rate:
          description: Sample rate of the audio in Hz.
          format: float
          type: number
        num_channels:
          description: Number of channels of audio.
          format: int32
          type: integer
        length_frames:
          description: Length of the audio in frames (samples per channel).
          format: int32
          type: integer
        content_type:
          title: Content type of the audio
          type: string
        path:
          title: / Filepath
          type: string
      title: Audio spec definition
      type: object
    v1EventChart:
      example:
        figure: "{}"
        kind: null
      properties:
        kind:
          $ref: '#/components/schemas/v1EventChartKind'
        figure:
          properties: {}
          title: Figure json object
          type: object
      title: Chart spec definition
      type: object
    v1EventChartKind:
      default: plotly
      description: |-
        - plotly: Plotly chart
         - bokeh: Bokeh chart
         - vega: Vega chart
      enum:
      - plotly
      - bokeh
      - vega
      title: Chart kind
      type: string
    v1EventConfusionMatrix:
      example:
        x:
        - "{}"
        - "{}"
        "y":
        - "{}"
        - "{}"
        z:
        - "{}"
        - "{}"
      properties:
        x:
          items:
            properties: {}
            type: object
          title: X
          type: array
        "y":
          items:
            properties: {}
            type: object
          title: "Y"
          type: array
        z:
          items:
            properties: {}
            type: object
          title: Z
          type: array
      title: Cofusion matrix spec definition
      type: object
    v1EventCurve:
      example:
        annotation: annotation
        kind: null
        x:
        - 2.535259
        - 2.535259
        "y":
        - 6.173804
        - 6.173804
      properties:
        kind:
          $ref: '#/components/schemas/v1EventCurveKind'
        x:
          items:
            format: float
            type: number
          title: X
          type: array
        "y":
          items:
            format: float
            type: number
          title: "Y"
          type: array
        annotation:
          title: Annotation
          type: string
      title: Custom Curve spec definition
      type: object
    v1EventCurveKind:
      default: roc
      description: |-
        - roc: ROC curve
         - pr: Precision Recall curve
         - custom: Custom curve
      enum:
      - roc
      - pr
      - custom
      title: Curve kind
      type: string
    v1EventDataframe:
      example:
        path: path
        content_type: content_type
      properties:
        path:
          title: Filepath
          type: string
        content_type:
          title: Format
          type: string
      title: Dataframe spec definition
      type: object
    v1EventHistogram:
      example:
        counts:
        - 0.4833312865174044
        - 0.4833312865174044
        values:
        - 4.518309517874243
        - 4.518309517874243
      properties:
        values:
          items:
            format: double
            type: number
          type: array
        counts:
          items:
            format: double
            type: number
          type: array
      title: Histogram spec definition
      type: object
    v1EventImage:
      example:
        path: path
        colorspace: 8
        width: 3
        height: 2
      properties:
        height:
          description: Height of the image.
          format: int32
          type: integer
        width:
          description: Width of the image.
          format: int32
          type: integer
        colorspace:
          format: int32
          title: |-
            Valid colorspace values are
              1 - grayscale
              2 - grayscale + alpha
              3 - RGB
              4 - RGBA
              5 - DIGITAL_YUV
              6 - BGRA
          type: integer
        path:
          title: Filepath
          type: string
      title: Image spec definition
      type: object
    v1EventKind:
      default: run_status_created
      enum:
      - run_status_created
      - run_status_resuming
      - run_status_compiled
      - run_status_on_schedule
      - run_status_queued
      - run_status_scheduled
      - run_status_starting
      - run_status_running
      - run_status_processing
      - run_status_stopping
      - run_status_failed
      - run_status_stopped
      - run_status_succeeded
      - run_status_skipped
      - run_status_warning
      - run_status_unschedulable
      - run_status_upstream_failed
      - run_status_retrying
      - run_status_unknown
      - run_status_done
      - run_approved_actor
      - run_invalidated_actor
      - run_new_artifacts
      - connection_git_commit
      - connection_dataset_version
      - connection_registry_image
      - alert_info
      - alert_warning
      - alert_critical
      - model_version_new_metric
      - project_custom_event
      - org_custom_event
      type: string
    v1EventModel:
      example:
        path: path
        framework: framework
        spec: "{}"
      properties:
        framework:
          title: Model framwork
          type: string
        path:
          title: Filepath
          type: string
        spec:
          properties: {}
          title: Model spec (a dictionnary defnining the requirement for the model)
          type: object
      title: Model spec definition
      type: object
    v1EventSpan:
      example:
        outputs: "{}"
        metadata: "{}"
        finished_at: 2000-01-23T04:56:07.000+00:00
        children:
        - null
        - null
        inputs: "{}"
        kind: null
        name: name
        started_at: 2000-01-23T04:56:07.000+00:00
        uuid: uuid
        status_conditions:
        - reason: reason
          last_update_time: 2000-01-23T04:56:07.000+00:00
          meta_info: "{}"
          last_transition_time: 2000-01-23T04:56:07.000+00:00
          type: null
          message: message
          status: status
        - reason: reason
          last_update_time: 2000-01-23T04:56:07.000+00:00
          meta_info: "{}"
          last_transition_time: 2000-01-23T04:56:07.000+00:00
          type: null
          message: message
          status: status
        tags:
        - tags
        - tags
        status: null
      properties:
        uuid:
          title: UUID
          type: string
        name:
          title: Name
          type: string
        tags:
          items:
            type: string
          title: Tags
          type: array
        started_at:
          format: date-time
          title: Start time
          type: string
        finished_at:
          format: date-time
          title: End time
          type: string
        status:
          $ref: '#/components/schemas/v1Statuses'
        status_conditions:
          items:
            $ref: '#/components/schemas/v1StatusCondition'
          title: Status conditions
          type: array
        metadata:
          properties: {}
          title: Metadata
          type: object
        inputs:
          properties: {}
          title: Inputs
          type: object
        outputs:
          properties: {}
          title: Outputs
          type: object
        children:
          items:
            $ref: '#/components/schemas/v1EventSpan'
          title: Child events
          type: array
        kind:
          $ref: '#/components/schemas/v1EventSpanKind'
      title: Trace/Span spec definition
      type: object
    v1EventSpanKind:
      default: llm
      enum:
      - llm
      - chain
      - agent
      - tool
      - embedding
      - retriever
      title: Curve kind
      type: string
    v1EventTrigger:
      example:
        ref: ref
        kinds:
        - null
        - null
      properties:
        kinds:
          items:
            $ref: '#/components/schemas/v1EventKind'
          title: The event kinds to subscribe to for the current reference
          type: array
        ref:
          title: Ref corresponds to a reference of an object
          type: string
      title: Event definition
      type: object
    v1EventType:
      example:
        kind: null
        name: name
      properties:
        name:
          title: Name of the event
          type: string
        kind:
          $ref: '#/components/schemas/v1ArtifactKind'
      title: Event type specification
      type: object
    v1EventVideo:
      example:
        path: path
        content_type: content_type
        colorspace: 0
        width: 9
        height: 2
      properties:
        height:
          description: Height of the video.
          format: int32
          type: integer
        width:
          description: Width of the video.
          format: int32
          type: integer
        colorspace:
          format: int32
          title: |-
            Valid colorspace values are
              1 - grayscale
              2 - grayscale + alpha
              3 - RGB
              4 - RGBA
              5 - DIGITAL_YUV
              6 - BGRA
          type: integer
        path:
          title: Filepath
          type: string
        content_type:
          title: Content type of the video
          type: string
      title: Video spec definition
      type: object
    v1EventsResponse:
      example:
        data:
        - "{}"
        - "{}"
      properties:
        data:
          items:
            properties: {}
            type: object
          title: Events data
          type: array
      title: Events response definition
      type: object
    v1FailureEarlyStopping:
      description: |-
        FailureEarlyStoppingSchema specification
        Early stopping based on failure config.
        this policy stops based on a percentage of
        failed runs at every evaluation.
      example:
        kind: failure_early_stopping
        percent: 7
      properties:
        kind:
          default: failure_early_stopping
          title: "Kind of this metric early stopping policy, should be equal to \"\
            failure_early_stopping\""
          type: string
        percent:
          description: |-
            The percentage of failed runs, at each evaluation interval.
            e.g. 1 - 99.
          format: int32
          type: integer
      type: object
    v1FileType:
      example:
        filename: filename
        kind: kind
        chmod: chmod
        content: content
      properties:
        content:
          title: File content
          type: string
        filename:
          title: A name to give to the generated file
          type: string
        chmod:
          title: "An optional permissions to apply to the file after creation, e.g\
            \ +x"
          type: string
        kind:
          title: An optional Artifact kind to log the lineage information
          type: string
      title: File type specification
      type: object
    v1GcsType:
      example:
        bucket: bucket
        blob: blob
      properties:
        bucket:
          title: Optional container
          type: string
        blob:
          title: Optional storage_account
          type: string
      title: Wasb type specification
      type: object
    v1GitConnection:
      example:
        flags:
        - flags
        - flags
        url: url
        revision: true
      properties:
        url:
          title: Url
          type: string
        revision:
          title: revision
          type: boolean
        flags:
          items:
            type: string
          title: Additional command flag
          type: array
      title: Git connection schema validation connection
      type: object
    v1GitType:
      example:
        flags:
        - flags
        - flags
        url: url
        revision: revision
      properties:
        url:
          title: Optional Url
          type: string
        revision:
          title: Optional revision
          type: string
        flags:
          items:
            type: string
          title: Addional command flag
          type: array
      title: "Git type specification, url or a connection is required"
      type: object
    v1GridSearch:
      example:
        seed: 7
        numRuns: 6
        kind: grid
        params:
          key: "{}"
        earlyStopping:
        - "{}"
        - "{}"
        concurrency: 1
      properties:
        kind:
          default: grid
          title: "Kind of matrix, should be equal to \"grid\""
          type: string
        params:
          additionalProperties:
            properties: {}
            type: object
          title: Hyperparams/Space definition of params to traverse
          type: object
        numRuns:
          format: int32
          title: Number of runs to generate and search
          type: integer
        seed:
          format: int32
          title: Seed for the random generator
          type: integer
        concurrency:
          format: int32
          title: Number of concurrent runs
          type: integer
        earlyStopping:
          items:
            properties: {}
            type: object
          title: "A list of Early stopping objects, accpets both metric and failure\
            \ early stopping mechanisms"
          type: array
      title: Matrix based on grid/cartesian product generated search space
      type: object
    v1Hook:
      example:
        presets:
        - presets
        - presets
        hubRef: hubRef
        namespace: namespace
        disableDefaults: true
        connection: connection
        trigger: null
        conditions: conditions
        params:
          key:
            ref: ref
            toEnv: toEnv
            contextOnly: true
            connection: connection
            toInit: true
            value: "{}"
        queue: queue
      properties:
        hubRef:
          title: Component name to use
          type: string
        connection:
          title: Connection to use
          type: string
        trigger:
          $ref: '#/components/schemas/v1Statuses'
        conditions:
          title: An optional template containing conditions to check before starting
            the run
          type: string
        params:
          additionalProperties:
            $ref: '#/components/schemas/v1Param'
          title: Optional dict of params
          type: object
        presets:
          items:
            type: string
          title: Optional preset to use for running this operation
          type: array
        queue:
          title: Optional queue to use for scheduling the hook
          type: string
        namespace:
          title: "Optional namespace to use, uses agent's namespace by default"
          type: string
        disableDefaults:
          title: Optional params context from the main operation
          type: boolean
      title: Hook definition
      type: object
    v1HostAlias:
      title: Placeholder for HostAlias
      type: object
    v1HostConnection:
      example:
        insecure: true
        url: url
      properties:
        url:
          title: Url
          type: string
        insecure:
          title: insecure
          type: boolean
      title: Host connection schema validation connection
      type: object
    v1HostPathConnection:
      example:
        mountPath: mountPath
        kind: "{}"
        readOnly: true
        hostPath: hostPath
      properties:
        hostPath:
          title: host path
          type: string
        mountPath:
          title: Mount path
          type: string
        readOnly:
          title: Read Only
          type: boolean
        kind:
          type: object
      title: Host path connection schema validation specification
      type: object
    v1HpChoice:
      example:
        kind: choice
        value: "{}"
      properties:
        kind:
          default: choice
          title: "Kind of hp, should be equal to \"choice\""
          type: string
        value:
          properties: {}
          title: Value
          type: object
      title: HP Choice specification
      type: object
    v1HpDateRange:
      example:
        kind: daterange
        value: "{}"
      properties:
        kind:
          default: daterange
          title: "Kind of hp, should be equal to \"daterange\""
          type: string
        value:
          properties: {}
          title: Value
          type: object
      title: DateRange specification
      type: object
    v1HpDateTimeRange:
      example:
        kind: datetimerange
        value: "{}"
      properties:
        kind:
          default: datetimerange
          title: "Kind of hp, should be equal to \"datetimerange\""
          type: string
        value:
          properties: {}
          title: Value
          type: object
      title: DateTimeRange specification
      type: object
    v1HpGeomSpace:
      example:
        kind: geomspace
        value: "{}"
      properties:
        kind:
          default: geomspace
          title: "Kind of hp, should be equal to \"geomspace\""
          type: string
        value:
          properties: {}
          title: Value
          type: object
      title: HP Geom Space specification
      type: object
    v1HpLinSpace:
      example:
        kind: linspace
        value: "{}"
      properties:
        kind:
          default: linspace
          title: "Kind of hp, should be equal to \"linspace\""
          type: string
        value:
          properties: {}
          title: Value
          type: object
      title: HP Linear Space specification
      type: object
    v1HpLogNormal:
      example:
        kind: lognormal
        value: "{}"
      properties:
        kind:
          default: lognormal
          title: "Kind of hp, should be equal to \"lognormal\""
          type: string
        value:
          properties: {}
          title: Value
          type: object
      title: HP Log Normal Dist specification
      type: object
    v1HpLogSpace:
      example:
        kind: logspace
        value: "{}"
      properties:
        kind:
          default: logspace
          title: "Kind of hp, should be equal to \"logspace\""
          type: string
        value:
          properties: {}
          title: Value
          type: object
      title: HP Log Space specification
      type: object
    v1HpLogUniform:
      example:
        kind: loguniform
        value: "{}"
      properties:
        kind:
          default: loguniform
          title: "Kind of hp, should be equal to \"loguniform\""
          type: string
        value:
          properties: {}
          title: Value
          type: object
      title: HP Log Uniform Dist specification
      type: object
    v1HpNormal:
      example:
        kind: normal
        value: "{}"
      properties:
        kind:
          default: normal
          title: "Kind of hp, should be equal to \"normal\""
          type: string
        value:
          properties: {}
          title: Value
          type: object
      title: HP Normal Dist specification
      type: object
    v1HpPChoice:
      example:
        kind: pchoice
        value: "{}"
      properties:
        kind:
          default: pchoice
          title: "Kind of hp, should be equal to \"pchoice\""
          type: string
        value:
          properties: {}
          title: Value
          type: object
      title: HP Probabilistic Choice specification
      type: object
    v1HpParams:
      example:
        normal:
          kind: normal
          value: "{}"
        lognormal:
          kind: lognormal
          value: "{}"
        daterange:
          kind: daterange
          value: "{}"
        pchoice:
          kind: pchoice
          value: "{}"
        range:
          kind: range
          value: "{}"
        quniform:
          kind: quniform
          value: "{}"
        datetimerange:
          kind: datetimerange
          value: "{}"
        qlognormal:
          kind: qlognormal
          value: "{}"
        uniform:
          kind: uniform
          value: "{}"
        geomspace:
          kind: geomspace
          value: "{}"
        loguniform:
          kind: loguniform
          value: "{}"
        qloguniform:
          kind: qloguniform
          value: "{}"
        choice:
          kind: choice
          value: "{}"
        logspace:
          kind: logspace
          value: "{}"
        linspace:
          kind: linspace
          value: "{}"
        qnormal:
          kind: qnormal
          value: "{}"
      properties:
        choice:
          $ref: '#/components/schemas/v1HpChoice'
        pchoice:
          $ref: '#/components/schemas/v1HpPChoice'
        range:
          $ref: '#/components/schemas/v1HpRange'
        linspace:
          $ref: '#/components/schemas/v1HpLinSpace'
        logspace:
          $ref: '#/components/schemas/v1HpLogSpace'
        geomspace:
          $ref: '#/components/schemas/v1HpGeomSpace'
        uniform:
          $ref: '#/components/schemas/v1HpUniform'
        quniform:
          $ref: '#/components/schemas/v1HpQUniform'
        loguniform:
          $ref: '#/components/schemas/v1HpLogUniform'
        qloguniform:
          $ref: '#/components/schemas/v1HpQLogUniform'
        normal:
          $ref: '#/components/schemas/v1HpNormal'
        qnormal:
          $ref: '#/components/schemas/v1HpQNormal'
        lognormal:
          $ref: '#/components/schemas/v1HpLogNormal'
        qlognormal:
          $ref: '#/components/schemas/v1HpQLogNormal'
        daterange:
          $ref: '#/components/schemas/v1HpDateRange'
        datetimerange:
          $ref: '#/components/schemas/v1HpDateTimeRange'
      title: Hp Matrix specification
      type: object
    v1HpQLogNormal:
      example:
        kind: qlognormal
        value: "{}"
      properties:
        kind:
          default: qlognormal
          title: "Kind of hp, should be equal to \"qlognormal\""
          type: string
        value:
          properties: {}
          title: Value
          type: object
      title: HP Quantized Log Normal Dist specification
      type: object
    v1HpQLogUniform:
      example:
        kind: qloguniform
        value: "{}"
      properties:
        kind:
          default: qloguniform
          title: "Kind of hp, should be equal to \"qloguniform\""
          type: string
        value:
          properties: {}
          title: Value
          type: object
      title: HP Quantized Log Uniform Dist specification
      type: object
    v1HpQNormal:
      example:
        kind: qnormal
        value: "{}"
      properties:
        kind:
          default: qnormal
          title: "Kind of hp, should be equal to \"qnormal\""
          type: string
        value:
          properties: {}
          title: Value
          type: object
      title: HP Quantized Normal Dist specification
      type: object
    v1HpQUniform:
      example:
        kind: quniform
        value: "{}"
      properties:
        kind:
          default: quniform
          title: "Kind of hp, should be equal to \"quniform\""
          type: string
        value:
          properties: {}
          title: Value
          type: object
      title: HP Quantized Uniform Dist specification
      type: object
    v1HpRange:
      example:
        kind: range
        value: "{}"
      properties:
        kind:
          default: range
          title: "Kind of hp, should be equal to \"range\""
          type: string
        value:
          properties: {}
          title: Value
          type: object
      title: HP Range specification
      type: object
    v1HpUniform:
      example:
        kind: uniform
        value: "{}"
      properties:
        kind:
          default: uniform
          title: "Kind of hp, should be equal to \"uniform\""
          type: string
        value:
          properties: {}
          title: Value
          type: object
      title: HP Uniform Dist specification
      type: object
    v1HubRef:
      example:
        kind: hub_ref
        name: name
      properties:
        kind:
          default: hub_ref
          title: "Kind of reference, should be equal to \"hub_ref\""
          type: string
        name:
          title: Value
          type: string
      title: Hub reference specification
      type: object
    v1Hyperband:
      example:
        resume: true
        maxIterations: 4
        eta: 5
        tuner:
          presets:
          - presets
          - presets
          hubRef: hubRef
          namespace: namespace
          params:
            key:
              ref: ref
              toEnv: toEnv
              contextOnly: true
              connection: connection
              toInit: true
              value: "{}"
          queue: queue
        seed: 9
        resource:
          name: name
          type: null
        metric:
          optimization: null
          name: name
        kind: hyperband
        params:
          key: "{}"
        earlyStopping:
        - "{}"
        - "{}"
        concurrency: 9
      properties:
        kind:
          default: hyperband
          title: "Kind of matrix, should be equal to \"hyperband\""
          type: string
        params:
          additionalProperties:
            properties: {}
            type: object
          title: Hyperparams/Space definition of params to traverse
          type: object
        maxIterations:
          format: int32
          title: Maximim number of iteration to produce new observations
          type: integer
        eta:
          format: int32
          title: Eta
          type: integer
        resource:
          $ref: '#/components/schemas/v1OptimizationResource'
        metric:
          $ref: '#/components/schemas/v1OptimizationMetric'
        resume:
          title: A flag to resume or restart the selected runs
          type: boolean
        seed:
          format: int32
          title: Seed for the random generator
          type: integer
        concurrency:
          format: int32
          title: Number of concurrent runs
          type: integer
        tuner:
          $ref: '#/components/schemas/v1Tuner'
        earlyStopping:
          items:
            properties: {}
            type: object
          title: "A list of Early stopping objects, accpets both metric and failure\
            \ early stopping mechanisms"
          type: array
      title: Matrix based on hyperband
      type: object
    v1Hyperopt:
      example:
        maxIterations: 6
        tuner:
          presets:
          - presets
          - presets
          hubRef: hubRef
          namespace: namespace
          params:
            key:
              ref: ref
              toEnv: toEnv
              contextOnly: true
              connection: connection
              toInit: true
              value: "{}"
          queue: queue
        seed: 1
        numRuns: 3
        metric:
          optimization: null
          name: name
        kind: hyperopt
        params:
          key: "{}"
        earlyStopping:
        - "{}"
        - "{}"
        algorithm: null
        concurrency: 2
      properties:
        kind:
          default: hyperopt
          title: "Kind of matrix, should be equal to \"hyperopt\""
          type: string
        algorithm:
          $ref: '#/components/schemas/v1HyperoptAlgorithms'
        params:
          additionalProperties:
            properties: {}
            type: object
          title: Hyperparams/Space definition of params to traverse
          type: object
        numRuns:
          format: int32
          title: Number of runs to generate and search
          type: integer
        maxIterations:
          format: int32
          title: Maximum number of iteration to produce new observations
          type: integer
        metric:
          $ref: '#/components/schemas/v1OptimizationMetric'
        seed:
          format: int32
          title: Seed for the random generator
          type: integer
        concurrency:
          format: int32
          title: Number of concurrent runs
          type: integer
        tuner:
          $ref: '#/components/schemas/v1Tuner'
        earlyStopping:
          items:
            properties: {}
            type: object
          title: "A list of Early stopping objects, accepts both metric and failure\
            \ early stopping mechanisms"
          type: array
      title: Matrix based on hyperopt
      type: object
    v1HyperoptAlgorithms:
      default: tpe
      description: |-
        - tpe: tpe algorithm
         - rand: random algorithm
         - anneal: anneal algorithm
      enum:
      - tpe
      - rand
      - anneal
      title: Hyperopt algorithms enum
      type: string
    v1IO:
      example:
        delayValidation: true
        toEnv: toEnv
        description: description
        isOptional: true
        type: type
        isList: true
        isFlag: true
        argFormat: argFormat
        name: name
        options:
        - "{}"
        - "{}"
        connection: connection
        toInit: true
        value: "{}"
        validation:
          multipleOf: 0
          maxItems: 8
          excludes:
          - "{}"
          - "{}"
          keys:
          - keys
          - keys
          minLength: 5
          lt: 7
          maxDigits: 0
          containsKeys:
          - containsKeys
          - containsKeys
          gt: 1
          minItems: 6
          regex: regex
          contains:
          - "{}"
          - "{}"
          delay: true
          decimalPlaces: 7
          excludesKeys:
          - excludesKeys
          - excludesKeys
          minDigits: 9
          options:
          - "{}"
          - "{}"
          le: 9
          ge: 4
          maxLength: 4
      properties:
        name:
          title: Name for the input/output
          type: string
        description:
          title: Description for the input/output
          type: string
        type:
          title: The type of the input/output
          type: string
        value:
          properties: {}
          title: The value of the input/output should be compatible with the type
          type: object
        isOptional:
          title: A flag to tell if this input/output is optional
          type: boolean
        isList:
          title: A flag to tell if this input/output is list
          type: boolean
        isFlag:
          title: "A flag to tell if this input/output is flag, only valid for bool\
            \ type"
          type: boolean
        argFormat:
          title: An optional argFromat of the input/output to be used instead of passing
            the value as is
          type: string
        connection:
          title: A flag to signal to Polyaxon that this io is used with a connection
          type: string
        toInit:
          title: A flag to signal to Polyaxon that this io must be tranformed to an
            init container
          type: boolean
        toEnv:
          title: A flag to signal to Polyaxon that this io must be tranformed to the
            environment variable passed
          type: string
        validation:
          $ref: '#/components/schemas/v1Validation'
        delayValidation:
          title: (Deprecated) A flag to tell if param validation for this input/output
            should be delayed
          type: boolean
        options:
          items:
            properties: {}
            type: object
          title: (Deprecated) An optional field to provide possible values for validation
          type: array
      title: Inputs/Outputs specification
      type: object
    v1Init:
      example:
        modelRef: modelRef
        container: "{}"
        path: path
        git:
          flags:
          - flags
          - flags
          url: url
          revision: revision
        file:
          filename: filename
          kind: kind
          chmod: chmod
          content: content
        tensorboard:
          port: 6
          plugins: plugins
          use_names: true
          uuids:
          - uuids
          - uuids
          path_prefix: path_prefix
        artifactRef: artifactRef
        paths:
        - "{}"
        - "{}"
        dockerfile:
          image: image
          gid: 0
          workdirPath: workdirPath
          run:
          - run
          - run
          env:
            key: env
          path:
          - path
          - path
          uid: 7
          filename: filename
          workdir: workdir
          shell: shell
          post_run_copy:
          - "{}"
          - "{}"
          langEnv: langEnv
          copy:
          - "{}"
          - "{}"
          username: 7
        connection: connection
        lineageRef: lineageRef
        artifacts:
          files:
          - "{}"
          - "{}"
          dirs:
          - "{}"
          - "{}"
          workers: 3
      properties:
        artifacts:
          $ref: '#/components/schemas/v1ArtifactsType'
        paths:
          items:
            properties: {}
            type: object
          title: Paths initializer
          type: array
        git:
          $ref: '#/components/schemas/v1GitType'
        dockerfile:
          $ref: '#/components/schemas/v1DockerfileType'
        file:
          $ref: '#/components/schemas/v1FileType'
        tensorboard:
          $ref: '#/components/schemas/v1TensorboardType'
        lineageRef:
          title: Lineage reference initializer
          type: string
        artifactRef:
          title: Artifact version initializer
          type: string
        modelRef:
          title: Model version initializer
          type: string
        connection:
          title: "Optional, connection to use with this initializer"
          type: string
        path:
          title: "Optional context path, the path to mount to main the container"
          type: string
        container:
          title: Placeholder for Container
          type: object
      title: Initializer specification
      type: object
    v1Installation:
      example:
        mode: mode
        auth:
        - auth
        - auth
        hmac: hmac
        defaultStreamsUrl: defaultStreamsUrl
        host: host
        dist: dist
        orgs: true
        singleUrl: true
        version: version
        key: key
      properties:
        key:
          type: string
        version:
          type: string
        dist:
          type: string
        host:
          type: string
        hmac:
          type: string
        mode:
          type: string
        orgs:
          type: boolean
        singleUrl:
          type: boolean
        defaultStreamsUrl:
          type: string
        auth:
          items:
            type: string
          type: array
      type: object
    v1IntervalSchedule:
      example:
        dependsOnPast: true
        maxRuns: 9
        kind: interval
        endAt: 2000-01-23T04:56:07.000+00:00
        startAt: 2000-01-23T04:56:07.000+00:00
        frequency: 5
      properties:
        kind:
          default: interval
          title: "Kind of schedule, should be equal to \"interval\""
          type: string
        startAt:
          format: date-time
          title: When to start this interval schedule
          type: string
        endAt:
          format: date-time
          title: Whan to end this interval schedule
          type: string
        maxRuns:
          format: int32
          title: Limit to stop executing this schedule
          type: integer
        frequency:
          format: int32
          title: Frequency (timedelta) at which to execute the runs
          type: integer
        dependsOnPast:
          title: A flag to set a dependency on past executions
          type: boolean
      title: Interval schedule specification
      type: object
    v1Iterative:
      example:
        maxIterations: 6
        tuner:
          presets:
          - presets
          - presets
          hubRef: hubRef
          namespace: namespace
          params:
            key:
              ref: ref
              toEnv: toEnv
              contextOnly: true
              connection: connection
              toInit: true
              value: "{}"
          queue: queue
        seed: 6
        kind: iterative
        params:
          key: "{}"
        earlyStopping:
        - "{}"
        - "{}"
        concurrency: 5
      properties:
        kind:
          default: iterative
          title: "Kind of matrix, should be equal to \"iterative\""
          type: string
        params:
          additionalProperties:
            properties: {}
            type: object
          title: Hyperparam/Space definition of params to traverse
          type: object
        maxIterations:
          format: int32
          title: Maximum number of iteration to produce new observations
          type: integer
        seed:
          format: int32
          title: Seed for the random generator
          type: integer
        concurrency:
          format: int32
          title: Number of concurrent runs
          type: integer
        tuner:
          $ref: '#/components/schemas/v1Tuner'
        earlyStopping:
          items:
            properties: {}
            type: object
          title: "A list of Early stopping objects, accepts both metric and failure\
            \ early stopping mechanisms"
          type: array
      title: Matrix based on a custom iterative algorithm (suggestions -> mapping
        -> reduce -> repeat)
      type: object
    v1Job:
      example:
        container: "{}"
        init:
        - modelRef: modelRef
          container: "{}"
          path: path
          git:
            flags:
            - flags
            - flags
            url: url
            revision: revision
          file:
            filename: filename
            kind: kind
            chmod: chmod
            content: content
          tensorboard:
            port: 6
            plugins: plugins
            use_names: true
            uuids:
            - uuids
            - uuids
            path_prefix: path_prefix
          artifactRef: artifactRef
          paths:
          - "{}"
          - "{}"
          dockerfile:
            image: image
            gid: 0
            workdirPath: workdirPath
            run:
            - run
            - run
            env:
              key: env
            path:
            - path
            - path
            uid: 7
            filename: filename
            workdir: workdir
            shell: shell
            post_run_copy:
            - "{}"
            - "{}"
            langEnv: langEnv
            copy:
            - "{}"
            - "{}"
            username: 7
          connection: connection
          lineageRef: lineageRef
          artifacts:
            files:
            - "{}"
            - "{}"
            dirs:
            - "{}"
            - "{}"
            workers: 3
        - modelRef: modelRef
          container: "{}"
          path: path
          git:
            flags:
            - flags
            - flags
            url: url
            revision: revision
          file:
            filename: filename
            kind: kind
            chmod: chmod
            content: content
          tensorboard:
            port: 6
            plugins: plugins
            use_names: true
            uuids:
            - uuids
            - uuids
            path_prefix: path_prefix
          artifactRef: artifactRef
          paths:
          - "{}"
          - "{}"
          dockerfile:
            image: image
            gid: 0
            workdirPath: workdirPath
            run:
            - run
            - run
            env:
              key: env
            path:
            - path
            - path
            uid: 7
            filename: filename
            workdir: workdir
            shell: shell
            post_run_copy:
            - "{}"
            - "{}"
            langEnv: langEnv
            copy:
            - "{}"
            - "{}"
            username: 7
          connection: connection
          lineageRef: lineageRef
          artifacts:
            files:
            - "{}"
            - "{}"
            dirs:
            - "{}"
            - "{}"
            workers: 3
        sidecars:
        - null
        - null
        environment:
          nodeName: nodeName
          dnsPolicy: dnsPolicy
          serviceAccountName: serviceAccountName
          hostNetwork: true
          dnsConfig: "{}"
          imagePullSecrets:
          - imagePullSecrets
          - imagePullSecrets
          priorityClassName: priorityClassName
          annotations:
            key: annotations
          hostAliases:
          - null
          - null
          securityContext: "{}"
          priority: 3
          restartPolicy: restartPolicy
          labels:
            key: labels
          nodeSelector:
            key: nodeSelector
          tolerations:
          - null
          - null
          schedulerName: schedulerName
          affinity: "{}"
          hostPID: hostPID
        kind: job
        volumes:
        - null
        - null
        connections:
        - connections
        - connections
      properties:
        kind:
          default: job
          title: "Optional component kind, should be equal to 'job'"
          type: string
        environment:
          $ref: '#/components/schemas/v1Environment'
        connections:
          items:
            type: string
          title: Optional connections section
          type: array
        volumes:
          description: Volumes is a list of volumes that can be mounted.
          items:
            $ref: '#/components/schemas/v1Volume'
          type: array
        init:
          items:
            $ref: '#/components/schemas/v1Init'
          title: Optional init connections/containers section
          type: array
        sidecars:
          items:
            $ref: '#/components/schemas/v1Container'
          title: Optional sidecars section
          type: array
        container:
          title: Placeholder for Container
          type: object
      title: Job specification
      type: object
    v1Join:
      example:
        ref: ref
        offset: 0
        query: query
        limit: 4
        sort: sort
        params:
          key:
            toEnv: toEnv
            contextOnly: true
            connection: connection
            toInit: true
            value: value
      properties:
        ref:
          title: An optional ref to an already saved search
          type: string
        query:
          title: The search query
          type: string
        sort:
          title: The search sort
          type: string
        limit:
          format: int32
          title: The search limit
          type: integer
        offset:
          format: int32
          title: The search offset
          type: integer
        params:
          additionalProperties:
            $ref: '#/components/schemas/v1JoinParam'
          title: The params mapping keys to the values to pull from the join
          type: object
      title: Join specification
      type: object
    v1JoinParam:
      example:
        toEnv: toEnv
        contextOnly: true
        connection: connection
        toInit: true
        value: value
      properties:
        value:
          title: "The value to pass, if no ref or search is passed then it corresponds\
            \ to a literal value"
          type: string
        connection:
          title: A flag to signal to Polyaxon that this param is used with a connection
          type: string
        toInit:
          title: A flag to signal to Polyaxon that this param must be tranformed to
            an init container
          type: boolean
        toEnv:
          title: A flag to signal to Polyaxon that this param must be tranformed to
            the environment variable passed
          type: string
        contextOnly:
          title: A flag to signal to Polyaxon that this param should not be validated
            against io
          type: boolean
      title: JoinParam specification
      type: object
    v1KFReplica:
      example:
        container: "{}"
        init:
        - modelRef: modelRef
          container: "{}"
          path: path
          git:
            flags:
            - flags
            - flags
            url: url
            revision: revision
          file:
            filename: filename
            kind: kind
            chmod: chmod
            content: content
          tensorboard:
            port: 6
            plugins: plugins
            use_names: true
            uuids:
            - uuids
            - uuids
            path_prefix: path_prefix
          artifactRef: artifactRef
          paths:
          - "{}"
          - "{}"
          dockerfile:
            image: image
            gid: 0
            workdirPath: workdirPath
            run:
            - run
            - run
            env:
              key: env
            path:
            - path
            - path
            uid: 7
            filename: filename
            workdir: workdir
            shell: shell
            post_run_copy:
            - "{}"
            - "{}"
            langEnv: langEnv
            copy:
            - "{}"
            - "{}"
            username: 7
          connection: connection
          lineageRef: lineageRef
          artifacts:
            files:
            - "{}"
            - "{}"
            dirs:
            - "{}"
            - "{}"
            workers: 3
        - modelRef: modelRef
          container: "{}"
          path: path
          git:
            flags:
            - flags
            - flags
            url: url
            revision: revision
          file:
            filename: filename
            kind: kind
            chmod: chmod
            content: content
          tensorboard:
            port: 6
            plugins: plugins
            use_names: true
            uuids:
            - uuids
            - uuids
            path_prefix: path_prefix
          artifactRef: artifactRef
          paths:
          - "{}"
          - "{}"
          dockerfile:
            image: image
            gid: 0
            workdirPath: workdirPath
            run:
            - run
            - run
            env:
              key: env
            path:
            - path
            - path
            uid: 7
            filename: filename
            workdir: workdir
            shell: shell
            post_run_copy:
            - "{}"
            - "{}"
            langEnv: langEnv
            copy:
            - "{}"
            - "{}"
            username: 7
          connection: connection
          lineageRef: lineageRef
          artifacts:
            files:
            - "{}"
            - "{}"
            dirs:
            - "{}"
            - "{}"
            workers: 3
        sidecars:
        - null
        - null
        environment:
          nodeName: nodeName
          dnsPolicy: dnsPolicy
          serviceAccountName: serviceAccountName
          hostNetwork: true
          dnsConfig: "{}"
          imagePullSecrets:
          - imagePullSecrets
          - imagePullSecrets
          priorityClassName: priorityClassName
          annotations:
            key: annotations
          hostAliases:
          - null
          - null
          securityContext: "{}"
          priority: 3
          restartPolicy: restartPolicy
          labels:
            key: labels
          nodeSelector:
            key: nodeSelector
          tolerations:
          - null
          - null
          schedulerName: schedulerName
          affinity: "{}"
          hostPID: hostPID
        replicas: 1
        volumes:
        - null
        - null
        connections:
        - connections
        - connections
      properties:
        replicas:
          format: int32
          title: Number of replicas
          type: integer
        environment:
          $ref: '#/components/schemas/v1Environment'
        connections:
          items:
            type: string
          title: Optional connections section
          type: array
        volumes:
          items:
            $ref: '#/components/schemas/v1Volume'
          title: Optional connections section
          type: array
        init:
          items:
            $ref: '#/components/schemas/v1Init'
          title: Optional init connections section
          type: array
        sidecars:
          items:
            $ref: '#/components/schemas/v1Container'
          title: Optional sidecars section
          type: array
        container:
          title: Placeholder for Container
          type: object
      title: Distributed Replica specification
      type: object
    v1ListActivitiesResponse:
      example:
        next: next
        previous: previous
        count: 0
        results:
        - actor: actor
          owner: owner
          event_action: event_action
          object_name: object_name
          created_at: 2000-01-23T04:56:07.000+00:00
          object_uuid: object_uuid
          object_parent: object_parent
          event_subject: event_subject
        - actor: actor
          owner: owner
          event_action: event_action
          object_name: object_name
          created_at: 2000-01-23T04:56:07.000+00:00
          object_uuid: object_uuid
          object_parent: object_parent
          event_subject: event_subject
      properties:
        count:
          format: int32
          title: Count of the entities
          type: integer
        results:
          items:
            $ref: '#/components/schemas/v1Activity'
          title: List of all entities
          type: array
        previous:
          title: Previous page
          type: string
        next:
          title: Next page
          type: string
      title: Contains list of activities
      type: object
    v1ListAgentsResponse:
      example:
        next: next
        previous: previous
        count: 0
        results:
        - settings: "{}"
          version_api: "{}"
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          live_state: 6
          is_replica: true
          uuid: uuid
          version: version
          is_ui_managed: true
          content: content
          tags:
          - tags
          - tags
          hostname: hostname
          updated_at: 2000-01-23T04:56:07.000+00:00
          stats: "{}"
          name: name
          namespace: namespace
          status_conditions:
          - reason: reason
            last_update_time: 2000-01-23T04:56:07.000+00:00
            meta_info: "{}"
            last_transition_time: 2000-01-23T04:56:07.000+00:00
            type: null
            message: message
            status: status
          - reason: reason
            last_update_time: 2000-01-23T04:56:07.000+00:00
            meta_info: "{}"
            last_transition_time: 2000-01-23T04:56:07.000+00:00
            type: null
            message: message
            status: status
          status: null
        - settings: "{}"
          version_api: "{}"
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          live_state: 6
          is_replica: true
          uuid: uuid
          version: version
          is_ui_managed: true
          content: content
          tags:
          - tags
          - tags
          hostname: hostname
          updated_at: 2000-01-23T04:56:07.000+00:00
          stats: "{}"
          name: name
          namespace: namespace
          status_conditions:
          - reason: reason
            last_update_time: 2000-01-23T04:56:07.000+00:00
            meta_info: "{}"
            last_transition_time: 2000-01-23T04:56:07.000+00:00
            type: null
            message: message
            status: status
          - reason: reason
            last_update_time: 2000-01-23T04:56:07.000+00:00
            meta_info: "{}"
            last_transition_time: 2000-01-23T04:56:07.000+00:00
            type: null
            message: message
            status: status
          status: null
      properties:
        count:
          format: int32
          title: Count of the entities
          type: integer
        results:
          items:
            $ref: '#/components/schemas/v1Agent'
          title: List of all entities
          type: array
        previous:
          title: Previous page
          type: string
        next:
          title: Next page
          type: string
      title: Contains list of agents
      type: object
    v1ListBookmarksResponse:
      example:
        next: next
        previous: previous
        count: 0
        results:
        - "{}"
        - "{}"
      properties:
        count:
          format: int32
          title: Count of the entities
          type: integer
        results:
          items:
            properties: {}
            type: object
          title: List of all entities
          type: array
        previous:
          title: Previous page
          type: string
        next:
          title: Next page
          type: string
      title: Contains list of of bookmarks
      type: object
    v1ListConnectionsResponse:
      example:
        next: next
        previous: previous
        count: 0
        results:
        - agent: agent
          updated_at: 2000-01-23T04:56:07.000+00:00
          kind: null
          name: name
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          live_state: 6
          uuid: uuid
          tags:
          - tags
          - tags
        - agent: agent
          updated_at: 2000-01-23T04:56:07.000+00:00
          kind: null
          name: name
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          live_state: 6
          uuid: uuid
          tags:
          - tags
          - tags
      properties:
        count:
          format: int32
          title: Count of the entities
          type: integer
        results:
          items:
            $ref: '#/components/schemas/v1ConnectionResponse'
          title: List of all entities
          type: array
        previous:
          title: Previous page
          type: string
        next:
          title: Next page
          type: string
      title: Contains list of connections
      type: object
    v1ListDashboardsResponse:
      example:
        next: next
        previous: previous
        count: 0
        results:
        - updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          org_level: true
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          live_state: 6
          uuid: uuid
          spec:
            xaxis: xaxis
            sample_size: 7
            step: 4
            smoothing: 2
            ignore_outliers: true
            sections:
            - is_frozen: true
              columns: 1
              widgets:
              - "{}"
              - "{}"
              xaxis: xaxis
              sample_size: 7
              is_minimized: true
              page_index: 9
              name: name
              step: 2
              smoothing: 5
              ignore_outliers: true
              height: 5
              page_size: 3
            - is_frozen: true
              columns: 1
              widgets:
              - "{}"
              - "{}"
              xaxis: xaxis
              sample_size: 7
              is_minimized: true
              page_index: 9
              name: name
              step: 2
              smoothing: 5
              ignore_outliers: true
              height: 5
              page_size: 3
          tags:
          - tags
          - tags
        - updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          org_level: true
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          live_state: 6
          uuid: uuid
          spec:
            xaxis: xaxis
            sample_size: 7
            step: 4
            smoothing: 2
            ignore_outliers: true
            sections:
            - is_frozen: true
              columns: 1
              widgets:
              - "{}"
              - "{}"
              xaxis: xaxis
              sample_size: 7
              is_minimized: true
              page_index: 9
              name: name
              step: 2
              smoothing: 5
              ignore_outliers: true
              height: 5
              page_size: 3
            - is_frozen: true
              columns: 1
              widgets:
              - "{}"
              - "{}"
              xaxis: xaxis
              sample_size: 7
              is_minimized: true
              page_index: 9
              name: name
              step: 2
              smoothing: 5
              ignore_outliers: true
              height: 5
              page_size: 3
          tags:
          - tags
          - tags
      properties:
        count:
          format: int32
          title: Count of the entities
          type: integer
        results:
          items:
            $ref: '#/components/schemas/v1Dashboard'
          title: List of all entities
          type: array
        previous:
          title: Previous page
          type: string
        next:
          title: Next page
          type: string
      title: Contains list of dashboards
      type: object
    v1ListOrganizationMembersResponse:
      example:
        next: next
        previous: previous
        count: 0
        results:
        - user_email: user_email
          role: role
          updated_at: 2000-01-23T04:56:07.000+00:00
          kind: kind
          created_at: 2000-01-23T04:56:07.000+00:00
          user: user
        - user_email: user_email
          role: role
          updated_at: 2000-01-23T04:56:07.000+00:00
          kind: kind
          created_at: 2000-01-23T04:56:07.000+00:00
          user: user
      properties:
        count:
          format: int32
          title: Count of the entities
          type: integer
        results:
          items:
            $ref: '#/components/schemas/v1OrganizationMember'
          title: List of all entities
          type: array
        previous:
          title: Previous page
          type: string
        next:
          title: Next page
          type: string
      title: Contains list of organization members
      type: object
    v1ListOrganizationsResponse:
      example:
        next: next
        previous: previous
        count: 0
        results:
        - user_email: user_email
          role: role
          default_presets:
          - default_presets
          - default_presets
          default_presets_ordered:
          - default_presets_ordered
          - default_presets_ordered
          support_revoke_at: 2000-01-23T04:56:07.000+00:00
          auth: "{}"
          is_cloud_viewable: true
          usage: "{}"
          created_at: 2000-01-23T04:56:07.000+00:00
          archived_deletion_interval: 6
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          is_public: true
          expiration: 0
          user: user
          plan: "{}"
          queue: queue
        - user_email: user_email
          role: role
          default_presets:
          - default_presets
          - default_presets
          default_presets_ordered:
          - default_presets_ordered
          - default_presets_ordered
          support_revoke_at: 2000-01-23T04:56:07.000+00:00
          auth: "{}"
          is_cloud_viewable: true
          usage: "{}"
          created_at: 2000-01-23T04:56:07.000+00:00
          archived_deletion_interval: 6
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          is_public: true
          expiration: 0
          user: user
          plan: "{}"
          queue: queue
      properties:
        count:
          format: int32
          title: Count of the entities
          type: integer
        results:
          items:
            $ref: '#/components/schemas/v1Organization'
          title: List of all entities
          type: array
        previous:
          title: Previous page
          type: string
        next:
          title: Next page
          type: string
      title: Contains list of organizations
      type: object
    v1ListPoliciesResponse:
      example:
        next: next
        previous: previous
        count: 0
        results:
        - owner: owner
          excluded_features:
          - excluded_features
          - excluded_features
          default_presets:
          - default_presets
          - default_presets
          default_presets_ordered:
          - default_presets_ordered
          - default_presets_ordered
          projects:
          - projects
          - projects
          teams:
          - teams
          - teams
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          connected_projects:
          - connected_projects
          - connected_projects
          archived_deletion_interval: 6
          uuid: uuid
          tags:
          - tags
          - tags
          agents:
          - agents
          - agents
          presets:
          - presets
          - presets
          updated_at: 2000-01-23T04:56:07.000+00:00
          user_accesses:
          - default_presets:
            - default_presets
            - default_presets
            default_presets_ordered:
            - default_presets_ordered
            - default_presets_ordered
            namespace: namespace
            user_data:
              is_sa: true
              username: username
            user: user
            queue: queue
          - default_presets:
            - default_presets
            - default_presets
            default_presets_ordered:
            - default_presets_ordered
            - default_presets_ordered
            namespace: namespace
            user_data:
              is_sa: true
              username: username
            user: user
            queue: queue
          queues:
          - queues
          - queues
          name: name
          excluded_runtimes:
          - excluded_runtimes
          - excluded_runtimes
          connections:
          - connections
          - connections
          queue: queue
          namespaces:
          - namespaces
          - namespaces
        - owner: owner
          excluded_features:
          - excluded_features
          - excluded_features
          default_presets:
          - default_presets
          - default_presets
          default_presets_ordered:
          - default_presets_ordered
          - default_presets_ordered
          projects:
          - projects
          - projects
          teams:
          - teams
          - teams
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          connected_projects:
          - connected_projects
          - connected_projects
          archived_deletion_interval: 6
          uuid: uuid
          tags:
          - tags
          - tags
          agents:
          - agents
          - agents
          presets:
          - presets
          - presets
          updated_at: 2000-01-23T04:56:07.000+00:00
          user_accesses:
          - default_presets:
            - default_presets
            - default_presets
            default_presets_ordered:
            - default_presets_ordered
            - default_presets_ordered
            namespace: namespace
            user_data:
              is_sa: true
              username: username
            user: user
            queue: queue
          - default_presets:
            - default_presets
            - default_presets
            default_presets_ordered:
            - default_presets_ordered
            - default_presets_ordered
            namespace: namespace
            user_data:
              is_sa: true
              username: username
            user: user
            queue: queue
          queues:
          - queues
          - queues
          name: name
          excluded_runtimes:
          - excluded_runtimes
          - excluded_runtimes
          connections:
          - connections
          - connections
          queue: queue
          namespaces:
          - namespaces
          - namespaces
      properties:
        count:
          format: int32
          title: Count of the entities
          type: integer
        results:
          items:
            $ref: '#/components/schemas/v1Policy'
          title: List of all entities
          type: array
        previous:
          title: Previous page
          type: string
        next:
          title: Next page
          type: string
      title: Contains list of policies
      type: object
    v1ListPresetsResponse:
      example:
        next: next
        previous: previous
        count: 0
        results:
        - settings:
            projects:
            - name: name
              uuid: uuid
              version: version
              url: url
            - name: name
              uuid: uuid
              version: version
              url: url
            runs:
            - name: name
              uuid: uuid
              version: version
              url: url
            - name: name
              uuid: uuid
              version: version
              url: url
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          live_state: 6
          uuid: uuid
          content: content
          tags:
          - tags
          - tags
        - settings:
            projects:
            - name: name
              uuid: uuid
              version: version
              url: url
            - name: name
              uuid: uuid
              version: version
              url: url
            runs:
            - name: name
              uuid: uuid
              version: version
              url: url
            - name: name
              uuid: uuid
              version: version
              url: url
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          live_state: 6
          uuid: uuid
          content: content
          tags:
          - tags
          - tags
      properties:
        count:
          format: int32
          title: Count of the entities
          type: integer
        results:
          items:
            $ref: '#/components/schemas/v1Preset'
          title: List of all entities
          type: array
        previous:
          title: Previous page
          type: string
        next:
          title: Next page
          type: string
      title: Contains list of scheduling presets
      type: object
    v1ListProjectVersionsResponse:
      example:
        next: next
        previous: previous
        count: 0
        results:
        - owner: owner
          role: role
          kind: null
          description: description
          project: project
          created_at: 2000-01-23T04:56:07.000+00:00
          run: run
          readme: readme
          uuid: uuid
          content: content
          tags:
          - tags
          - tags
          updated_at: 2000-01-23T04:56:07.000+00:00
          stage: null
          stage_conditions:
          - reason: reason
            last_update_time: 2000-01-23T04:56:07.000+00:00
            meta_info: "{}"
            last_transition_time: 2000-01-23T04:56:07.000+00:00
            type: null
            message: message
            status: status
          - reason: reason
            last_update_time: 2000-01-23T04:56:07.000+00:00
            meta_info: "{}"
            last_transition_time: 2000-01-23T04:56:07.000+00:00
            type: null
            message: message
            status: status
          meta_info: "{}"
          name: name
          connection: connection
          state: state
          contributors:
          - "{}"
          - "{}"
          artifacts:
          - artifacts
          - artifacts
        - owner: owner
          role: role
          kind: null
          description: description
          project: project
          created_at: 2000-01-23T04:56:07.000+00:00
          run: run
          readme: readme
          uuid: uuid
          content: content
          tags:
          - tags
          - tags
          updated_at: 2000-01-23T04:56:07.000+00:00
          stage: null
          stage_conditions:
          - reason: reason
            last_update_time: 2000-01-23T04:56:07.000+00:00
            meta_info: "{}"
            last_transition_time: 2000-01-23T04:56:07.000+00:00
            type: null
            message: message
            status: status
          - reason: reason
            last_update_time: 2000-01-23T04:56:07.000+00:00
            meta_info: "{}"
            last_transition_time: 2000-01-23T04:56:07.000+00:00
            type: null
            message: message
            status: status
          meta_info: "{}"
          name: name
          connection: connection
          state: state
          contributors:
          - "{}"
          - "{}"
          artifacts:
          - artifacts
          - artifacts
      properties:
        count:
          format: int32
          title: Count of the entities
          type: integer
        results:
          items:
            $ref: '#/components/schemas/v1ProjectVersion'
          title: List of all entities
          type: array
        previous:
          title: Previous page
          type: string
        next:
          title: Next page
          type: string
      title: Contains list of component hub
      type: object
    v1ListProjectsResponse:
      example:
        next: next
        previous: previous
        count: 0
        results:
        - owner: owner
          excluded_features:
          - excluded_features
          - excluded_features
          settings:
            default_presets:
            - default_presets
            - default_presets
            default_presets_ordered:
            - default_presets_ordered
            - default_presets_ordered
            presets:
            - presets
            - presets
            projects:
            - projects
            - projects
            teams:
            - teams
            - teams
            user_accesses:
            - default_presets:
              - default_presets
              - default_presets
              default_presets_ordered:
              - default_presets_ordered
              - default_presets_ordered
              namespace: namespace
              user_data:
                is_sa: true
                username: username
              user: user
              queue: queue
            - default_presets:
              - default_presets
              - default_presets
              default_presets_ordered:
              - default_presets_ordered
              - default_presets_ordered
              namespace: namespace
              user_data:
                is_sa: true
                username: username
              user: user
              queue: queue
            queues:
            - queues
            - queues
            connections:
            - connections
            - connections
            queue: queue
            agents:
            - agents
            - agents
            namespaces:
            - namespaces
            - namespaces
            policy: policy
          role: role
          bookmarked: true
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          live_state: 1
          readme: readme
          archived_deletion_interval: 6
          uuid: uuid
          tags:
          - tags
          - tags
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          is_public: true
          contributors:
          - "{}"
          - "{}"
          excluded_runtimes:
          - excluded_runtimes
          - excluded_runtimes
        - owner: owner
          excluded_features:
          - excluded_features
          - excluded_features
          settings:
            default_presets:
            - default_presets
            - default_presets
            default_presets_ordered:
            - default_presets_ordered
            - default_presets_ordered
            presets:
            - presets
            - presets
            projects:
            - projects
            - projects
            teams:
            - teams
            - teams
            user_accesses:
            - default_presets:
              - default_presets
              - default_presets
              default_presets_ordered:
              - default_presets_ordered
              - default_presets_ordered
              namespace: namespace
              user_data:
                is_sa: true
                username: username
              user: user
              queue: queue
            - default_presets:
              - default_presets
              - default_presets
              default_presets_ordered:
              - default_presets_ordered
              - default_presets_ordered
              namespace: namespace
              user_data:
                is_sa: true
                username: username
              user: user
              queue: queue
            queues:
            - queues
            - queues
            connections:
            - connections
            - connections
            queue: queue
            agents:
            - agents
            - agents
            namespaces:
            - namespaces
            - namespaces
            policy: policy
          role: role
          bookmarked: true
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          live_state: 1
          readme: readme
          archived_deletion_interval: 6
          uuid: uuid
          tags:
          - tags
          - tags
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          is_public: true
          contributors:
          - "{}"
          - "{}"
          excluded_runtimes:
          - excluded_runtimes
          - excluded_runtimes
      properties:
        count:
          format: int32
          title: Count of the entities
          type: integer
        results:
          items:
            $ref: '#/components/schemas/v1Project'
          title: List of all entities
          type: array
        previous:
          title: Previous page
          type: string
        next:
          title: Next page
          type: string
      title: Contains list of projects
      type: object
    v1ListQueuesResponse:
      example:
        next: next
        previous: previous
        count: 0
        results:
        - agent: agent
          updated_at: 2000-01-23T04:56:07.000+00:00
          resource: resource
          stats: "{}"
          quota: quota
          name: name
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          priority: 0
          uuid: uuid
          tags:
          - tags
          - tags
          concurrency: 6
        - agent: agent
          updated_at: 2000-01-23T04:56:07.000+00:00
          resource: resource
          stats: "{}"
          quota: quota
          name: name
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          priority: 0
          uuid: uuid
          tags:
          - tags
          - tags
          concurrency: 6
      properties:
        count:
          format: int32
          title: Count of the entities
          type: integer
        results:
          items:
            $ref: '#/components/schemas/v1Queue'
          title: List of all entities
          type: array
        previous:
          title: Previous page
          type: string
        next:
          title: Next page
          type: string
      title: Contains list of agents
      type: object
    v1ListRunArtifactsResponse:
      example:
        next: next
        previous: previous
        count: 0
        results:
        - summary: "{}"
          path: path
          kind: null
          meta_info: "{}"
          name: name
          connection: connection
          run: run
          is_input: true
          state: state
        - summary: "{}"
          path: path
          kind: null
          meta_info: "{}"
          name: name
          connection: connection
          run: run
          is_input: true
          state: state
      properties:
        count:
          format: int32
          title: Count of the entities
          type: integer
        results:
          items:
            $ref: '#/components/schemas/v1RunArtifact'
          title: List of all entities
          type: array
        previous:
          title: Previous page
          type: string
        next:
          title: Next page
          type: string
      title: Contains list of run artifacts
      type: object
    v1ListRunConnectionsResponse:
      example:
        next: next
        previous: previous
        count: 0
        results:
        - kind: kind
          name: name
          uuid: uuid
        - kind: kind
          name: name
          uuid: uuid
      properties:
        count:
          format: int32
          title: Count of the entities
          type: integer
        results:
          items:
            $ref: '#/components/schemas/v1RunConnection'
          title: List of all entities
          type: array
        previous:
          title: Previous page
          type: string
        next:
          title: Next page
          type: string
      title: Contains list of runs
      type: object
    v1ListRunEdgesResponse:
      example:
        next: next
        previous: previous
        count: 0
        results:
        - upstream:
            outputs: "{}"
            role: role
            finished_at: 2000-01-23T04:56:07.000+00:00
            managed_by: null
            inputs: "{}"
            pending: null
            description: description
            project: project
            created_at: 2000-01-23T04:56:07.000+00:00
            uuid: uuid
            content: content
            duration: 1.4658129
            updated_at: 2000-01-23T04:56:07.000+00:00
            meta_info: "{}"
            merge: true
            owner: owner
            settings:
              models:
              - owner: owner
                name: name
                project: project
                state: state
              - owner: owner
                name: name
                project: project
                state: state
              agent:
                name: name
                uuid: uuid
                version: version
                url: url
              component: "{}"
              tensorboard: "{}"
              build: "{}"
              namespace: namespace
              artifacts_store:
                name: name
                uuid: uuid
                version: version
                url: url
              queue:
                name: name
                uuid: uuid
                version: version
                url: url
              artifacts:
              - owner: owner
                name: name
                project: project
                state: state
              - owner: owner
                name: name
                project: project
                state: state
            raw_content: raw_content
            original:
              kind: null
              name: name
              uuid: uuid
            wait_time: 6.0274563
            schedule_at: 2000-01-23T04:56:07.000+00:00
            bookmarked: true
            kind: null
            runtime: null
            resources:
              memory: 2.302136
              cost: 3.6160767
              custom: 9.301444
              cpu: 5.637377
              gpu: 7.0614014
            live_state: 5
            readme: readme
            graph: "{}"
            tags:
            - tags
            - tags
            pipeline:
              kind: null
              name: name
              uuid: uuid
            name: name
            started_at: 2000-01-23T04:56:07.000+00:00
            is_approved: true
            contributors:
            - "{}"
            - "{}"
            user: user
            status_conditions:
            - reason: reason
              last_update_time: 2000-01-23T04:56:07.000+00:00
              meta_info: "{}"
              last_transition_time: 2000-01-23T04:56:07.000+00:00
              type: null
              message: message
              status: status
            - reason: reason
              last_update_time: 2000-01-23T04:56:07.000+00:00
              meta_info: "{}"
              last_transition_time: 2000-01-23T04:56:07.000+00:00
              type: null
              message: message
              status: status
            is_managed: true
            status: null
          kind: null
          values: "{}"
          downstream:
            outputs: "{}"
            role: role
            finished_at: 2000-01-23T04:56:07.000+00:00
            managed_by: null
            inputs: "{}"
            pending: null
            description: description
            project: project
            created_at: 2000-01-23T04:56:07.000+00:00
            uuid: uuid
            content: content
            duration: 1.4658129
            updated_at: 2000-01-23T04:56:07.000+00:00
            meta_info: "{}"
            merge: true
            owner: owner
            settings:
              models:
              - owner: owner
                name: name
                project: project
                state: state
              - owner: owner
                name: name
                project: project
                state: state
              agent:
                name: name
                uuid: uuid
                version: version
                url: url
              component: "{}"
              tensorboard: "{}"
              build: "{}"
              namespace: namespace
              artifacts_store:
                name: name
                uuid: uuid
                version: version
                url: url
              queue:
                name: name
                uuid: uuid
                version: version
                url: url
              artifacts:
              - owner: owner
                name: name
                project: project
                state: state
              - owner: owner
                name: name
                project: project
                state: state
            raw_content: raw_content
            original:
              kind: null
              name: name
              uuid: uuid
            wait_time: 6.0274563
            schedule_at: 2000-01-23T04:56:07.000+00:00
            bookmarked: true
            kind: null
            runtime: null
            resources:
              memory: 2.302136
              cost: 3.6160767
              custom: 9.301444
              cpu: 5.637377
              gpu: 7.0614014
            live_state: 5
            readme: readme
            graph: "{}"
            tags:
            - tags
            - tags
            pipeline:
              kind: null
              name: name
              uuid: uuid
            name: name
            started_at: 2000-01-23T04:56:07.000+00:00
            is_approved: true
            contributors:
            - "{}"
            - "{}"
            user: user
            status_conditions:
            - reason: reason
              last_update_time: 2000-01-23T04:56:07.000+00:00
              meta_info: "{}"
              last_transition_time: 2000-01-23T04:56:07.000+00:00
              type: null
              message: message
              status: status
            - reason: reason
              last_update_time: 2000-01-23T04:56:07.000+00:00
              meta_info: "{}"
              last_transition_time: 2000-01-23T04:56:07.000+00:00
              type: null
              message: message
              status: status
            is_managed: true
            status: null
          statuses:
          - null
          - null
        - upstream:
            outputs: "{}"
            role: role
            finished_at: 2000-01-23T04:56:07.000+00:00
            managed_by: null
            inputs: "{}"
            pending: null
            description: description
            project: project
            created_at: 2000-01-23T04:56:07.000+00:00
            uuid: uuid
            content: content
            duration: 1.4658129
            updated_at: 2000-01-23T04:56:07.000+00:00
            meta_info: "{}"
            merge: true
            owner: owner
            settings:
              models:
              - owner: owner
                name: name
                project: project
                state: state
              - owner: owner
                name: name
                project: project
                state: state
              agent:
                name: name
                uuid: uuid
                version: version
                url: url
              component: "{}"
              tensorboard: "{}"
              build: "{}"
              namespace: namespace
              artifacts_store:
                name: name
                uuid: uuid
                version: version
                url: url
              queue:
                name: name
                uuid: uuid
                version: version
                url: url
              artifacts:
              - owner: owner
                name: name
                project: project
                state: state
              - owner: owner
                name: name
                project: project
                state: state
            raw_content: raw_content
            original:
              kind: null
              name: name
              uuid: uuid
            wait_time: 6.0274563
            schedule_at: 2000-01-23T04:56:07.000+00:00
            bookmarked: true
            kind: null
            runtime: null
            resources:
              memory: 2.302136
              cost: 3.6160767
              custom: 9.301444
              cpu: 5.637377
              gpu: 7.0614014
            live_state: 5
            readme: readme
            graph: "{}"
            tags:
            - tags
            - tags
            pipeline:
              kind: null
              name: name
              uuid: uuid
            name: name
            started_at: 2000-01-23T04:56:07.000+00:00
            is_approved: true
            contributors:
            - "{}"
            - "{}"
            user: user
            status_conditions:
            - reason: reason
              last_update_time: 2000-01-23T04:56:07.000+00:00
              meta_info: "{}"
              last_transition_time: 2000-01-23T04:56:07.000+00:00
              type: null
              message: message
              status: status
            - reason: reason
              last_update_time: 2000-01-23T04:56:07.000+00:00
              meta_info: "{}"
              last_transition_time: 2000-01-23T04:56:07.000+00:00
              type: null
              message: message
              status: status
            is_managed: true
            status: null
          kind: null
          values: "{}"
          downstream:
            outputs: "{}"
            role: role
            finished_at: 2000-01-23T04:56:07.000+00:00
            managed_by: null
            inputs: "{}"
            pending: null
            description: description
            project: project
            created_at: 2000-01-23T04:56:07.000+00:00
            uuid: uuid
            content: content
            duration: 1.4658129
            updated_at: 2000-01-23T04:56:07.000+00:00
            meta_info: "{}"
            merge: true
            owner: owner
            settings:
              models:
              - owner: owner
                name: name
                project: project
                state: state
              - owner: owner
                name: name
                project: project
                state: state
              agent:
                name: name
                uuid: uuid
                version: version
                url: url
              component: "{}"
              tensorboard: "{}"
              build: "{}"
              namespace: namespace
              artifacts_store:
                name: name
                uuid: uuid
                version: version
                url: url
              queue:
                name: name
                uuid: uuid
                version: version
                url: url
              artifacts:
              - owner: owner
                name: name
                project: project
                state: state
              - owner: owner
                name: name
                project: project
                state: state
            raw_content: raw_content
            original:
              kind: null
              name: name
              uuid: uuid
            wait_time: 6.0274563
            schedule_at: 2000-01-23T04:56:07.000+00:00
            bookmarked: true
            kind: null
            runtime: null
            resources:
              memory: 2.302136
              cost: 3.6160767
              custom: 9.301444
              cpu: 5.637377
              gpu: 7.0614014
            live_state: 5
            readme: readme
            graph: "{}"
            tags:
            - tags
            - tags
            pipeline:
              kind: null
              name: name
              uuid: uuid
            name: name
            started_at: 2000-01-23T04:56:07.000+00:00
            is_approved: true
            contributors:
            - "{}"
            - "{}"
            user: user
            status_conditions:
            - reason: reason
              last_update_time: 2000-01-23T04:56:07.000+00:00
              meta_info: "{}"
              last_transition_time: 2000-01-23T04:56:07.000+00:00
              type: null
              message: message
              status: status
            - reason: reason
              last_update_time: 2000-01-23T04:56:07.000+00:00
              meta_info: "{}"
              last_transition_time: 2000-01-23T04:56:07.000+00:00
              type: null
              message: message
              status: status
            is_managed: true
            status: null
          statuses:
          - null
          - null
      properties:
        count:
          format: int32
          title: Count of the entities
          type: integer
        results:
          items:
            $ref: '#/components/schemas/v1RunEdge'
          title: List of all entities
          type: array
        previous:
          title: Previous page
          type: string
        next:
          title: Next page
          type: string
      title: Contains list of run edges
      type: object
    v1ListRunsResponse:
      example:
        next: next
        previous: previous
        count: 0
        results:
        - outputs: "{}"
          role: role
          finished_at: 2000-01-23T04:56:07.000+00:00
          managed_by: null
          inputs: "{}"
          pending: null
          description: description
          project: project
          created_at: 2000-01-23T04:56:07.000+00:00
          uuid: uuid
          content: content
          duration: 1.4658129
          updated_at: 2000-01-23T04:56:07.000+00:00
          meta_info: "{}"
          merge: true
          owner: owner
          settings:
            models:
            - owner: owner
              name: name
              project: project
              state: state
            - owner: owner
              name: name
              project: project
              state: state
            agent:
              name: name
              uuid: uuid
              version: version
              url: url
            component: "{}"
            tensorboard: "{}"
            build: "{}"
            namespace: namespace
            artifacts_store:
              name: name
              uuid: uuid
              version: version
              url: url
            queue:
              name: name
              uuid: uuid
              version: version
              url: url
            artifacts:
            - owner: owner
              name: name
              project: project
              state: state
            - owner: owner
              name: name
              project: project
              state: state
          raw_content: raw_content
          original:
            kind: null
            name: name
            uuid: uuid
          wait_time: 6.0274563
          schedule_at: 2000-01-23T04:56:07.000+00:00
          bookmarked: true
          kind: null
          runtime: null
          resources:
            memory: 2.302136
            cost: 3.6160767
            custom: 9.301444
            cpu: 5.637377
            gpu: 7.0614014
          live_state: 5
          readme: readme
          graph: "{}"
          tags:
          - tags
          - tags
          pipeline:
            kind: null
            name: name
            uuid: uuid
          name: name
          started_at: 2000-01-23T04:56:07.000+00:00
          is_approved: true
          contributors:
          - "{}"
          - "{}"
          user: user
          status_conditions:
          - reason: reason
            last_update_time: 2000-01-23T04:56:07.000+00:00
            meta_info: "{}"
            last_transition_time: 2000-01-23T04:56:07.000+00:00
            type: null
            message: message
            status: status
          - reason: reason
            last_update_time: 2000-01-23T04:56:07.000+00:00
            meta_info: "{}"
            last_transition_time: 2000-01-23T04:56:07.000+00:00
            type: null
            message: message
            status: status
          is_managed: true
          status: null
        - outputs: "{}"
          role: role
          finished_at: 2000-01-23T04:56:07.000+00:00
          managed_by: null
          inputs: "{}"
          pending: null
          description: description
          project: project
          created_at: 2000-01-23T04:56:07.000+00:00
          uuid: uuid
          content: content
          duration: 1.4658129
          updated_at: 2000-01-23T04:56:07.000+00:00
          meta_info: "{}"
          merge: true
          owner: owner
          settings:
            models:
            - owner: owner
              name: name
              project: project
              state: state
            - owner: owner
              name: name
              project: project
              state: state
            agent:
              name: name
              uuid: uuid
              version: version
              url: url
            component: "{}"
            tensorboard: "{}"
            build: "{}"
            namespace: namespace
            artifacts_store:
              name: name
              uuid: uuid
              version: version
              url: url
            queue:
              name: name
              uuid: uuid
              version: version
              url: url
            artifacts:
            - owner: owner
              name: name
              project: project
              state: state
            - owner: owner
              name: name
              project: project
              state: state
          raw_content: raw_content
          original:
            kind: null
            name: name
            uuid: uuid
          wait_time: 6.0274563
          schedule_at: 2000-01-23T04:56:07.000+00:00
          bookmarked: true
          kind: null
          runtime: null
          resources:
            memory: 2.302136
            cost: 3.6160767
            custom: 9.301444
            cpu: 5.637377
            gpu: 7.0614014
          live_state: 5
          readme: readme
          graph: "{}"
          tags:
          - tags
          - tags
          pipeline:
            kind: null
            name: name
            uuid: uuid
          name: name
          started_at: 2000-01-23T04:56:07.000+00:00
          is_approved: true
          contributors:
          - "{}"
          - "{}"
          user: user
          status_conditions:
          - reason: reason
            last_update_time: 2000-01-23T04:56:07.000+00:00
            meta_info: "{}"
            last_transition_time: 2000-01-23T04:56:07.000+00:00
            type: null
            message: message
            status: status
          - reason: reason
            last_update_time: 2000-01-23T04:56:07.000+00:00
            meta_info: "{}"
            last_transition_time: 2000-01-23T04:56:07.000+00:00
            type: null
            message: message
            status: status
          is_managed: true
          status: null
      properties:
        count:
          format: int32
          title: Count of the entities
          type: integer
        results:
          items:
            $ref: '#/components/schemas/v1Run'
          title: List of all entities
          type: array
        previous:
          title: Previous page
          type: string
        next:
          title: Next page
          type: string
      title: Contains list of runs
      type: object
    v1ListSearchesResponse:
      example:
        next: next
        previous: previous
        count: 0
        results:
        - view: null
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          org_level: true
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          live_state: 6
          uuid: uuid
          spec:
            heat: heat
            histograms: "{}"
            offset: 5
            columns: columns
            query: query
            sort: sort
            groupby: groupby
            sections: sections
            compares: compares
            layout: layout
            analytics:
              view: view
              trunc: trunc
              groupby: groupby
              frequency: frequency
            limit: 1
            events:
              xaxis: xaxis
              sample_size: 7
              step: 4
              smoothing: 2
              ignore_outliers: true
              sections:
              - is_frozen: true
                columns: 1
                widgets:
                - "{}"
                - "{}"
                xaxis: xaxis
                sample_size: 7
                is_minimized: true
                page_index: 9
                name: name
                step: 2
                smoothing: 5
                ignore_outliers: true
                height: 5
                page_size: 3
              - is_frozen: true
                columns: 1
                widgets:
                - "{}"
                - "{}"
                xaxis: xaxis
                sample_size: 7
                is_minimized: true
                page_index: 9
                name: name
                step: 2
                smoothing: 5
                ignore_outliers: true
                height: 5
                page_size: 3
            trends: "{}"
          tags:
          - tags
          - tags
        - view: null
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          org_level: true
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          live_state: 6
          uuid: uuid
          spec:
            heat: heat
            histograms: "{}"
            offset: 5
            columns: columns
            query: query
            sort: sort
            groupby: groupby
            sections: sections
            compares: compares
            layout: layout
            analytics:
              view: view
              trunc: trunc
              groupby: groupby
              frequency: frequency
            limit: 1
            events:
              xaxis: xaxis
              sample_size: 7
              step: 4
              smoothing: 2
              ignore_outliers: true
              sections:
              - is_frozen: true
                columns: 1
                widgets:
                - "{}"
                - "{}"
                xaxis: xaxis
                sample_size: 7
                is_minimized: true
                page_index: 9
                name: name
                step: 2
                smoothing: 5
                ignore_outliers: true
                height: 5
                page_size: 3
              - is_frozen: true
                columns: 1
                widgets:
                - "{}"
                - "{}"
                xaxis: xaxis
                sample_size: 7
                is_minimized: true
                page_index: 9
                name: name
                step: 2
                smoothing: 5
                ignore_outliers: true
                height: 5
                page_size: 3
            trends: "{}"
          tags:
          - tags
          - tags
      properties:
        count:
          format: int32
          title: Count of the entities
          type: integer
        results:
          items:
            $ref: '#/components/schemas/v1Search'
          title: List of all entities
          type: array
        previous:
          title: Previous page
          type: string
        next:
          title: Next page
          type: string
      title: Contains list of searches
      type: object
    v1ListServiceAccountsResponse:
      example:
        next: next
        previous: previous
        count: 0
        results:
        - updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          live_state: 6
          scopes:
          - scopes
          - scopes
          services:
          - services
          - services
          uuid: uuid
          tags:
          - tags
          - tags
        - updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          live_state: 6
          scopes:
          - scopes
          - scopes
          services:
          - services
          - services
          uuid: uuid
          tags:
          - tags
          - tags
      properties:
        count:
          format: int32
          title: Count of the entities
          type: integer
        results:
          items:
            $ref: '#/components/schemas/v1ServiceAccount'
          title: List of all entities
          type: array
        previous:
          title: Previous page
          type: string
        next:
          title: Next page
          type: string
      title: Contains list of service accounts
      type: object
    v1ListTagsResponse:
      example:
        next: next
        previous: previous
        count: 0
        results:
        - color: color
          stats: "{}"
          name: name
          icon: icon
          description: description
          uuid: uuid
        - color: color
          stats: "{}"
          name: name
          icon: icon
          description: description
          uuid: uuid
      properties:
        count:
          format: int32
          title: Count of the entities
          type: integer
        results:
          items:
            $ref: '#/components/schemas/v1Tag'
          title: List of all entities
          type: array
        previous:
          title: Previous page
          type: string
        next:
          title: Next page
          type: string
      title: Contains list of tags
      type: object
    v1ListTeamMembersResponse:
      example:
        next: next
        previous: previous
        count: 0
        results:
        - user_email: user_email
          role: role
          updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          user: user
          org_role: org_role
        - user_email: user_email
          role: role
          updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          user: user
          org_role: org_role
      properties:
        count:
          format: int32
          title: Count of the entities
          type: integer
        results:
          items:
            $ref: '#/components/schemas/v1TeamMember'
          title: List of all entities
          type: array
        previous:
          title: Previous page
          type: string
        next:
          title: Next page
          type: string
      title: Contains list of organization members
      type: object
    v1ListTeamsResponse:
      example:
        next: next
        previous: previous
        count: 0
        results:
        - owner: owner
          settings:
            projects:
            - name: name
              uuid: uuid
              version: version
              url: url
            - name: name
              uuid: uuid
              version: version
              url: url
            registries:
            - name: name
              uuid: uuid
              version: version
              url: url
            - name: name
              uuid: uuid
              version: version
              url: url
            hubs:
            - name: name
              uuid: uuid
              version: version
              url: url
            - name: name
              uuid: uuid
              version: version
              url: url
          model_registries:
          - model_registries
          - model_registries
          projects:
          - projects
          - projects
          role: role
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          component_hubs:
          - component_hubs
          - component_hubs
          created_at: 2000-01-23T04:56:07.000+00:00
          uuid: uuid
          policy: policy
        - owner: owner
          settings:
            projects:
            - name: name
              uuid: uuid
              version: version
              url: url
            - name: name
              uuid: uuid
              version: version
              url: url
            registries:
            - name: name
              uuid: uuid
              version: version
              url: url
            - name: name
              uuid: uuid
              version: version
              url: url
            hubs:
            - name: name
              uuid: uuid
              version: version
              url: url
            - name: name
              uuid: uuid
              version: version
              url: url
          model_registries:
          - model_registries
          - model_registries
          projects:
          - projects
          - projects
          role: role
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          component_hubs:
          - component_hubs
          - component_hubs
          created_at: 2000-01-23T04:56:07.000+00:00
          uuid: uuid
          policy: policy
      properties:
        count:
          format: int32
          title: Count of the entities
          type: integer
        results:
          items:
            $ref: '#/components/schemas/v1Team'
          title: List of all entities
          type: array
        previous:
          title: Previous page
          type: string
        next:
          title: Next page
          type: string
      title: Contains list of teams
      type: object
    v1ListTokenResponse:
      example:
        next: next
        previous: previous
        count: 0
        results:
        - expires_at: 2000-01-23T04:56:07.000+00:00
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          started_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          expiration: 0
          scopes:
          - scopes
          - scopes
          services:
          - services
          - services
          uuid: uuid
          key: key
        - expires_at: 2000-01-23T04:56:07.000+00:00
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          started_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          expiration: 0
          scopes:
          - scopes
          - scopes
          services:
          - services
          - services
          uuid: uuid
          key: key
      properties:
        count:
          format: int32
          title: Count of the entities
          type: integer
        results:
          items:
            $ref: '#/components/schemas/v1Token'
          title: List of all entities
          type: array
        previous:
          title: Previous page
          type: string
        next:
          title: Next page
          type: string
      title: Contains list of tokens
      type: object
    v1Log:
      example:
        container: container
        node: node
        pod: pod
        value: value
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        timestamp:
          format: date-time
          title: Optional time when the entity was created
          type: string
        node:
          title: Node name
          type: string
        pod:
          title: Pod name
          type: string
        container:
          title: Container id
          type: string
        value:
          title: Log line
          type: string
      title: Log spec definition
      type: object
    v1LogHandler:
      example:
        environment: environment
        dsn: dsn
      properties:
        dsn:
          type: string
        environment:
          type: string
      type: object
    v1Logs:
      example:
        last_time: 2000-01-23T04:56:07.000+00:00
        files:
        - files
        - files
        logs:
        - container: container
          node: node
          pod: pod
          value: value
          timestamp: 2000-01-23T04:56:07.000+00:00
        - container: container
          node: node
          pod: pod
          value: value
          timestamp: 2000-01-23T04:56:07.000+00:00
        last_file: last_file
      properties:
        logs:
          items:
            $ref: '#/components/schemas/v1Log'
          title: Log lines
          type: array
        last_time:
          format: date-time
          title: Last log time
          type: string
        last_file:
          title: Last log file
          type: string
        files:
          items:
            type: string
          title: Log files
          type: array
      title: Logs
      type: object
    v1MPIJob:
      example:
        cleanPodPolicy: null
        slotsPerWorker: 1
        kind: mpijob
        worker:
          container: "{}"
          init:
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          sidecars:
          - null
          - null
          environment:
            nodeName: nodeName
            dnsPolicy: dnsPolicy
            serviceAccountName: serviceAccountName
            hostNetwork: true
            dnsConfig: "{}"
            imagePullSecrets:
            - imagePullSecrets
            - imagePullSecrets
            priorityClassName: priorityClassName
            annotations:
              key: annotations
            hostAliases:
            - null
            - null
            securityContext: "{}"
            priority: 3
            restartPolicy: restartPolicy
            labels:
              key: labels
            nodeSelector:
              key: nodeSelector
            tolerations:
            - null
            - null
            schedulerName: schedulerName
            affinity: "{}"
            hostPID: hostPID
          replicas: 1
          volumes:
          - null
          - null
          connections:
          - connections
          - connections
        schedulingPolicy:
          minAvailable: 0
          priorityClass: priorityClass
          scheduleTimeoutSeconds: 2
          minResources: "{}"
          queue: queue
        launcher:
          container: "{}"
          init:
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          sidecars:
          - null
          - null
          environment:
            nodeName: nodeName
            dnsPolicy: dnsPolicy
            serviceAccountName: serviceAccountName
            hostNetwork: true
            dnsConfig: "{}"
            imagePullSecrets:
            - imagePullSecrets
            - imagePullSecrets
            priorityClassName: priorityClassName
            annotations:
              key: annotations
            hostAliases:
            - null
            - null
            securityContext: "{}"
            priority: 3
            restartPolicy: restartPolicy
            labels:
              key: labels
            nodeSelector:
              key: nodeSelector
            tolerations:
            - null
            - null
            schedulerName: schedulerName
            affinity: "{}"
            hostPID: hostPID
          replicas: 1
          volumes:
          - null
          - null
          connections:
          - connections
          - connections
      properties:
        kind:
          default: mpijob
          title: "Optional component kind, should be equal to 'mpijob'"
          type: string
        cleanPodPolicy:
          $ref: '#/components/schemas/v1CleanPodPolicy'
        schedulingPolicy:
          $ref: '#/components/schemas/v1SchedulingPolicy'
        slotsPerWorker:
          format: int32
          title: Optional slots per worker
          type: integer
        worker:
          $ref: '#/components/schemas/v1KFReplica'
        launcher:
          $ref: '#/components/schemas/v1KFReplica'
      title: MPI Job specification
      type: object
    v1MXJob:
      example:
        mode: null
        scheduler:
          container: "{}"
          init:
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          sidecars:
          - null
          - null
          environment:
            nodeName: nodeName
            dnsPolicy: dnsPolicy
            serviceAccountName: serviceAccountName
            hostNetwork: true
            dnsConfig: "{}"
            imagePullSecrets:
            - imagePullSecrets
            - imagePullSecrets
            priorityClassName: priorityClassName
            annotations:
              key: annotations
            hostAliases:
            - null
            - null
            securityContext: "{}"
            priority: 3
            restartPolicy: restartPolicy
            labels:
              key: labels
            nodeSelector:
              key: nodeSelector
            tolerations:
            - null
            - null
            schedulerName: schedulerName
            affinity: "{}"
            hostPID: hostPID
          replicas: 1
          volumes:
          - null
          - null
          connections:
          - connections
          - connections
        cleanPodPolicy: null
        server:
          container: "{}"
          init:
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          sidecars:
          - null
          - null
          environment:
            nodeName: nodeName
            dnsPolicy: dnsPolicy
            serviceAccountName: serviceAccountName
            hostNetwork: true
            dnsConfig: "{}"
            imagePullSecrets:
            - imagePullSecrets
            - imagePullSecrets
            priorityClassName: priorityClassName
            annotations:
              key: annotations
            hostAliases:
            - null
            - null
            securityContext: "{}"
            priority: 3
            restartPolicy: restartPolicy
            labels:
              key: labels
            nodeSelector:
              key: nodeSelector
            tolerations:
            - null
            - null
            schedulerName: schedulerName
            affinity: "{}"
            hostPID: hostPID
          replicas: 1
          volumes:
          - null
          - null
          connections:
          - connections
          - connections
        tuner_server:
          container: "{}"
          init:
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          sidecars:
          - null
          - null
          environment:
            nodeName: nodeName
            dnsPolicy: dnsPolicy
            serviceAccountName: serviceAccountName
            hostNetwork: true
            dnsConfig: "{}"
            imagePullSecrets:
            - imagePullSecrets
            - imagePullSecrets
            priorityClassName: priorityClassName
            annotations:
              key: annotations
            hostAliases:
            - null
            - null
            securityContext: "{}"
            priority: 3
            restartPolicy: restartPolicy
            labels:
              key: labels
            nodeSelector:
              key: nodeSelector
            tolerations:
            - null
            - null
            schedulerName: schedulerName
            affinity: "{}"
            hostPID: hostPID
          replicas: 1
          volumes:
          - null
          - null
          connections:
          - connections
          - connections
        tuner:
          container: "{}"
          init:
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          sidecars:
          - null
          - null
          environment:
            nodeName: nodeName
            dnsPolicy: dnsPolicy
            serviceAccountName: serviceAccountName
            hostNetwork: true
            dnsConfig: "{}"
            imagePullSecrets:
            - imagePullSecrets
            - imagePullSecrets
            priorityClassName: priorityClassName
            annotations:
              key: annotations
            hostAliases:
            - null
            - null
            securityContext: "{}"
            priority: 3
            restartPolicy: restartPolicy
            labels:
              key: labels
            nodeSelector:
              key: nodeSelector
            tolerations:
            - null
            - null
            schedulerName: schedulerName
            affinity: "{}"
            hostPID: hostPID
          replicas: 1
          volumes:
          - null
          - null
          connections:
          - connections
          - connections
        tuner_tracker:
          container: "{}"
          init:
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          sidecars:
          - null
          - null
          environment:
            nodeName: nodeName
            dnsPolicy: dnsPolicy
            serviceAccountName: serviceAccountName
            hostNetwork: true
            dnsConfig: "{}"
            imagePullSecrets:
            - imagePullSecrets
            - imagePullSecrets
            priorityClassName: priorityClassName
            annotations:
              key: annotations
            hostAliases:
            - null
            - null
            securityContext: "{}"
            priority: 3
            restartPolicy: restartPolicy
            labels:
              key: labels
            nodeSelector:
              key: nodeSelector
            tolerations:
            - null
            - null
            schedulerName: schedulerName
            affinity: "{}"
            hostPID: hostPID
          replicas: 1
          volumes:
          - null
          - null
          connections:
          - connections
          - connections
        kind: mxjob
        worker:
          container: "{}"
          init:
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          sidecars:
          - null
          - null
          environment:
            nodeName: nodeName
            dnsPolicy: dnsPolicy
            serviceAccountName: serviceAccountName
            hostNetwork: true
            dnsConfig: "{}"
            imagePullSecrets:
            - imagePullSecrets
            - imagePullSecrets
            priorityClassName: priorityClassName
            annotations:
              key: annotations
            hostAliases:
            - null
            - null
            securityContext: "{}"
            priority: 3
            restartPolicy: restartPolicy
            labels:
              key: labels
            nodeSelector:
              key: nodeSelector
            tolerations:
            - null
            - null
            schedulerName: schedulerName
            affinity: "{}"
            hostPID: hostPID
          replicas: 1
          volumes:
          - null
          - null
          connections:
          - connections
          - connections
        schedulingPolicy:
          minAvailable: 0
          priorityClass: priorityClass
          scheduleTimeoutSeconds: 2
          minResources: "{}"
          queue: queue
      properties:
        kind:
          default: mxjob
          title: "Optional component kind, should be equal to 'mxjob'"
          type: string
        cleanPodPolicy:
          $ref: '#/components/schemas/v1CleanPodPolicy'
        schedulingPolicy:
          $ref: '#/components/schemas/v1SchedulingPolicy'
        mode:
          $ref: '#/components/schemas/MXJobMode'
        scheduler:
          $ref: '#/components/schemas/v1KFReplica'
        server:
          $ref: '#/components/schemas/v1KFReplica'
        worker:
          $ref: '#/components/schemas/v1KFReplica'
        tuner_tracker:
          $ref: '#/components/schemas/v1KFReplica'
        tuner_server:
          $ref: '#/components/schemas/v1KFReplica'
        tuner:
          $ref: '#/components/schemas/v1KFReplica'
      title: MXNet Job specification
      type: object
    v1ManagedBy:
      default: client
      enum:
      - client
      - cli
      - agent
      type: string
    v1Mapping:
      example:
        kind: mapping
        values:
        - "{}"
        - "{}"
        earlyStopping:
        - "{}"
        - "{}"
        concurrency: 6
      properties:
        kind:
          default: mapping
          title: "Kind of matrix, should be equal to \"mapping\""
          type: string
        values:
          items:
            properties: {}
            type: object
          title: The mapping values
          type: array
        concurrency:
          format: int32
          title: Number of concurrent runs
          type: integer
        earlyStopping:
          items:
            properties: {}
            type: object
          title: "A list of Early stopping objects, accpets both metric and failure\
            \ early stopping mechanisms"
          type: array
      title: Matrix based on map/array either specified manually by the user or passed
        from another step
      type: object
    v1Matrix:
      example:
        random:
          seed: 1
          numRuns: 1
          kind: random
          params:
            key: "{}"
          earlyStopping:
          - "{}"
          - "{}"
          concurrency: 1
        hyperband:
          resume: true
          maxIterations: 4
          eta: 5
          tuner:
            presets:
            - presets
            - presets
            hubRef: hubRef
            namespace: namespace
            params:
              key:
                ref: ref
                toEnv: toEnv
                contextOnly: true
                connection: connection
                toInit: true
                value: "{}"
            queue: queue
          seed: 9
          resource:
            name: name
            type: null
          metric:
            optimization: null
            name: name
          kind: hyperband
          params:
            key: "{}"
          earlyStopping:
          - "{}"
          - "{}"
          concurrency: 9
        mapping:
          kind: mapping
          values:
          - "{}"
          - "{}"
          earlyStopping:
          - "{}"
          - "{}"
          concurrency: 6
        grid:
          seed: 7
          numRuns: 6
          kind: grid
          params:
            key: "{}"
          earlyStopping:
          - "{}"
          - "{}"
          concurrency: 1
        hyperopt:
          maxIterations: 6
          tuner:
            presets:
            - presets
            - presets
            hubRef: hubRef
            namespace: namespace
            params:
              key:
                ref: ref
                toEnv: toEnv
                contextOnly: true
                connection: connection
                toInit: true
                value: "{}"
            queue: queue
          seed: 1
          numRuns: 3
          metric:
            optimization: null
            name: name
          kind: hyperopt
          params:
            key: "{}"
          earlyStopping:
          - "{}"
          - "{}"
          algorithm: null
          concurrency: 2
        iterative:
          maxIterations: 6
          tuner:
            presets:
            - presets
            - presets
            hubRef: hubRef
            namespace: namespace
            params:
              key:
                ref: ref
                toEnv: toEnv
                contextOnly: true
                connection: connection
                toInit: true
                value: "{}"
            queue: queue
          seed: 6
          kind: iterative
          params:
            key: "{}"
          earlyStopping:
          - "{}"
          - "{}"
          concurrency: 5
        bayes:
          maxIterations: 8
          tuner:
            presets:
            - presets
            - presets
            hubRef: hubRef
            namespace: namespace
            params:
              key:
                ref: ref
                toEnv: toEnv
                contextOnly: true
                connection: connection
                toInit: true
                value: "{}"
            queue: queue
          seed: 9
          metric:
            optimization: null
            name: name
          kind: bayes
          numInitialRuns: 6
          utilityFunction: "{}"
          params:
            key: "{}"
          earlyStopping:
          - "{}"
          - "{}"
          concurrency: 6
      properties:
        random:
          $ref: '#/components/schemas/v1RandomSearch'
        grid:
          $ref: '#/components/schemas/v1GridSearch'
        hyperband:
          $ref: '#/components/schemas/v1Hyperband'
        bayes:
          $ref: '#/components/schemas/v1Bayes'
        hyperopt:
          $ref: '#/components/schemas/v1Hyperopt'
        iterative:
          $ref: '#/components/schemas/v1Iterative'
        mapping:
          $ref: '#/components/schemas/v1Mapping'
      title: All Schemas message
      type: object
    v1MatrixKind:
      default: random
      enum:
      - random
      - grid
      - hyperband
      - bayes
      - hyperopt
      - iterative
      - mapping
      type: string
    v1MedianStoppingPolicy:
      description: |-
        Early stopping with median stopping, this policy computes running medians across
        all runs and stops those whose best performance is worse than the median
        of the running runs.
      example:
        minSamples: 1
        kind: median
        minInterval: 6
        evaluationInterval: 0
      properties:
        kind:
          default: median
          title: "Kind of this stopping policy, should be equal to \"median\""
          type: string
        evaluationInterval:
          description: Interval/Frequency for applying the policy.
          format: int32
          type: integer
        minInterval:
          format: int32
          title: Min interval (e.g steps) before starting the process
          type: integer
        minSamples:
          format: int32
          title: Min samples runs succeeded before starting the process
          type: integer
      type: object
    v1MetricEarlyStopping:
      description: |-
        MetricEarlyStoppingSchema specification
        Early stopping based on metric config.
      example:
        metric: metric
        optimization: null
        kind: metric_early_stopping
        value: value
        policy: "{}"
      properties:
        kind:
          default: metric_early_stopping
          title: "Kind of this metric early stopping policy, should be equal to \"\
            metric_early_stopping\""
          type: string
        metric:
          description: Metric name to use for early stopping.
          type: string
        value:
          description: Metric value to use for the condition.
          type: string
        optimization:
          $ref: '#/components/schemas/v1Optimization'
        policy:
          properties: {}
          title: |-
            Policy to use, should be one of the stopping policies:
            MedianStoppingPolicy, AverageStoppingPolicy, TruncationStoppingPolicy
          type: object
      type: object
    v1MultiEventsResponse:
      example:
        data: "{}"
      properties:
        data:
          properties: {}
          title: Events data
          type: object
      title: Multi Run Events response definition
      type: object
    v1Notification:
      example:
        trigger: null
        connections:
        - connections
        - connections
      properties:
        connections:
          items:
            type: string
          title: Connections to use for notification
          type: array
        trigger:
          $ref: '#/components/schemas/v1Statuses'
      title: Notification message
      type: object
    v1Operation:
      example:
        joins:
          key:
            ref: ref
            offset: 0
            query: query
            limit: 4
            sort: sort
            params:
              key:
                toEnv: toEnv
                contextOnly: true
                connection: connection
                toInit: true
                value: value
        template:
          description: description
          fields:
          - fields
          - fields
          enabled: true
        dagRef: dagRef
        plugins:
          mountArtifactsStore: true
          syncStatuses: true
          auth: true
          collectResources: true
          collectLogs: true
          externalHost: true
          docker: true
          collectArtifacts: true
          logLevel: logLevel
          autoResume: true
          sidecar:
            sleepInterval: 5
            monitorSpec: true
            image: image
            imagePullPolicy: imagePullPolicy
            syncInterval: 3
            resources: "{}"
            monitorLogs: true
            imageTag: imageTag
          shm: true
          notifications:
          - trigger: null
            connections:
            - connections
            - connections
          - trigger: null
            connections:
            - connections
            - connections
        hubRef: hubRef
        description: description
        matrix: "{}"
        isApproved: true
        hooks:
        - presets:
          - presets
          - presets
          hubRef: hubRef
          namespace: namespace
          disableDefaults: true
          connection: connection
          trigger: null
          conditions: conditions
          params:
            key:
              ref: ref
              toEnv: toEnv
              contextOnly: true
              connection: connection
              toInit: true
              value: "{}"
          queue: queue
        - presets:
          - presets
          - presets
          hubRef: hubRef
          namespace: namespace
          disableDefaults: true
          connection: connection
          trigger: null
          conditions: conditions
          params:
            key:
              ref: ref
              toEnv: toEnv
              contextOnly: true
              connection: connection
              toInit: true
              value: "{}"
          queue: queue
        events:
        - ref: ref
          kinds:
          - null
          - null
        - ref: ref
          kinds:
          - null
          - null
        termination:
          maxRetries: 3
          ttl: 3
          timeout: 7
        cache:
          disable: true
          io:
          - io
          - io
          ttl: 7
          sections:
          - sections
          - sections
        cost: 6.628464
        kind: kind
        isPreset: true
        trigger: null
        params:
          key:
            ref: ref
            toEnv: toEnv
            contextOnly: true
            connection: connection
            toInit: true
            value: "{}"
        version: 8.969579
        tags:
        - tags
        - tags
        dependencies:
        - dependencies
        - dependencies
        schedule: "{}"
        component:
          termination:
            maxRetries: 3
            ttl: 3
            timeout: 7
          outputs:
          - delayValidation: true
            toEnv: toEnv
            description: description
            isOptional: true
            type: type
            isList: true
            isFlag: true
            argFormat: argFormat
            name: name
            options:
            - "{}"
            - "{}"
            connection: connection
            toInit: true
            value: "{}"
            validation:
              multipleOf: 0
              maxItems: 8
              excludes:
              - "{}"
              - "{}"
              keys:
              - keys
              - keys
              minLength: 5
              lt: 7
              maxDigits: 0
              containsKeys:
              - containsKeys
              - containsKeys
              gt: 1
              minItems: 6
              regex: regex
              contains:
              - "{}"
              - "{}"
              delay: true
              decimalPlaces: 7
              excludesKeys:
              - excludesKeys
              - excludesKeys
              minDigits: 9
              options:
              - "{}"
              - "{}"
              le: 9
              ge: 4
              maxLength: 4
          - delayValidation: true
            toEnv: toEnv
            description: description
            isOptional: true
            type: type
            isList: true
            isFlag: true
            argFormat: argFormat
            name: name
            options:
            - "{}"
            - "{}"
            connection: connection
            toInit: true
            value: "{}"
            validation:
              multipleOf: 0
              maxItems: 8
              excludes:
              - "{}"
              - "{}"
              keys:
              - keys
              - keys
              minLength: 5
              lt: 7
              maxDigits: 0
              containsKeys:
              - containsKeys
              - containsKeys
              gt: 1
              minItems: 6
              regex: regex
              contains:
              - "{}"
              - "{}"
              delay: true
              decimalPlaces: 7
              excludesKeys:
              - excludesKeys
              - excludesKeys
              minDigits: 9
              options:
              - "{}"
              - "{}"
              le: 9
              ge: 4
              maxLength: 4
          template:
            description: description
            fields:
            - fields
            - fields
            enabled: true
          cache:
            disable: true
            io:
            - io
            - io
            ttl: 7
            sections:
            - sections
            - sections
          cost: 4.459605
          kind: kind
          plugins:
            mountArtifactsStore: true
            syncStatuses: true
            auth: true
            collectResources: true
            collectLogs: true
            externalHost: true
            docker: true
            collectArtifacts: true
            logLevel: logLevel
            autoResume: true
            sidecar:
              sleepInterval: 5
              monitorSpec: true
              image: image
              imagePullPolicy: imagePullPolicy
              syncInterval: 3
              resources: "{}"
              monitorLogs: true
              imageTag: imageTag
            shm: true
            notifications:
            - trigger: null
              connections:
              - connections
              - connections
            - trigger: null
              connections:
              - connections
              - connections
          inputs:
          - delayValidation: true
            toEnv: toEnv
            description: description
            isOptional: true
            type: type
            isList: true
            isFlag: true
            argFormat: argFormat
            name: name
            options:
            - "{}"
            - "{}"
            connection: connection
            toInit: true
            value: "{}"
            validation:
              multipleOf: 0
              maxItems: 8
              excludes:
              - "{}"
              - "{}"
              keys:
              - keys
              - keys
              minLength: 5
              lt: 7
              maxDigits: 0
              containsKeys:
              - containsKeys
              - containsKeys
              gt: 1
              minItems: 6
              regex: regex
              contains:
              - "{}"
              - "{}"
              delay: true
              decimalPlaces: 7
              excludesKeys:
              - excludesKeys
              - excludesKeys
              minDigits: 9
              options:
              - "{}"
              - "{}"
              le: 9
              ge: 4
              maxLength: 4
          - delayValidation: true
            toEnv: toEnv
            description: description
            isOptional: true
            type: type
            isList: true
            isFlag: true
            argFormat: argFormat
            name: name
            options:
            - "{}"
            - "{}"
            connection: connection
            toInit: true
            value: "{}"
            validation:
              multipleOf: 0
              maxItems: 8
              excludes:
              - "{}"
              - "{}"
              keys:
              - keys
              - keys
              minLength: 5
              lt: 7
              maxDigits: 0
              containsKeys:
              - containsKeys
              - containsKeys
              gt: 1
              minItems: 6
              regex: regex
              contains:
              - "{}"
              - "{}"
              delay: true
              decimalPlaces: 7
              excludesKeys:
              - excludesKeys
              - excludesKeys
              minDigits: 9
              options:
              - "{}"
              - "{}"
              le: 9
              ge: 4
              maxLength: 4
          description: description
          run: "{}"
          version: 4.2587733
          tags:
          - tags
          - tags
          presets:
          - presets
          - presets
          build:
            cache:
              disable: true
              io:
              - io
              - io
              ttl: 7
              sections:
              - sections
              - sections
            presets:
            - presets
            - presets
            runPatch: "{}"
            hubRef: hubRef
            namespace: namespace
            connection: connection
            patchStrategy: null
            params:
              key:
                ref: ref
                toEnv: toEnv
                contextOnly: true
                connection: connection
                toInit: true
                value: "{}"
            queue: queue
          name: name
          namespace: namespace
          isApproved: true
          hooks:
          - presets:
            - presets
            - presets
            hubRef: hubRef
            namespace: namespace
            disableDefaults: true
            connection: connection
            trigger: null
            conditions: conditions
            params:
              key:
                ref: ref
                toEnv: toEnv
                contextOnly: true
                connection: connection
                toInit: true
                value: "{}"
            queue: queue
          - presets:
            - presets
            - presets
            hubRef: hubRef
            namespace: namespace
            disableDefaults: true
            connection: connection
            trigger: null
            conditions: conditions
            params:
              key:
                ref: ref
                toEnv: toEnv
                contextOnly: true
                connection: connection
                toInit: true
                value: "{}"
            queue: queue
          queue: queue
        presets:
        - presets
        - presets
        skipOnUpstreamSkip: true
        runPatch: "{}"
        build:
          cache:
            disable: true
            io:
            - io
            - io
            ttl: 7
            sections:
            - sections
            - sections
          presets:
          - presets
          - presets
          runPatch: "{}"
          hubRef: hubRef
          namespace: namespace
          connection: connection
          patchStrategy: null
          params:
            key:
              ref: ref
              toEnv: toEnv
              contextOnly: true
              connection: connection
              toInit: true
              value: "{}"
          queue: queue
        name: name
        namespace: namespace
        patchStrategy: null
        urlRef: urlRef
        conditions: conditions
        pathRef: pathRef
        queue: queue
      properties:
        version:
          format: float
          title: Spec version
          type: number
        kind:
          title: "Optional component kind, should be equal to 'operation'"
          type: string
        name:
          title: "Optional component name override, should a valid slug"
          type: string
        description:
          title: Optional component description override
          type: string
        tags:
          items:
            type: string
          title: Optional component tags override
          type: array
        presets:
          items:
            type: string
          title: Optional list of presets to use for running this operation
          type: array
        queue:
          title: Optional queue to use for running this operation
          type: string
        cache:
          $ref: '#/components/schemas/v1Cache'
        namespace:
          title: "Optional namespace to use, uses agent's namespace by default"
          type: string
        termination:
          $ref: '#/components/schemas/v1Termination'
        plugins:
          $ref: '#/components/schemas/v1Plugins'
        schedule:
          properties: {}
          title: "Optional schedule section, must be a valid Schedule option (Cron/Interval/Repeatable/ExactTime)"
          type: object
        events:
          items:
            $ref: '#/components/schemas/v1EventTrigger'
          title: "Optional events section, must be a valid List of EventTrigger option\
            \ (Run/Git/Alert/Webhook/Dataset)"
          type: array
        hooks:
          items:
            $ref: '#/components/schemas/v1Hook'
          title: Optional hooks section
          type: array
        dependencies:
          items:
            type: string
          title: Optional graph dependencies of this op
          type: array
        trigger:
          $ref: '#/components/schemas/v1TriggerPolicy'
        conditions:
          title: An optional template containing conditions to check before starting
            the run
          type: string
        skipOnUpstreamSkip:
          title: Optional flag to skip this run if upstream was skipped
          type: boolean
        matrix:
          properties: {}
          title: "Optional matrix section, must be a valid matrix option (Random/Grid/BO/Hyperband/Hyperopt/Mapping/Iterative)"
          type: object
        joins:
          additionalProperties:
            $ref: '#/components/schemas/v1Join'
          title: Optional dict of joins
          type: object
        params:
          additionalProperties:
            $ref: '#/components/schemas/v1Param'
          title: Optional dict of params
          type: object
        runPatch:
          properties: {}
          title: |-
            Optional a run section to override the content of the run in the template
            should be one of: Job/Service/Ray/Kubeflow/Dask/Dag
          type: object
        patchStrategy:
          $ref: '#/components/schemas/v1PatchStrategy'
        isPreset:
          title: Optional flag to mark this specification as preset
          type: boolean
        isApproved:
          title: Optional flag to mark this specification requires approval before
            running
          type: boolean
        template:
          $ref: '#/components/schemas/v1Template'
        build:
          $ref: '#/components/schemas/v1Build'
        cost:
          format: float
          title: Optional field to assign cost to this Component
          type: number
        pathRef:
          type: string
        hubRef:
          type: string
        dagRef:
          type: string
        urlRef:
          type: string
        component:
          $ref: '#/components/schemas/v1Component'
      title: Operation specification
      type: object
    v1OperationBody:
      properties:
        content:
          title: The Operation body content as dump string
          type: string
        is_managed:
          title: "Optional, if the run is managed, true by default, this flag should\
            \ be false if starting a non-managed run"
          type: boolean
        managed_by:
          $ref: '#/components/schemas/v1ManagedBy'
        pending:
          $ref: '#/components/schemas/v1RunPending'
        name:
          title: Optional
          type: string
        description:
          title: Optional
          type: string
        tags:
          items:
            type: string
          title: Optional
          type: array
        meta_info:
          properties: {}
          title: Meta
          type: object
      title: Operation creation
      type: object
    v1Optimization:
      default: maximize
      description: |-
        - maximize: Minimize a metric
         - minimize: Minimize a metric
      enum:
      - maximize
      - minimize
      title: Optimization enum for metrics
      type: string
    v1OptimizationMetric:
      example:
        optimization: null
        name: name
      properties:
        name:
          title: Name of the metric to optimize
          type: string
        optimization:
          $ref: '#/components/schemas/v1Optimization'
      title: OptimizationMetric specification
      type: object
    v1OptimizationResource:
      example:
        name: name
        type: null
      properties:
        name:
          title: Name of the resource to allocate
          type: string
        type:
          $ref: '#/components/schemas/v1ResourceType'
      title: OptimizationResource specification
      type: object
    v1Organization:
      example:
        user_email: user_email
        role: role
        default_presets:
        - default_presets
        - default_presets
        default_presets_ordered:
        - default_presets_ordered
        - default_presets_ordered
        support_revoke_at: 2000-01-23T04:56:07.000+00:00
        auth: "{}"
        is_cloud_viewable: true
        usage: "{}"
        created_at: 2000-01-23T04:56:07.000+00:00
        archived_deletion_interval: 6
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        is_public: true
        expiration: 0
        user: user
        plan: "{}"
        queue: queue
      properties:
        user:
          title: User
          type: string
        user_email:
          title: Read-only User email
          type: string
        name:
          title: Name
          type: string
        is_public:
          title: Optional flag to tell if this organization is public
          type: boolean
        created_at:
          format: date-time
          title: Optional time when the entity was created
          type: string
        updated_at:
          format: date-time
          title: Optional last time the entity was updated
          type: string
        support_revoke_at:
          format: date-time
          title: Optional time to revoke support access
          type: string
        expiration:
          format: int32
          title: Optional expiration for support
          type: integer
        role:
          title: Current user's role in this org
          type: string
        queue:
          title: Default queue
          type: string
        default_presets:
          items:
            type: string
          title: Default presets
          type: array
        default_presets_ordered:
          items:
            type: string
          title: Default presets ordered
          type: array
        is_cloud_viewable:
          title: Setting to enable viewable metadata on cloud
          type: boolean
        archived_deletion_interval:
          format: int32
          title: Setting to configure default archived deletion interval
          type: integer
        auth:
          properties: {}
          title: Auth Settings
          type: object
        plan:
          properties: {}
          title: Plan settings
          type: object
        usage:
          properties: {}
          title: Usage info
          type: object
      title: Organization specification
      type: object
    v1OrganizationMember:
      example:
        user_email: user_email
        role: role
        updated_at: 2000-01-23T04:56:07.000+00:00
        kind: kind
        created_at: 2000-01-23T04:56:07.000+00:00
        user: user
      properties:
        user:
          title: User
          type: string
        user_email:
          title: Read-only User email
          type: string
        role:
          title: Role
          type: string
        kind:
          title: Kind
          type: string
        created_at:
          format: date-time
          title: Optional time when the entity was created
          type: string
        updated_at:
          format: date-time
          title: Optional last time the entity was updated
          type: string
      title: Organization member specification
      type: object
    v1PaddleElasticPolic:
      example:
        maxReplicas: 9
        minReplicas: 3
        maxRestarts: 8
        metrics:
        - "{}"
        - "{}"
      properties:
        minReplicas:
          format: int32
          type: integer
        maxReplicas:
          format: int32
          type: integer
        maxRestarts:
          format: int32
          type: integer
        metrics:
          items:
            properties: {}
            type: object
          type: array
      title: Paddle elastic policy
      type: object
    v1PaddleJob:
      example:
        cleanPodPolicy: null
        elasticPolicy:
          maxReplicas: 9
          minReplicas: 3
          maxRestarts: 8
          metrics:
          - "{}"
          - "{}"
        kind: paddlejob
        worker:
          container: "{}"
          init:
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          sidecars:
          - null
          - null
          environment:
            nodeName: nodeName
            dnsPolicy: dnsPolicy
            serviceAccountName: serviceAccountName
            hostNetwork: true
            dnsConfig: "{}"
            imagePullSecrets:
            - imagePullSecrets
            - imagePullSecrets
            priorityClassName: priorityClassName
            annotations:
              key: annotations
            hostAliases:
            - null
            - null
            securityContext: "{}"
            priority: 3
            restartPolicy: restartPolicy
            labels:
              key: labels
            nodeSelector:
              key: nodeSelector
            tolerations:
            - null
            - null
            schedulerName: schedulerName
            affinity: "{}"
            hostPID: hostPID
          replicas: 1
          volumes:
          - null
          - null
          connections:
          - connections
          - connections
        schedulingPolicy:
          minAvailable: 0
          priorityClass: priorityClass
          scheduleTimeoutSeconds: 2
          minResources: "{}"
          queue: queue
        master:
          container: "{}"
          init:
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          sidecars:
          - null
          - null
          environment:
            nodeName: nodeName
            dnsPolicy: dnsPolicy
            serviceAccountName: serviceAccountName
            hostNetwork: true
            dnsConfig: "{}"
            imagePullSecrets:
            - imagePullSecrets
            - imagePullSecrets
            priorityClassName: priorityClassName
            annotations:
              key: annotations
            hostAliases:
            - null
            - null
            securityContext: "{}"
            priority: 3
            restartPolicy: restartPolicy
            labels:
              key: labels
            nodeSelector:
              key: nodeSelector
            tolerations:
            - null
            - null
            schedulerName: schedulerName
            affinity: "{}"
            hostPID: hostPID
          replicas: 1
          volumes:
          - null
          - null
          connections:
          - connections
          - connections
      properties:
        kind:
          default: paddlejob
          title: "Optional component kind, should be equal to 'paddlejob'"
          type: string
        cleanPodPolicy:
          $ref: '#/components/schemas/v1CleanPodPolicy'
        schedulingPolicy:
          $ref: '#/components/schemas/v1SchedulingPolicy'
        elasticPolicy:
          $ref: '#/components/schemas/v1PaddleElasticPolic'
        master:
          $ref: '#/components/schemas/v1KFReplica'
        worker:
          $ref: '#/components/schemas/v1KFReplica'
      title: Paddle Job specification
      type: object
    v1Param:
      example:
        ref: ref
        toEnv: toEnv
        contextOnly: true
        connection: connection
        toInit: true
        value: "{}"
      properties:
        value:
          properties: {}
          title: "The value to pass, if no ref or search is passed then it corresponds\
            \ to a literal value"
          type: object
        ref:
          title: Ref corresponds to a reference of an object
          type: string
        connection:
          title: A flag to signal to Polyaxon that this param is used with a connection
          type: string
        toInit:
          title: A flag to signal to Polyaxon that this param must be tranformed to
            an init container
          type: boolean
        toEnv:
          title: A flag to signal to Polyaxon that this io must be tranformed to the
            environment variable passed
          type: string
        contextOnly:
          title: A flag to signal to Polyaxon that this param should not be validated
            against io
          type: boolean
      title: Param specification
      type: object
    v1PasswordChange:
      properties:
        old_password:
          title: Old password
          type: string
        new_password1:
          title: New password
          type: string
        new_password2:
          title: New password confirmation
          type: string
      title: User password change
      type: object
    v1PatchStrategy:
      default: replace
      description: |-
        - replace: Replaces the keys
         - isnull: Only set the keys if they do not exist or if they are null
         - post_merge: Merge the all keys and replace by new one
         - pre_merge: Merge the all keys and keep old ones
      enum:
      - replace
      - isnull
      - post_merge
      - pre_merge
      title: PatchStrategy
      type: string
    v1PathRef:
      example:
        path: path
        kind: path_ref
      properties:
        kind:
          default: path_ref
          title: "Kind of reference, should be equal to \"path_ref\""
          type: string
        path:
          title: Value
          type: string
      title: Path reference specification
      type: object
    v1Pipeline:
      example:
        kind: null
        name: name
        uuid: uuid
      properties:
        uuid:
          title: Optional uuid of the pipeline run
          type: string
        name:
          title: Optional name of the pipeline run
          type: string
        kind:
          $ref: '#/components/schemas/v1PipelineKind'
      type: object
    v1PipelineKind:
      default: dag
      enum:
      - dag
      - matrix
      type: string
    v1Plugins:
      example:
        mountArtifactsStore: true
        syncStatuses: true
        auth: true
        collectResources: true
        collectLogs: true
        externalHost: true
        docker: true
        collectArtifacts: true
        logLevel: logLevel
        autoResume: true
        sidecar:
          sleepInterval: 5
          monitorSpec: true
          image: image
          imagePullPolicy: imagePullPolicy
          syncInterval: 3
          resources: "{}"
          monitorLogs: true
          imageTag: imageTag
        shm: true
        notifications:
        - trigger: null
          connections:
          - connections
          - connections
        - trigger: null
          connections:
          - connections
          - connections
      properties:
        auth:
          title: "Optional flag to tell Polyaxon if it should set an auth context\
            \ for the run, default true"
          type: boolean
        docker:
          title: "Optional flag to tell Polyaxon if it should set a docker socket\
            \ context for the run, default false"
          type: boolean
        shm:
          title: "Optional flag to tell Polyaxon if it should set a shm context for\
            \ the run, default false"
          type: boolean
        mountArtifactsStore:
          title: Optional flag to mount the artifacts store to the main container
          type: boolean
        collectArtifacts:
          title: Optional flag to tell Polyaxon to collect artifacts and outputs
          type: boolean
        collectLogs:
          title: Optional flag to tell Polyaxon to collect logs
          type: boolean
        collectResources:
          title: Optional flag to tell Polyaxon to collect container resources (cpu/memory/gpu)
          type: boolean
        syncStatuses:
          title: Optional flag to tell Polyaxon to sync statuses
          type: boolean
        autoResume:
          title: "Auto resume a run's artifacts (applies to resume and retries), works\
            \ if collects_artifacts is enabled"
          type: boolean
        logLevel:
          title: Optional log level
          type: string
        externalHost:
          title: Optional flag to tell Polyaxon to connect to the control plan via
            the external host
          type: boolean
        sidecar:
          $ref: '#/components/schemas/v1PolyaxonSidecarContainer'
        notifications:
          items:
            $ref: '#/components/schemas/v1Notification'
          title: "Option Notifications: Deprecated"
          type: array
      title: Plugins specification
      type: object
    v1PodDNSConfig:
      title: Placeholder for PodDNSConfig
      type: object
    v1PodSecurityContext:
      title: Placeholder for PodSecurityContext
      type: object
    v1Policy:
      example:
        owner: owner
        excluded_features:
        - excluded_features
        - excluded_features
        default_presets:
        - default_presets
        - default_presets
        default_presets_ordered:
        - default_presets_ordered
        - default_presets_ordered
        projects:
        - projects
        - projects
        teams:
        - teams
        - teams
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        connected_projects:
        - connected_projects
        - connected_projects
        archived_deletion_interval: 6
        uuid: uuid
        tags:
        - tags
        - tags
        agents:
        - agents
        - agents
        presets:
        - presets
        - presets
        updated_at: 2000-01-23T04:56:07.000+00:00
        user_accesses:
        - default_presets:
          - default_presets
          - default_presets
          default_presets_ordered:
          - default_presets_ordered
          - default_presets_ordered
          namespace: namespace
          user_data:
            is_sa: true
            username: username
          user: user
          queue: queue
        - default_presets:
          - default_presets
          - default_presets
          default_presets_ordered:
          - default_presets_ordered
          - default_presets_ordered
          namespace: namespace
          user_data:
            is_sa: true
            username: username
          user: user
          queue: queue
        queues:
        - queues
        - queues
        name: name
        excluded_runtimes:
        - excluded_runtimes
        - excluded_runtimes
        connections:
        - connections
        - connections
        queue: queue
        namespaces:
        - namespaces
        - namespaces
      properties:
        uuid:
          title: UUID
          type: string
        owner:
          title: Owner/namespace where the project was created
          type: string
        name:
          title: Required name
          type: string
        description:
          title: Optional description
          type: string
        tags:
          items:
            type: string
          title: Optional tags of this entity
          type: array
        created_at:
          format: date-time
          title: Optional time when the entity was created
          type: string
        updated_at:
          format: date-time
          title: Optional last time the entity was updated
          type: string
        excluded_features:
          items:
            type: string
          title: Optional project excluded features
          type: array
        excluded_runtimes:
          items:
            type: string
          title: Optional project excluded runtimes
          type: array
        archived_deletion_interval:
          format: int32
          title: Optional project archived deletion interval
          type: integer
        connections:
          items:
            type: string
          title: Authorized connections
          type: array
        default_presets:
          items:
            type: string
          title: Default Presets
          type: array
        default_presets_ordered:
          items:
            type: string
          title: Default Presets ordered
          type: array
        presets:
          items:
            type: string
          title: Authorized Presets
          type: array
        queue:
          title: Default Queue
          type: string
        queues:
          items:
            type: string
          title: Authorized queues
          type: array
        agents:
          items:
            type: string
          title: Authorized agents
          type: array
        namespaces:
          items:
            type: string
          title: Authorized namespaces
          type: array
        user_accesses:
          items:
            $ref: '#/components/schemas/v1UserAccess'
          title: Authorized users
          type: array
        teams:
          items:
            type: string
          title: Authorized teams
          type: array
        projects:
          items:
            type: string
          title: Authorized projects
          type: array
        connected_projects:
          items:
            type: string
          title: Connected projects
          type: array
      title: Organization policy
      type: object
    v1PolyaxonInitContainer:
      example:
        image: image
        imagePullPolicy: imagePullPolicy
        resources: "{}"
        imageTag: imageTag
      properties:
        image:
          type: string
        imageTag:
          type: string
        imagePullPolicy:
          type: string
        resources:
          title: Placeholder Resource Requirements
          type: object
      title: Polyaxon init specification
      type: object
    v1PolyaxonSidecarContainer:
      example:
        sleepInterval: 5
        monitorSpec: true
        image: image
        imagePullPolicy: imagePullPolicy
        syncInterval: 3
        resources: "{}"
        monitorLogs: true
        imageTag: imageTag
      properties:
        image:
          type: string
        imageTag:
          type: string
        imagePullPolicy:
          type: string
        sleepInterval:
          format: int32
          type: integer
        syncInterval:
          format: int32
          type: integer
        monitorLogs:
          type: boolean
        monitorSpec:
          type: boolean
        resources:
          title: Placeholder Resource Requirements
          type: object
      title: Polyaxon sidecar specification
      type: object
    v1Preset:
      example:
        settings:
          projects:
          - name: name
            uuid: uuid
            version: version
            url: url
          - name: name
            uuid: uuid
            version: version
            url: url
          runs:
          - name: name
            uuid: uuid
            version: version
            url: url
          - name: name
            uuid: uuid
            version: version
            url: url
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        live_state: 6
        uuid: uuid
        content: content
        tags:
        - tags
        - tags
      properties:
        uuid:
          title: UUID
          type: string
        name:
          title: Name
          type: string
        description:
          title: Optional description
          type: string
        tags:
          items:
            type: string
          title: Optional tags of this entity
          type: array
        created_at:
          format: date-time
          title: Optional time when the entity was created
          type: string
        updated_at:
          format: date-time
          title: Optional last time the entity was updated
          type: string
        live_state:
          format: int32
          title: Current live state
          type: integer
        content:
          title: The content of the preset
          type: string
        settings:
          $ref: '#/components/schemas/v1PresetSettings'
      title: Preset specification
      type: object
    v1PresetSettings:
      example:
        projects:
        - name: name
          uuid: uuid
          version: version
          url: url
        - name: name
          uuid: uuid
          version: version
          url: url
        runs:
        - name: name
          uuid: uuid
          version: version
          url: url
        - name: name
          uuid: uuid
          version: version
          url: url
      properties:
        projects:
          items:
            $ref: '#/components/schemas/v1SettingsCatalog'
          title: Projects
          type: array
        runs:
          items:
            $ref: '#/components/schemas/v1SettingsCatalog'
          title: Component hubs
          type: array
      title: Preset Settings specification
      type: object
    v1Project:
      example:
        owner: owner
        excluded_features:
        - excluded_features
        - excluded_features
        settings:
          default_presets:
          - default_presets
          - default_presets
          default_presets_ordered:
          - default_presets_ordered
          - default_presets_ordered
          presets:
          - presets
          - presets
          projects:
          - projects
          - projects
          teams:
          - teams
          - teams
          user_accesses:
          - default_presets:
            - default_presets
            - default_presets
            default_presets_ordered:
            - default_presets_ordered
            - default_presets_ordered
            namespace: namespace
            user_data:
              is_sa: true
              username: username
            user: user
            queue: queue
          - default_presets:
            - default_presets
            - default_presets
            default_presets_ordered:
            - default_presets_ordered
            - default_presets_ordered
            namespace: namespace
            user_data:
              is_sa: true
              username: username
            user: user
            queue: queue
          queues:
          - queues
          - queues
          connections:
          - connections
          - connections
          queue: queue
          agents:
          - agents
          - agents
          namespaces:
          - namespaces
          - namespaces
          policy: policy
        role: role
        bookmarked: true
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        live_state: 1
        readme: readme
        archived_deletion_interval: 6
        uuid: uuid
        tags:
        - tags
        - tags
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        is_public: true
        contributors:
        - "{}"
        - "{}"
        excluded_runtimes:
        - excluded_runtimes
        - excluded_runtimes
      properties:
        uuid:
          title: UUID
          type: string
        owner:
          title: Owner/namespace where the project was created
          type: string
        name:
          title: Required name
          type: string
        description:
          title: Optional description
          type: string
        tags:
          items:
            type: string
          title: Optional tags of this entity
          type: array
        created_at:
          format: date-time
          title: Optional time when the entity was created
          type: string
        updated_at:
          format: date-time
          title: Optional last time the entity was updated
          type: string
        is_public:
          title: Optional flag to tell if this project is public
          type: boolean
        bookmarked:
          title: Optional if this entity was bookmarked
          type: boolean
        readme:
          title: Optional Markdown description/readme
          type: string
        excluded_features:
          items:
            type: string
          title: Optional project excluded features
          type: array
        excluded_runtimes:
          items:
            type: string
          title: Optional project excluded runtimes
          type: array
        archived_deletion_interval:
          format: int32
          title: Optional project archived deletion interval
          type: integer
        settings:
          $ref: '#/components/schemas/v1ProjectSettings'
        role:
          title: Current user's role in this (org/teams)/project
          type: string
        live_state:
          format: int32
          title: Current live state
          type: integer
        contributors:
          items:
            properties: {}
            type: object
          title: Contributors
          type: array
      title: Project specification
      type: object
    v1ProjectSettings:
      example:
        default_presets:
        - default_presets
        - default_presets
        default_presets_ordered:
        - default_presets_ordered
        - default_presets_ordered
        presets:
        - presets
        - presets
        projects:
        - projects
        - projects
        teams:
        - teams
        - teams
        user_accesses:
        - default_presets:
          - default_presets
          - default_presets
          default_presets_ordered:
          - default_presets_ordered
          - default_presets_ordered
          namespace: namespace
          user_data:
            is_sa: true
            username: username
          user: user
          queue: queue
        - default_presets:
          - default_presets
          - default_presets
          default_presets_ordered:
          - default_presets_ordered
          - default_presets_ordered
          namespace: namespace
          user_data:
            is_sa: true
            username: username
          user: user
          queue: queue
        queues:
        - queues
        - queues
        connections:
        - connections
        - connections
        queue: queue
        agents:
        - agents
        - agents
        namespaces:
        - namespaces
        - namespaces
        policy: policy
      properties:
        connections:
          items:
            type: string
          title: Authorized connections
          type: array
        default_presets:
          items:
            type: string
          title: Default Presets
          type: array
        default_presets_ordered:
          items:
            type: string
          title: Default Presets ordered
          type: array
        presets:
          items:
            type: string
          title: Authorized Presets
          type: array
        queue:
          title: Default Queue
          type: string
        queues:
          items:
            type: string
          title: Authorized queues
          type: array
        agents:
          items:
            type: string
          title: Authorized agents
          type: array
        namespaces:
          items:
            type: string
          title: Authorized namespaces
          type: array
        user_accesses:
          items:
            $ref: '#/components/schemas/v1UserAccess'
          title: Authorized users
          type: array
        teams:
          items:
            type: string
          title: Authorized teams
          type: array
        projects:
          items:
            type: string
          title: Authorized projects
          type: array
        policy:
          title: Attached policy
          type: string
      title: Project Settings specification
      type: object
    v1ProjectVersion:
      example:
        owner: owner
        role: role
        kind: null
        description: description
        project: project
        created_at: 2000-01-23T04:56:07.000+00:00
        run: run
        readme: readme
        uuid: uuid
        content: content
        tags:
        - tags
        - tags
        updated_at: 2000-01-23T04:56:07.000+00:00
        stage: null
        stage_conditions:
        - reason: reason
          last_update_time: 2000-01-23T04:56:07.000+00:00
          meta_info: "{}"
          last_transition_time: 2000-01-23T04:56:07.000+00:00
          type: null
          message: message
          status: status
        - reason: reason
          last_update_time: 2000-01-23T04:56:07.000+00:00
          meta_info: "{}"
          last_transition_time: 2000-01-23T04:56:07.000+00:00
          type: null
          message: message
          status: status
        meta_info: "{}"
        name: name
        connection: connection
        state: state
        contributors:
        - "{}"
        - "{}"
        artifacts:
        - artifacts
        - artifacts
      properties:
        uuid:
          title: UUID
          type: string
        name:
          title: "Optional component name, should be a valid fully qualified value:\
            \ name[:version]"
          type: string
        description:
          title: Optional description
          type: string
        tags:
          items:
            type: string
          title: Optional tags of this entity
          type: array
        owner:
          title: Owner of this entity
          type: string
        project:
          title: Project name
          type: string
        connection:
          title: Connection name
          type: string
        run:
          title: Run lineage
          type: string
        artifacts:
          items:
            type: string
          title: Artifacts lineage
          type: array
        meta_info:
          description: "Extra information related to the run, lineage, artifacts,\
            \ ..."
          properties: {}
          type: object
        created_at:
          format: date-time
          title: Optional time when the entity was created
          type: string
        updated_at:
          format: date-time
          title: Optional last time the entity was updated
          type: string
        stage:
          $ref: '#/components/schemas/v1Stages'
        kind:
          $ref: '#/components/schemas/v1ProjectVersionKind'
        stage_conditions:
          items:
            $ref: '#/components/schemas/v1StageCondition'
          title: The status conditions timeline
          type: array
        content:
          title: The metadata/content body
          type: string
        readme:
          title: Optional Markdown description/readme
          type: string
        state:
          title: The version state read-only
          type: string
        role:
          title: Current user's role in this (org/teams)/hub/version
          type: string
        contributors:
          items:
            properties: {}
            type: object
          title: Contributors
          type: array
      title: component hub specification
      type: object
    v1ProjectVersionKind:
      default: component
      enum:
      - component
      - model
      - artifact
      type: string
    v1PytorchElasticPolicy:
      example:
        maxReplicas: 6
        rdvzId: rdvzId
        rdvzConf:
        - "{}"
        - "{}"
        nProcPerNode: 8
        Metrics:
        - "{}"
        - "{}"
        minReplicas: 8
        maxRestarts: 9
        rdvzHost: rdvzHost
        rdvzBackend: rdvzBackend
        standalone: true
        rdvzPort: 4
      properties:
        minReplicas:
          description: minReplicas is the lower limit for the number of replicas to
            which the training job can scale down.
          format: int32
          type: integer
        maxReplicas:
          description: "upper limit for the number of pods that can be set by the\
            \ autoscaler; cannot be smaller than MinReplicas, defaults to null."
          format: int32
          type: integer
        rdvzBackend:
          type: string
        rdvzPort:
          format: int32
          type: integer
        rdvzHost:
          type: string
        rdvzId:
          type: string
        rdvzConf:
          description: "RDZVConf contains additional rendezvous configuration (<key1>=<value1>,<key2>=<value2>,...)."
          items:
            properties: {}
            type: object
          type: array
        standalone:
          description: |-
            Start a local standalone rendezvous backend that is represented by a C10d TCP store
            on port 29400. Useful when launching single-node, multi-worker job. If specified
            --rdzv_backend, --rdzv_endpoint, --rdzv_id are auto-assigned; any explicitly set values
            are ignored.
          type: boolean
        nProcPerNode:
          description: |-
            Number of workers per node; supported values: [auto, cpu, gpu, int].
            Deprecated: This API is deprecated in v1.7+
            Use .spec.nprocPerNode instead.
          format: int32
          type: integer
        maxRestarts:
          format: int32
          type: integer
        Metrics:
          description: |-
            Metrics contains the specifications which are used to calculate the
            desired replica count (the maximum replica count across all metrics will
            be used).  The desired replica count is calculated with multiplying the
            ratio between the target value and the current value by the current
            number of pods. Ergo, metrics used must decrease as the pod count is
            increased, and vice-versa.  See the individual metric source types for
            more information about how each type of metric must respond.
            If not set, the HPA will not be created.
          items:
            properties: {}
            type: object
          type: array
      type: object
    v1PytorchJob:
      example:
        cleanPodPolicy: null
        nProcPerNode: nProcPerNode
        elasticPolicy:
          maxReplicas: 6
          rdvzId: rdvzId
          rdvzConf:
          - "{}"
          - "{}"
          nProcPerNode: 8
          Metrics:
          - "{}"
          - "{}"
          minReplicas: 8
          maxRestarts: 9
          rdvzHost: rdvzHost
          rdvzBackend: rdvzBackend
          standalone: true
          rdvzPort: 4
        kind: pytorchjob
        worker:
          container: "{}"
          init:
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          sidecars:
          - null
          - null
          environment:
            nodeName: nodeName
            dnsPolicy: dnsPolicy
            serviceAccountName: serviceAccountName
            hostNetwork: true
            dnsConfig: "{}"
            imagePullSecrets:
            - imagePullSecrets
            - imagePullSecrets
            priorityClassName: priorityClassName
            annotations:
              key: annotations
            hostAliases:
            - null
            - null
            securityContext: "{}"
            priority: 3
            restartPolicy: restartPolicy
            labels:
              key: labels
            nodeSelector:
              key: nodeSelector
            tolerations:
            - null
            - null
            schedulerName: schedulerName
            affinity: "{}"
            hostPID: hostPID
          replicas: 1
          volumes:
          - null
          - null
          connections:
          - connections
          - connections
        schedulingPolicy:
          minAvailable: 0
          priorityClass: priorityClass
          scheduleTimeoutSeconds: 2
          minResources: "{}"
          queue: queue
        master:
          container: "{}"
          init:
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          sidecars:
          - null
          - null
          environment:
            nodeName: nodeName
            dnsPolicy: dnsPolicy
            serviceAccountName: serviceAccountName
            hostNetwork: true
            dnsConfig: "{}"
            imagePullSecrets:
            - imagePullSecrets
            - imagePullSecrets
            priorityClassName: priorityClassName
            annotations:
              key: annotations
            hostAliases:
            - null
            - null
            securityContext: "{}"
            priority: 3
            restartPolicy: restartPolicy
            labels:
              key: labels
            nodeSelector:
              key: nodeSelector
            tolerations:
            - null
            - null
            schedulerName: schedulerName
            affinity: "{}"
            hostPID: hostPID
          replicas: 1
          volumes:
          - null
          - null
          connections:
          - connections
          - connections
      properties:
        kind:
          default: pytorchjob
          title: "Optional component kind, should be equal to 'pytorchjob'"
          type: string
        cleanPodPolicy:
          $ref: '#/components/schemas/v1CleanPodPolicy'
        schedulingPolicy:
          $ref: '#/components/schemas/v1SchedulingPolicy'
        elasticPolicy:
          $ref: '#/components/schemas/v1PytorchElasticPolicy'
        master:
          $ref: '#/components/schemas/v1KFReplica'
        worker:
          $ref: '#/components/schemas/v1KFReplica'
        nProcPerNode:
          type: string
      title: Pytorch Job specification
      type: object
    v1Queue:
      example:
        agent: agent
        updated_at: 2000-01-23T04:56:07.000+00:00
        resource: resource
        stats: "{}"
        quota: quota
        name: name
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        priority: 0
        uuid: uuid
        tags:
        - tags
        - tags
        concurrency: 6
      properties:
        uuid:
          title: UUID
          type: string
        agent:
          title: Agent
          type: string
        name:
          title: Name
          type: string
        description:
          title: Optional description
          type: string
        tags:
          items:
            type: string
          title: Optional tags of this entity
          type: array
        priority:
          format: int32
          title: The queue priority
          type: integer
        concurrency:
          format: int32
          title: The queue concurrency
          type: integer
        resource:
          title: Optional queue resource
          type: string
        quota:
          title: Optional queue quota
          type: string
        stats:
          properties: {}
          title: Optional queue stats
          type: object
        created_at:
          format: date-time
          title: Optional time when the entity was created
          type: string
        updated_at:
          format: date-time
          title: Optional last time the entity was updated
          type: string
      title: Queue specification
      type: object
    v1RandomSearch:
      example:
        seed: 1
        numRuns: 1
        kind: random
        params:
          key: "{}"
        earlyStopping:
        - "{}"
        - "{}"
        concurrency: 1
      properties:
        kind:
          default: random
          title: "Kind of matrix, should be equal to \"random\""
          type: string
        params:
          additionalProperties:
            properties: {}
            type: object
          title: Hyperparams/Space definition of params to traverse
          type: object
        numRuns:
          format: int32
          title: Number of runs to generate and search
          type: integer
        seed:
          format: int32
          title: Seed for the random generator
          type: integer
        concurrency:
          format: int32
          title: Number of concurrent runs
          type: integer
        earlyStopping:
          items:
            properties: {}
            type: object
          title: "A list of Early stoppings, accpets both metric and failure early\
            \ stopping mechanisms"
          type: array
      title: Matrix based on randomly generated search space
      type: object
    v1RayJob:
      example:
        rayVersion: rayVersion
        head:
          maxReplicas: 8
          container: "{}"
          init:
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          sidecars:
          - null
          - null
          groupName: groupName
          environment:
            nodeName: nodeName
            dnsPolicy: dnsPolicy
            serviceAccountName: serviceAccountName
            hostNetwork: true
            dnsConfig: "{}"
            imagePullSecrets:
            - imagePullSecrets
            - imagePullSecrets
            priorityClassName: priorityClassName
            annotations:
              key: annotations
            hostAliases:
            - null
            - null
            securityContext: "{}"
            priority: 3
            restartPolicy: restartPolicy
            labels:
              key: labels
            nodeSelector:
              key: nodeSelector
            tolerations:
            - null
            - null
            schedulerName: schedulerName
            affinity: "{}"
            hostPID: hostPID
          minReplicas: 5
          replicas: 5
          volumes:
          - null
          - null
          rayStartParams:
            key: rayStartParams
          connections:
          - connections
          - connections
        metadata:
          key: metadata
        kind: rayjob
        entrypoint: entrypoint
        workers:
        - maxReplicas: 8
          container: "{}"
          init:
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          sidecars:
          - null
          - null
          groupName: groupName
          environment:
            nodeName: nodeName
            dnsPolicy: dnsPolicy
            serviceAccountName: serviceAccountName
            hostNetwork: true
            dnsConfig: "{}"
            imagePullSecrets:
            - imagePullSecrets
            - imagePullSecrets
            priorityClassName: priorityClassName
            annotations:
              key: annotations
            hostAliases:
            - null
            - null
            securityContext: "{}"
            priority: 3
            restartPolicy: restartPolicy
            labels:
              key: labels
            nodeSelector:
              key: nodeSelector
            tolerations:
            - null
            - null
            schedulerName: schedulerName
            affinity: "{}"
            hostPID: hostPID
          minReplicas: 5
          replicas: 5
          volumes:
          - null
          - null
          rayStartParams:
            key: rayStartParams
          connections:
          - connections
          - connections
        - maxReplicas: 8
          container: "{}"
          init:
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          sidecars:
          - null
          - null
          groupName: groupName
          environment:
            nodeName: nodeName
            dnsPolicy: dnsPolicy
            serviceAccountName: serviceAccountName
            hostNetwork: true
            dnsConfig: "{}"
            imagePullSecrets:
            - imagePullSecrets
            - imagePullSecrets
            priorityClassName: priorityClassName
            annotations:
              key: annotations
            hostAliases:
            - null
            - null
            securityContext: "{}"
            priority: 3
            restartPolicy: restartPolicy
            labels:
              key: labels
            nodeSelector:
              key: nodeSelector
            tolerations:
            - null
            - null
            schedulerName: schedulerName
            affinity: "{}"
            hostPID: hostPID
          minReplicas: 5
          replicas: 5
          volumes:
          - null
          - null
          rayStartParams:
            key: rayStartParams
          connections:
          - connections
          - connections
        runtimeEnv: "{}"
      properties:
        kind:
          default: rayjob
          title: "Kind of runtime, should be equal to \"rayjob\""
          type: string
        entrypoint:
          title: "Entrypoint of the ray application, e.g. python path/to/run.py"
          type: string
        runtimeEnv:
          properties: {}
          title: Optional run environment section to install pip packages or expose
            env vars
          type: object
        metadata:
          additionalProperties:
            type: string
          title: Optional metadata section
          type: object
        rayVersion:
          title: "Cluster ray version, must be equal to the ray image version"
          type: string
        head:
          $ref: '#/components/schemas/v1RayReplica'
        workers:
          items:
            $ref: '#/components/schemas/v1RayReplica'
          title: Ray workers group section
          type: array
      title: Ray specification
      type: object
    v1RayReplica:
      example:
        maxReplicas: 8
        container: "{}"
        init:
        - modelRef: modelRef
          container: "{}"
          path: path
          git:
            flags:
            - flags
            - flags
            url: url
            revision: revision
          file:
            filename: filename
            kind: kind
            chmod: chmod
            content: content
          tensorboard:
            port: 6
            plugins: plugins
            use_names: true
            uuids:
            - uuids
            - uuids
            path_prefix: path_prefix
          artifactRef: artifactRef
          paths:
          - "{}"
          - "{}"
          dockerfile:
            image: image
            gid: 0
            workdirPath: workdirPath
            run:
            - run
            - run
            env:
              key: env
            path:
            - path
            - path
            uid: 7
            filename: filename
            workdir: workdir
            shell: shell
            post_run_copy:
            - "{}"
            - "{}"
            langEnv: langEnv
            copy:
            - "{}"
            - "{}"
            username: 7
          connection: connection
          lineageRef: lineageRef
          artifacts:
            files:
            - "{}"
            - "{}"
            dirs:
            - "{}"
            - "{}"
            workers: 3
        - modelRef: modelRef
          container: "{}"
          path: path
          git:
            flags:
            - flags
            - flags
            url: url
            revision: revision
          file:
            filename: filename
            kind: kind
            chmod: chmod
            content: content
          tensorboard:
            port: 6
            plugins: plugins
            use_names: true
            uuids:
            - uuids
            - uuids
            path_prefix: path_prefix
          artifactRef: artifactRef
          paths:
          - "{}"
          - "{}"
          dockerfile:
            image: image
            gid: 0
            workdirPath: workdirPath
            run:
            - run
            - run
            env:
              key: env
            path:
            - path
            - path
            uid: 7
            filename: filename
            workdir: workdir
            shell: shell
            post_run_copy:
            - "{}"
            - "{}"
            langEnv: langEnv
            copy:
            - "{}"
            - "{}"
            username: 7
          connection: connection
          lineageRef: lineageRef
          artifacts:
            files:
            - "{}"
            - "{}"
            dirs:
            - "{}"
            - "{}"
            workers: 3
        sidecars:
        - null
        - null
        groupName: groupName
        environment:
          nodeName: nodeName
          dnsPolicy: dnsPolicy
          serviceAccountName: serviceAccountName
          hostNetwork: true
          dnsConfig: "{}"
          imagePullSecrets:
          - imagePullSecrets
          - imagePullSecrets
          priorityClassName: priorityClassName
          annotations:
            key: annotations
          hostAliases:
          - null
          - null
          securityContext: "{}"
          priority: 3
          restartPolicy: restartPolicy
          labels:
            key: labels
          nodeSelector:
            key: nodeSelector
          tolerations:
          - null
          - null
          schedulerName: schedulerName
          affinity: "{}"
          hostPID: hostPID
        minReplicas: 5
        replicas: 5
        volumes:
        - null
        - null
        rayStartParams:
          key: rayStartParams
        connections:
        - connections
        - connections
      properties:
        replicas:
          format: int32
          title: Number of replicas
          type: integer
        minReplicas:
          format: int32
          type: integer
        maxReplicas:
          format: int32
          type: integer
        groupName:
          type: string
        rayStartParams:
          additionalProperties:
            type: string
          type: object
        environment:
          $ref: '#/components/schemas/v1Environment'
        connections:
          items:
            type: string
          title: Optional connections section
          type: array
        volumes:
          description: Volumes is a list of volumes that can be mounted.
          items:
            $ref: '#/components/schemas/v1Volume'
          type: array
        init:
          items:
            $ref: '#/components/schemas/v1Init'
          title: Optional init connections section
          type: array
        sidecars:
          items:
            $ref: '#/components/schemas/v1Container'
          title: Optional sidecars section
          type: array
        container:
          title: Placeholder for Container
          type: object
      title: Ray replica definition
      type: object
    v1Reference:
      example:
        dagRef:
          kind: dag_ref
          name: name
        hubRef:
          kind: hub_ref
          name: name
        urlRef:
          kind: url_ref
          url: url
        pathRef:
          path: path
          kind: path_ref
      properties:
        hubRef:
          $ref: '#/components/schemas/v1HubRef'
        dagRef:
          $ref: '#/components/schemas/v1DagRef'
        urlRef:
          $ref: '#/components/schemas/v1UrlRef'
        pathRef:
          $ref: '#/components/schemas/v1PathRef'
      title: Reference specification
      type: object
    v1ResourceRequirements:
      title: Placeholder Resource Requirements
      type: object
    v1ResourceType:
      default: int
      description: |-
        - int: Int resource
         - float: Float resource
      enum:
      - int
      - float
      title: ResourceTypes enum for optmiztion resources
      type: string
    v1Run:
      example:
        outputs: "{}"
        role: role
        finished_at: 2000-01-23T04:56:07.000+00:00
        managed_by: null
        inputs: "{}"
        pending: null
        description: description
        project: project
        created_at: 2000-01-23T04:56:07.000+00:00
        uuid: uuid
        content: content
        duration: 1.4658129
        updated_at: 2000-01-23T04:56:07.000+00:00
        meta_info: "{}"
        merge: true
        owner: owner
        settings:
          models:
          - owner: owner
            name: name
            project: project
            state: state
          - owner: owner
            name: name
            project: project
            state: state
          agent:
            name: name
            uuid: uuid
            version: version
            url: url
          component: "{}"
          tensorboard: "{}"
          build: "{}"
          namespace: namespace
          artifacts_store:
            name: name
            uuid: uuid
            version: version
            url: url
          queue:
            name: name
            uuid: uuid
            version: version
            url: url
          artifacts:
          - owner: owner
            name: name
            project: project
            state: state
          - owner: owner
            name: name
            project: project
            state: state
        raw_content: raw_content
        original:
          kind: null
          name: name
          uuid: uuid
        wait_time: 6.0274563
        schedule_at: 2000-01-23T04:56:07.000+00:00
        bookmarked: true
        kind: null
        runtime: null
        resources:
          memory: 2.302136
          cost: 3.6160767
          custom: 9.301444
          cpu: 5.637377
          gpu: 7.0614014
        live_state: 5
        readme: readme
        graph: "{}"
        tags:
        - tags
        - tags
        pipeline:
          kind: null
          name: name
          uuid: uuid
        name: name
        started_at: 2000-01-23T04:56:07.000+00:00
        is_approved: true
        contributors:
        - "{}"
        - "{}"
        user: user
        status_conditions:
        - reason: reason
          last_update_time: 2000-01-23T04:56:07.000+00:00
          meta_info: "{}"
          last_transition_time: 2000-01-23T04:56:07.000+00:00
          type: null
          message: message
          status: status
        - reason: reason
          last_update_time: 2000-01-23T04:56:07.000+00:00
          meta_info: "{}"
          last_transition_time: 2000-01-23T04:56:07.000+00:00
          type: null
          message: message
          status: status
        is_managed: true
        status: null
      properties:
        uuid:
          title: UUID
          type: string
        name:
          title: Optional name
          type: string
        description:
          title: Optional description
          type: string
        tags:
          items:
            type: string
          title: Optional tags of this entity
          type: array
        user:
          title: Required name of user started this entity
          type: string
        owner:
          title: Required name of owner of this entity
          type: string
        project:
          title: Required project name
          type: string
        schedule_at:
          format: date-time
          title: Optional last time the entity was started
          type: string
        created_at:
          format: date-time
          title: Optional time when the entity was created
          type: string
        updated_at:
          format: date-time
          title: Optional last time the entity was updated
          type: string
        started_at:
          format: date-time
          title: Optional last time the entity was started
          type: string
        finished_at:
          format: date-time
          title: Optional last time the entity was started
          type: string
        wait_time:
          format: float
          title: Optional wait time of the entity
          type: number
        duration:
          format: float
          title: Optional duration of the entity
          type: number
        managed_by:
          $ref: '#/components/schemas/v1ManagedBy'
        is_managed:
          title: Optional flag to tell if this entity is managed by the platform
          type: boolean
        is_approved:
          title: "Deprecated flag that was replaced by \"pending\", and it will be\
            \ completely dropped after v1.15"
          type: boolean
        pending:
          $ref: '#/components/schemas/v1RunPending'
        content:
          title: Optional content of the entity's spec
          type: string
        raw_content:
          title: Optional content of the entity's spec
          type: string
        status:
          $ref: '#/components/schemas/v1Statuses'
        bookmarked:
          title: Optional if this entity was bookmarked
          type: boolean
        live_state:
          format: int32
          title: Current live state
          type: integer
        readme:
          title: Optional Markdown description/readme
          type: string
        meta_info:
          properties: {}
          title: Optional run meta info
          type: object
        kind:
          $ref: '#/components/schemas/v1RunKind'
        runtime:
          $ref: '#/components/schemas/v1RunKind'
        inputs:
          properties: {}
          title: Optional inputs of this entity
          type: object
        outputs:
          properties: {}
          title: Optional outputs of this entity
          type: object
        original:
          $ref: '#/components/schemas/v1Cloning'
        pipeline:
          $ref: '#/components/schemas/v1Pipeline'
        status_conditions:
          items:
            $ref: '#/components/schemas/v1StatusCondition'
          title: The status conditions timeline
          type: array
        role:
          title: Current user's role in this (org/teams)/project/runs
          type: string
        contributors:
          items:
            properties: {}
            type: object
          title: Contributors
          type: array
        settings:
          $ref: '#/components/schemas/v1RunSettings'
        resources:
          $ref: '#/components/schemas/v1RunResources'
        graph:
          properties: {}
          title: Optional graph definition
          type: object
        merge:
          title: Optional merge flag
          type: boolean
      title: Run specification
      type: object
    v1RunArtifact:
      example:
        summary: "{}"
        path: path
        kind: null
        meta_info: "{}"
        name: name
        connection: connection
        run: run
        is_input: true
        state: state
      properties:
        name:
          title: Artifact name
          type: string
        state:
          title: State
          type: string
        kind:
          $ref: '#/components/schemas/v1ArtifactKind'
        path:
          title: Artifact path
          type: string
        connection:
          title: Optional Connection
          type: string
        run:
          title: Optional Run
          type: string
        summary:
          properties: {}
          title: Artifact schema
          type: object
        is_input:
          title: Optional flag to check the use of the artifact in a context
          type: boolean
        meta_info:
          properties: {}
          title: Optional meta information
          type: object
      title: Run Artifact spec definition
      type: object
    v1RunArtifacts:
      properties:
        artifacts:
          items:
            $ref: '#/components/schemas/v1RunArtifact'
          title: Run Artifacts
          type: array
      title: Run Artifacts spec definition
      type: object
    v1RunConnection:
      example:
        kind: kind
        name: name
        uuid: uuid
      properties:
        uuid:
          title: Uuid
          type: string
        name:
          title: Name
          type: string
        kind:
          title: Kind
          type: string
      type: object
    v1RunEdge:
      example:
        upstream:
          outputs: "{}"
          role: role
          finished_at: 2000-01-23T04:56:07.000+00:00
          managed_by: null
          inputs: "{}"
          pending: null
          description: description
          project: project
          created_at: 2000-01-23T04:56:07.000+00:00
          uuid: uuid
          content: content
          duration: 1.4658129
          updated_at: 2000-01-23T04:56:07.000+00:00
          meta_info: "{}"
          merge: true
          owner: owner
          settings:
            models:
            - owner: owner
              name: name
              project: project
              state: state
            - owner: owner
              name: name
              project: project
              state: state
            agent:
              name: name
              uuid: uuid
              version: version
              url: url
            component: "{}"
            tensorboard: "{}"
            build: "{}"
            namespace: namespace
            artifacts_store:
              name: name
              uuid: uuid
              version: version
              url: url
            queue:
              name: name
              uuid: uuid
              version: version
              url: url
            artifacts:
            - owner: owner
              name: name
              project: project
              state: state
            - owner: owner
              name: name
              project: project
              state: state
          raw_content: raw_content
          original:
            kind: null
            name: name
            uuid: uuid
          wait_time: 6.0274563
          schedule_at: 2000-01-23T04:56:07.000+00:00
          bookmarked: true
          kind: null
          runtime: null
          resources:
            memory: 2.302136
            cost: 3.6160767
            custom: 9.301444
            cpu: 5.637377
            gpu: 7.0614014
          live_state: 5
          readme: readme
          graph: "{}"
          tags:
          - tags
          - tags
          pipeline:
            kind: null
            name: name
            uuid: uuid
          name: name
          started_at: 2000-01-23T04:56:07.000+00:00
          is_approved: true
          contributors:
          - "{}"
          - "{}"
          user: user
          status_conditions:
          - reason: reason
            last_update_time: 2000-01-23T04:56:07.000+00:00
            meta_info: "{}"
            last_transition_time: 2000-01-23T04:56:07.000+00:00
            type: null
            message: message
            status: status
          - reason: reason
            last_update_time: 2000-01-23T04:56:07.000+00:00
            meta_info: "{}"
            last_transition_time: 2000-01-23T04:56:07.000+00:00
            type: null
            message: message
            status: status
          is_managed: true
          status: null
        kind: null
        values: "{}"
        downstream:
          outputs: "{}"
          role: role
          finished_at: 2000-01-23T04:56:07.000+00:00
          managed_by: null
          inputs: "{}"
          pending: null
          description: description
          project: project
          created_at: 2000-01-23T04:56:07.000+00:00
          uuid: uuid
          content: content
          duration: 1.4658129
          updated_at: 2000-01-23T04:56:07.000+00:00
          meta_info: "{}"
          merge: true
          owner: owner
          settings:
            models:
            - owner: owner
              name: name
              project: project
              state: state
            - owner: owner
              name: name
              project: project
              state: state
            agent:
              name: name
              uuid: uuid
              version: version
              url: url
            component: "{}"
            tensorboard: "{}"
            build: "{}"
            namespace: namespace
            artifacts_store:
              name: name
              uuid: uuid
              version: version
              url: url
            queue:
              name: name
              uuid: uuid
              version: version
              url: url
            artifacts:
            - owner: owner
              name: name
              project: project
              state: state
            - owner: owner
              name: name
              project: project
              state: state
          raw_content: raw_content
          original:
            kind: null
            name: name
            uuid: uuid
          wait_time: 6.0274563
          schedule_at: 2000-01-23T04:56:07.000+00:00
          bookmarked: true
          kind: null
          runtime: null
          resources:
            memory: 2.302136
            cost: 3.6160767
            custom: 9.301444
            cpu: 5.637377
            gpu: 7.0614014
          live_state: 5
          readme: readme
          graph: "{}"
          tags:
          - tags
          - tags
          pipeline:
            kind: null
            name: name
            uuid: uuid
          name: name
          started_at: 2000-01-23T04:56:07.000+00:00
          is_approved: true
          contributors:
          - "{}"
          - "{}"
          user: user
          status_conditions:
          - reason: reason
            last_update_time: 2000-01-23T04:56:07.000+00:00
            meta_info: "{}"
            last_transition_time: 2000-01-23T04:56:07.000+00:00
            type: null
            message: message
            status: status
          - reason: reason
            last_update_time: 2000-01-23T04:56:07.000+00:00
            meta_info: "{}"
            last_transition_time: 2000-01-23T04:56:07.000+00:00
            type: null
            message: message
            status: status
          is_managed: true
          status: null
        statuses:
        - null
        - null
      properties:
        upstream:
          $ref: '#/components/schemas/v1Run'
        downstream:
          $ref: '#/components/schemas/v1Run'
        kind:
          $ref: '#/components/schemas/v1RunEdgeKind'
        values:
          properties: {}
          title: Optional edge values
          type: object
        statuses:
          items:
            $ref: '#/components/schemas/v1Statuses'
          title: Options statuses events
          type: array
      type: object
    v1RunEdgeKind:
      default: action
      enum:
      - action
      - event
      - hook
      - dag
      - join
      - run
      - tb
      - build
      - manual
      type: string
    v1RunEdgeLineage:
      properties:
        uuid:
          title: Run uuid to link
          type: string
        is_upstream:
          title: Optional edge run direction
          type: boolean
        values:
          properties: {}
          title: Optional edge values
          type: object
      title: single run edge
      type: object
    v1RunEdgesGraph:
      properties:
        edges:
          items:
            $ref: '#/components/schemas/v1RunEdgeLineage'
          title: Run edges
          type: array
      type: object
    v1RunKind:
      default: job
      enum:
      - job
      - service
      - dag
      - daskjob
      - rayjob
      - mpijob
      - tfjob
      - pytorchjob
      - mxjob
      - xgbjob
      - paddlejob
      - matrix
      - schedule
      - tuner
      - watchdog
      - notifier
      - builder
      - cleaner
      title: |-
        Run kind enum
        Kinds: job, service, dag, matrix, schedule
        Runtime kinds: job, service, dag, dask, ray, mpijob, tfjob
        helper kinds: tuner, watchdog, notifier, cleaner, build
      type: string
    v1RunPending:
      default: approval
      enum:
      - approval
      - upload
      - cache
      - build
      type: string
    v1RunReferenceCatalog:
      example:
        owner: owner
        name: name
        project: project
        state: state
      properties:
        owner:
          title: Owner
          type: string
        project:
          title: Project
          type: string
        name:
          title: Name
          type: string
        state:
          title: State
          type: string
      title: Run Settings catalog specification
      type: object
    v1RunResources:
      example:
        memory: 2.302136
        cost: 3.6160767
        custom: 9.301444
        cpu: 5.637377
        gpu: 7.0614014
      properties:
        cpu:
          format: float
          type: number
        memory:
          format: float
          type: number
        gpu:
          format: float
          type: number
        custom:
          format: float
          type: number
        cost:
          format: float
          type: number
      title: Run Resources specification
      type: object
    v1RunSchema:
      example:
        daskJob:
          scheduler:
            container: "{}"
            init:
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            sidecars:
            - null
            - null
            environment:
              nodeName: nodeName
              dnsPolicy: dnsPolicy
              serviceAccountName: serviceAccountName
              hostNetwork: true
              dnsConfig: "{}"
              imagePullSecrets:
              - imagePullSecrets
              - imagePullSecrets
              priorityClassName: priorityClassName
              annotations:
                key: annotations
              hostAliases:
              - null
              - null
              securityContext: "{}"
              priority: 3
              restartPolicy: restartPolicy
              labels:
                key: labels
              nodeSelector:
                key: nodeSelector
              tolerations:
              - null
              - null
              schedulerName: schedulerName
              affinity: "{}"
              hostPID: hostPID
            replicas: 0
            volumes:
            - null
            - null
            connections:
            - connections
            - connections
          kind: daskjob
          job:
            container: "{}"
            init:
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            sidecars:
            - null
            - null
            environment:
              nodeName: nodeName
              dnsPolicy: dnsPolicy
              serviceAccountName: serviceAccountName
              hostNetwork: true
              dnsConfig: "{}"
              imagePullSecrets:
              - imagePullSecrets
              - imagePullSecrets
              priorityClassName: priorityClassName
              annotations:
                key: annotations
              hostAliases:
              - null
              - null
              securityContext: "{}"
              priority: 3
              restartPolicy: restartPolicy
              labels:
                key: labels
              nodeSelector:
                key: nodeSelector
              tolerations:
              - null
              - null
              schedulerName: schedulerName
              affinity: "{}"
              hostPID: hostPID
            replicas: 0
            volumes:
            - null
            - null
            connections:
            - connections
            - connections
          worker:
            container: "{}"
            init:
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            sidecars:
            - null
            - null
            environment:
              nodeName: nodeName
              dnsPolicy: dnsPolicy
              serviceAccountName: serviceAccountName
              hostNetwork: true
              dnsConfig: "{}"
              imagePullSecrets:
              - imagePullSecrets
              - imagePullSecrets
              priorityClassName: priorityClassName
              annotations:
                key: annotations
              hostAliases:
              - null
              - null
              securityContext: "{}"
              priority: 3
              restartPolicy: restartPolicy
              labels:
                key: labels
              nodeSelector:
                key: nodeSelector
              tolerations:
              - null
              - null
              schedulerName: schedulerName
              affinity: "{}"
              hostPID: hostPID
            replicas: 0
            volumes:
            - null
            - null
            connections:
            - connections
            - connections
        paddleJob:
          cleanPodPolicy: null
          elasticPolicy:
            maxReplicas: 9
            minReplicas: 3
            maxRestarts: 8
            metrics:
            - "{}"
            - "{}"
          kind: paddlejob
          worker:
            container: "{}"
            init:
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            sidecars:
            - null
            - null
            environment:
              nodeName: nodeName
              dnsPolicy: dnsPolicy
              serviceAccountName: serviceAccountName
              hostNetwork: true
              dnsConfig: "{}"
              imagePullSecrets:
              - imagePullSecrets
              - imagePullSecrets
              priorityClassName: priorityClassName
              annotations:
                key: annotations
              hostAliases:
              - null
              - null
              securityContext: "{}"
              priority: 3
              restartPolicy: restartPolicy
              labels:
                key: labels
              nodeSelector:
                key: nodeSelector
              tolerations:
              - null
              - null
              schedulerName: schedulerName
              affinity: "{}"
              hostPID: hostPID
            replicas: 1
            volumes:
            - null
            - null
            connections:
            - connections
            - connections
          schedulingPolicy:
            minAvailable: 0
            priorityClass: priorityClass
            scheduleTimeoutSeconds: 2
            minResources: "{}"
            queue: queue
          master:
            container: "{}"
            init:
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            sidecars:
            - null
            - null
            environment:
              nodeName: nodeName
              dnsPolicy: dnsPolicy
              serviceAccountName: serviceAccountName
              hostNetwork: true
              dnsConfig: "{}"
              imagePullSecrets:
              - imagePullSecrets
              - imagePullSecrets
              priorityClassName: priorityClassName
              annotations:
                key: annotations
              hostAliases:
              - null
              - null
              securityContext: "{}"
              priority: 3
              restartPolicy: restartPolicy
              labels:
                key: labels
              nodeSelector:
                key: nodeSelector
              tolerations:
              - null
              - null
              schedulerName: schedulerName
              affinity: "{}"
              hostPID: hostPID
            replicas: 1
            volumes:
            - null
            - null
            connections:
            - connections
            - connections
        rayJob:
          rayVersion: rayVersion
          head:
            maxReplicas: 8
            container: "{}"
            init:
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            sidecars:
            - null
            - null
            groupName: groupName
            environment:
              nodeName: nodeName
              dnsPolicy: dnsPolicy
              serviceAccountName: serviceAccountName
              hostNetwork: true
              dnsConfig: "{}"
              imagePullSecrets:
              - imagePullSecrets
              - imagePullSecrets
              priorityClassName: priorityClassName
              annotations:
                key: annotations
              hostAliases:
              - null
              - null
              securityContext: "{}"
              priority: 3
              restartPolicy: restartPolicy
              labels:
                key: labels
              nodeSelector:
                key: nodeSelector
              tolerations:
              - null
              - null
              schedulerName: schedulerName
              affinity: "{}"
              hostPID: hostPID
            minReplicas: 5
            replicas: 5
            volumes:
            - null
            - null
            rayStartParams:
              key: rayStartParams
            connections:
            - connections
            - connections
          metadata:
            key: metadata
          kind: rayjob
          entrypoint: entrypoint
          workers:
          - maxReplicas: 8
            container: "{}"
            init:
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            sidecars:
            - null
            - null
            groupName: groupName
            environment:
              nodeName: nodeName
              dnsPolicy: dnsPolicy
              serviceAccountName: serviceAccountName
              hostNetwork: true
              dnsConfig: "{}"
              imagePullSecrets:
              - imagePullSecrets
              - imagePullSecrets
              priorityClassName: priorityClassName
              annotations:
                key: annotations
              hostAliases:
              - null
              - null
              securityContext: "{}"
              priority: 3
              restartPolicy: restartPolicy
              labels:
                key: labels
              nodeSelector:
                key: nodeSelector
              tolerations:
              - null
              - null
              schedulerName: schedulerName
              affinity: "{}"
              hostPID: hostPID
            minReplicas: 5
            replicas: 5
            volumes:
            - null
            - null
            rayStartParams:
              key: rayStartParams
            connections:
            - connections
            - connections
          - maxReplicas: 8
            container: "{}"
            init:
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            sidecars:
            - null
            - null
            groupName: groupName
            environment:
              nodeName: nodeName
              dnsPolicy: dnsPolicy
              serviceAccountName: serviceAccountName
              hostNetwork: true
              dnsConfig: "{}"
              imagePullSecrets:
              - imagePullSecrets
              - imagePullSecrets
              priorityClassName: priorityClassName
              annotations:
                key: annotations
              hostAliases:
              - null
              - null
              securityContext: "{}"
              priority: 3
              restartPolicy: restartPolicy
              labels:
                key: labels
              nodeSelector:
                key: nodeSelector
              tolerations:
              - null
              - null
              schedulerName: schedulerName
              affinity: "{}"
              hostPID: hostPID
            minReplicas: 5
            replicas: 5
            volumes:
            - null
            - null
            rayStartParams:
              key: rayStartParams
            connections:
            - connections
            - connections
          runtimeEnv: "{}"
        mxJob:
          mode: null
          scheduler:
            container: "{}"
            init:
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            sidecars:
            - null
            - null
            environment:
              nodeName: nodeName
              dnsPolicy: dnsPolicy
              serviceAccountName: serviceAccountName
              hostNetwork: true
              dnsConfig: "{}"
              imagePullSecrets:
              - imagePullSecrets
              - imagePullSecrets
              priorityClassName: priorityClassName
              annotations:
                key: annotations
              hostAliases:
              - null
              - null
              securityContext: "{}"
              priority: 3
              restartPolicy: restartPolicy
              labels:
                key: labels
              nodeSelector:
                key: nodeSelector
              tolerations:
              - null
              - null
              schedulerName: schedulerName
              affinity: "{}"
              hostPID: hostPID
            replicas: 1
            volumes:
            - null
            - null
            connections:
            - connections
            - connections
          cleanPodPolicy: null
          server:
            container: "{}"
            init:
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            sidecars:
            - null
            - null
            environment:
              nodeName: nodeName
              dnsPolicy: dnsPolicy
              serviceAccountName: serviceAccountName
              hostNetwork: true
              dnsConfig: "{}"
              imagePullSecrets:
              - imagePullSecrets
              - imagePullSecrets
              priorityClassName: priorityClassName
              annotations:
                key: annotations
              hostAliases:
              - null
              - null
              securityContext: "{}"
              priority: 3
              restartPolicy: restartPolicy
              labels:
                key: labels
              nodeSelector:
                key: nodeSelector
              tolerations:
              - null
              - null
              schedulerName: schedulerName
              affinity: "{}"
              hostPID: hostPID
            replicas: 1
            volumes:
            - null
            - null
            connections:
            - connections
            - connections
          tuner_server:
            container: "{}"
            init:
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            sidecars:
            - null
            - null
            environment:
              nodeName: nodeName
              dnsPolicy: dnsPolicy
              serviceAccountName: serviceAccountName
              hostNetwork: true
              dnsConfig: "{}"
              imagePullSecrets:
              - imagePullSecrets
              - imagePullSecrets
              priorityClassName: priorityClassName
              annotations:
                key: annotations
              hostAliases:
              - null
              - null
              securityContext: "{}"
              priority: 3
              restartPolicy: restartPolicy
              labels:
                key: labels
              nodeSelector:
                key: nodeSelector
              tolerations:
              - null
              - null
              schedulerName: schedulerName
              affinity: "{}"
              hostPID: hostPID
            replicas: 1
            volumes:
            - null
            - null
            connections:
            - connections
            - connections
          tuner:
            container: "{}"
            init:
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            sidecars:
            - null
            - null
            environment:
              nodeName: nodeName
              dnsPolicy: dnsPolicy
              serviceAccountName: serviceAccountName
              hostNetwork: true
              dnsConfig: "{}"
              imagePullSecrets:
              - imagePullSecrets
              - imagePullSecrets
              priorityClassName: priorityClassName
              annotations:
                key: annotations
              hostAliases:
              - null
              - null
              securityContext: "{}"
              priority: 3
              restartPolicy: restartPolicy
              labels:
                key: labels
              nodeSelector:
                key: nodeSelector
              tolerations:
              - null
              - null
              schedulerName: schedulerName
              affinity: "{}"
              hostPID: hostPID
            replicas: 1
            volumes:
            - null
            - null
            connections:
            - connections
            - connections
          tuner_tracker:
            container: "{}"
            init:
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            sidecars:
            - null
            - null
            environment:
              nodeName: nodeName
              dnsPolicy: dnsPolicy
              serviceAccountName: serviceAccountName
              hostNetwork: true
              dnsConfig: "{}"
              imagePullSecrets:
              - imagePullSecrets
              - imagePullSecrets
              priorityClassName: priorityClassName
              annotations:
                key: annotations
              hostAliases:
              - null
              - null
              securityContext: "{}"
              priority: 3
              restartPolicy: restartPolicy
              labels:
                key: labels
              nodeSelector:
                key: nodeSelector
              tolerations:
              - null
              - null
              schedulerName: schedulerName
              affinity: "{}"
              hostPID: hostPID
            replicas: 1
            volumes:
            - null
            - null
            connections:
            - connections
            - connections
          kind: mxjob
          worker:
            container: "{}"
            init:
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            sidecars:
            - null
            - null
            environment:
              nodeName: nodeName
              dnsPolicy: dnsPolicy
              serviceAccountName: serviceAccountName
              hostNetwork: true
              dnsConfig: "{}"
              imagePullSecrets:
              - imagePullSecrets
              - imagePullSecrets
              priorityClassName: priorityClassName
              annotations:
                key: annotations
              hostAliases:
              - null
              - null
              securityContext: "{}"
              priority: 3
              restartPolicy: restartPolicy
              labels:
                key: labels
              nodeSelector:
                key: nodeSelector
              tolerations:
              - null
              - null
              schedulerName: schedulerName
              affinity: "{}"
              hostPID: hostPID
            replicas: 1
            volumes:
            - null
            - null
            connections:
            - connections
            - connections
          schedulingPolicy:
            minAvailable: 0
            priorityClass: priorityClass
            scheduleTimeoutSeconds: 2
            minResources: "{}"
            queue: queue
        service:
          container: "{}"
          init:
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          sidecars:
          - null
          - null
          environment:
            nodeName: nodeName
            dnsPolicy: dnsPolicy
            serviceAccountName: serviceAccountName
            hostNetwork: true
            dnsConfig: "{}"
            imagePullSecrets:
            - imagePullSecrets
            - imagePullSecrets
            priorityClassName: priorityClassName
            annotations:
              key: annotations
            hostAliases:
            - null
            - null
            securityContext: "{}"
            priority: 3
            restartPolicy: restartPolicy
            labels:
              key: labels
            nodeSelector:
              key: nodeSelector
            tolerations:
            - null
            - null
            schedulerName: schedulerName
            affinity: "{}"
            hostPID: hostPID
          isExternal: true
          kind: service
          replicas: 4
          volumes:
          - null
          - null
          ports:
          - 0
          - 0
          rewritePath: true
          connections:
          - connections
          - connections
        tfJob:
          cleanPodPolicy: null
          enableDynamicWorker: true
          ps:
            container: "{}"
            init:
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            sidecars:
            - null
            - null
            environment:
              nodeName: nodeName
              dnsPolicy: dnsPolicy
              serviceAccountName: serviceAccountName
              hostNetwork: true
              dnsConfig: "{}"
              imagePullSecrets:
              - imagePullSecrets
              - imagePullSecrets
              priorityClassName: priorityClassName
              annotations:
                key: annotations
              hostAliases:
              - null
              - null
              securityContext: "{}"
              priority: 3
              restartPolicy: restartPolicy
              labels:
                key: labels
              nodeSelector:
                key: nodeSelector
              tolerations:
              - null
              - null
              schedulerName: schedulerName
              affinity: "{}"
              hostPID: hostPID
            replicas: 1
            volumes:
            - null
            - null
            connections:
            - connections
            - connections
          kind: tfjob
          chief:
            container: "{}"
            init:
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            sidecars:
            - null
            - null
            environment:
              nodeName: nodeName
              dnsPolicy: dnsPolicy
              serviceAccountName: serviceAccountName
              hostNetwork: true
              dnsConfig: "{}"
              imagePullSecrets:
              - imagePullSecrets
              - imagePullSecrets
              priorityClassName: priorityClassName
              annotations:
                key: annotations
              hostAliases:
              - null
              - null
              securityContext: "{}"
              priority: 3
              restartPolicy: restartPolicy
              labels:
                key: labels
              nodeSelector:
                key: nodeSelector
              tolerations:
              - null
              - null
              schedulerName: schedulerName
              affinity: "{}"
              hostPID: hostPID
            replicas: 1
            volumes:
            - null
            - null
            connections:
            - connections
            - connections
          worker:
            container: "{}"
            init:
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            sidecars:
            - null
            - null
            environment:
              nodeName: nodeName
              dnsPolicy: dnsPolicy
              serviceAccountName: serviceAccountName
              hostNetwork: true
              dnsConfig: "{}"
              imagePullSecrets:
              - imagePullSecrets
              - imagePullSecrets
              priorityClassName: priorityClassName
              annotations:
                key: annotations
              hostAliases:
              - null
              - null
              securityContext: "{}"
              priority: 3
              restartPolicy: restartPolicy
              labels:
                key: labels
              nodeSelector:
                key: nodeSelector
              tolerations:
              - null
              - null
              schedulerName: schedulerName
              affinity: "{}"
              hostPID: hostPID
            replicas: 1
            volumes:
            - null
            - null
            connections:
            - connections
            - connections
          schedulingPolicy:
            minAvailable: 0
            priorityClass: priorityClass
            scheduleTimeoutSeconds: 2
            minResources: "{}"
            queue: queue
          successPolicy: successPolicy
          evaluator:
            container: "{}"
            init:
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            sidecars:
            - null
            - null
            environment:
              nodeName: nodeName
              dnsPolicy: dnsPolicy
              serviceAccountName: serviceAccountName
              hostNetwork: true
              dnsConfig: "{}"
              imagePullSecrets:
              - imagePullSecrets
              - imagePullSecrets
              priorityClassName: priorityClassName
              annotations:
                key: annotations
              hostAliases:
              - null
              - null
              securityContext: "{}"
              priority: 3
              restartPolicy: restartPolicy
              labels:
                key: labels
              nodeSelector:
                key: nodeSelector
              tolerations:
              - null
              - null
              schedulerName: schedulerName
              affinity: "{}"
              hostPID: hostPID
            replicas: 1
            volumes:
            - null
            - null
            connections:
            - connections
            - connections
        xgboostJob:
          cleanPodPolicy: null
          kind: xgboostjob
          worker:
            container: "{}"
            init:
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            sidecars:
            - null
            - null
            environment:
              nodeName: nodeName
              dnsPolicy: dnsPolicy
              serviceAccountName: serviceAccountName
              hostNetwork: true
              dnsConfig: "{}"
              imagePullSecrets:
              - imagePullSecrets
              - imagePullSecrets
              priorityClassName: priorityClassName
              annotations:
                key: annotations
              hostAliases:
              - null
              - null
              securityContext: "{}"
              priority: 3
              restartPolicy: restartPolicy
              labels:
                key: labels
              nodeSelector:
                key: nodeSelector
              tolerations:
              - null
              - null
              schedulerName: schedulerName
              affinity: "{}"
              hostPID: hostPID
            replicas: 1
            volumes:
            - null
            - null
            connections:
            - connections
            - connections
          schedulingPolicy:
            minAvailable: 0
            priorityClass: priorityClass
            scheduleTimeoutSeconds: 2
            minResources: "{}"
            queue: queue
          master:
            container: "{}"
            init:
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            sidecars:
            - null
            - null
            environment:
              nodeName: nodeName
              dnsPolicy: dnsPolicy
              serviceAccountName: serviceAccountName
              hostNetwork: true
              dnsConfig: "{}"
              imagePullSecrets:
              - imagePullSecrets
              - imagePullSecrets
              priorityClassName: priorityClassName
              annotations:
                key: annotations
              hostAliases:
              - null
              - null
              securityContext: "{}"
              priority: 3
              restartPolicy: restartPolicy
              labels:
                key: labels
              nodeSelector:
                key: nodeSelector
              tolerations:
              - null
              - null
              schedulerName: schedulerName
              affinity: "{}"
              hostPID: hostPID
            replicas: 1
            volumes:
            - null
            - null
            connections:
            - connections
            - connections
        dag:
          components:
          - termination:
              maxRetries: 3
              ttl: 3
              timeout: 7
            outputs:
            - delayValidation: true
              toEnv: toEnv
              description: description
              isOptional: true
              type: type
              isList: true
              isFlag: true
              argFormat: argFormat
              name: name
              options:
              - "{}"
              - "{}"
              connection: connection
              toInit: true
              value: "{}"
              validation:
                multipleOf: 0
                maxItems: 8
                excludes:
                - "{}"
                - "{}"
                keys:
                - keys
                - keys
                minLength: 5
                lt: 7
                maxDigits: 0
                containsKeys:
                - containsKeys
                - containsKeys
                gt: 1
                minItems: 6
                regex: regex
                contains:
                - "{}"
                - "{}"
                delay: true
                decimalPlaces: 7
                excludesKeys:
                - excludesKeys
                - excludesKeys
                minDigits: 9
                options:
                - "{}"
                - "{}"
                le: 9
                ge: 4
                maxLength: 4
            - delayValidation: true
              toEnv: toEnv
              description: description
              isOptional: true
              type: type
              isList: true
              isFlag: true
              argFormat: argFormat
              name: name
              options:
              - "{}"
              - "{}"
              connection: connection
              toInit: true
              value: "{}"
              validation:
                multipleOf: 0
                maxItems: 8
                excludes:
                - "{}"
                - "{}"
                keys:
                - keys
                - keys
                minLength: 5
                lt: 7
                maxDigits: 0
                containsKeys:
                - containsKeys
                - containsKeys
                gt: 1
                minItems: 6
                regex: regex
                contains:
                - "{}"
                - "{}"
                delay: true
                decimalPlaces: 7
                excludesKeys:
                - excludesKeys
                - excludesKeys
                minDigits: 9
                options:
                - "{}"
                - "{}"
                le: 9
                ge: 4
                maxLength: 4
            template:
              description: description
              fields:
              - fields
              - fields
              enabled: true
            cache:
              disable: true
              io:
              - io
              - io
              ttl: 7
              sections:
              - sections
              - sections
            cost: 4.459605
            kind: kind
            plugins:
              mountArtifactsStore: true
              syncStatuses: true
              auth: true
              collectResources: true
              collectLogs: true
              externalHost: true
              docker: true
              collectArtifacts: true
              logLevel: logLevel
              autoResume: true
              sidecar:
                sleepInterval: 5
                monitorSpec: true
                image: image
                imagePullPolicy: imagePullPolicy
                syncInterval: 3
                resources: "{}"
                monitorLogs: true
                imageTag: imageTag
              shm: true
              notifications:
              - trigger: null
                connections:
                - connections
                - connections
              - trigger: null
                connections:
                - connections
                - connections
            inputs:
            - delayValidation: true
              toEnv: toEnv
              description: description
              isOptional: true
              type: type
              isList: true
              isFlag: true
              argFormat: argFormat
              name: name
              options:
              - "{}"
              - "{}"
              connection: connection
              toInit: true
              value: "{}"
              validation:
                multipleOf: 0
                maxItems: 8
                excludes:
                - "{}"
                - "{}"
                keys:
                - keys
                - keys
                minLength: 5
                lt: 7
                maxDigits: 0
                containsKeys:
                - containsKeys
                - containsKeys
                gt: 1
                minItems: 6
                regex: regex
                contains:
                - "{}"
                - "{}"
                delay: true
                decimalPlaces: 7
                excludesKeys:
                - excludesKeys
                - excludesKeys
                minDigits: 9
                options:
                - "{}"
                - "{}"
                le: 9
                ge: 4
                maxLength: 4
            - delayValidation: true
              toEnv: toEnv
              description: description
              isOptional: true
              type: type
              isList: true
              isFlag: true
              argFormat: argFormat
              name: name
              options:
              - "{}"
              - "{}"
              connection: connection
              toInit: true
              value: "{}"
              validation:
                multipleOf: 0
                maxItems: 8
                excludes:
                - "{}"
                - "{}"
                keys:
                - keys
                - keys
                minLength: 5
                lt: 7
                maxDigits: 0
                containsKeys:
                - containsKeys
                - containsKeys
                gt: 1
                minItems: 6
                regex: regex
                contains:
                - "{}"
                - "{}"
                delay: true
                decimalPlaces: 7
                excludesKeys:
                - excludesKeys
                - excludesKeys
                minDigits: 9
                options:
                - "{}"
                - "{}"
                le: 9
                ge: 4
                maxLength: 4
            description: description
            run: "{}"
            version: 4.2587733
            tags:
            - tags
            - tags
            presets:
            - presets
            - presets
            build:
              cache:
                disable: true
                io:
                - io
                - io
                ttl: 7
                sections:
                - sections
                - sections
              presets:
              - presets
              - presets
              runPatch: "{}"
              hubRef: hubRef
              namespace: namespace
              connection: connection
              patchStrategy: null
              params:
                key:
                  ref: ref
                  toEnv: toEnv
                  contextOnly: true
                  connection: connection
                  toInit: true
                  value: "{}"
              queue: queue
            name: name
            namespace: namespace
            isApproved: true
            hooks:
            - presets:
              - presets
              - presets
              hubRef: hubRef
              namespace: namespace
              disableDefaults: true
              connection: connection
              trigger: null
              conditions: conditions
              params:
                key:
                  ref: ref
                  toEnv: toEnv
                  contextOnly: true
                  connection: connection
                  toInit: true
                  value: "{}"
              queue: queue
            - presets:
              - presets
              - presets
              hubRef: hubRef
              namespace: namespace
              disableDefaults: true
              connection: connection
              trigger: null
              conditions: conditions
              params:
                key:
                  ref: ref
                  toEnv: toEnv
                  contextOnly: true
                  connection: connection
                  toInit: true
                  value: "{}"
              queue: queue
            queue: queue
          - termination:
              maxRetries: 3
              ttl: 3
              timeout: 7
            outputs:
            - delayValidation: true
              toEnv: toEnv
              description: description
              isOptional: true
              type: type
              isList: true
              isFlag: true
              argFormat: argFormat
              name: name
              options:
              - "{}"
              - "{}"
              connection: connection
              toInit: true
              value: "{}"
              validation:
                multipleOf: 0
                maxItems: 8
                excludes:
                - "{}"
                - "{}"
                keys:
                - keys
                - keys
                minLength: 5
                lt: 7
                maxDigits: 0
                containsKeys:
                - containsKeys
                - containsKeys
                gt: 1
                minItems: 6
                regex: regex
                contains:
                - "{}"
                - "{}"
                delay: true
                decimalPlaces: 7
                excludesKeys:
                - excludesKeys
                - excludesKeys
                minDigits: 9
                options:
                - "{}"
                - "{}"
                le: 9
                ge: 4
                maxLength: 4
            - delayValidation: true
              toEnv: toEnv
              description: description
              isOptional: true
              type: type
              isList: true
              isFlag: true
              argFormat: argFormat
              name: name
              options:
              - "{}"
              - "{}"
              connection: connection
              toInit: true
              value: "{}"
              validation:
                multipleOf: 0
                maxItems: 8
                excludes:
                - "{}"
                - "{}"
                keys:
                - keys
                - keys
                minLength: 5
                lt: 7
                maxDigits: 0
                containsKeys:
                - containsKeys
                - containsKeys
                gt: 1
                minItems: 6
                regex: regex
                contains:
                - "{}"
                - "{}"
                delay: true
                decimalPlaces: 7
                excludesKeys:
                - excludesKeys
                - excludesKeys
                minDigits: 9
                options:
                - "{}"
                - "{}"
                le: 9
                ge: 4
                maxLength: 4
            template:
              description: description
              fields:
              - fields
              - fields
              enabled: true
            cache:
              disable: true
              io:
              - io
              - io
              ttl: 7
              sections:
              - sections
              - sections
            cost: 4.459605
            kind: kind
            plugins:
              mountArtifactsStore: true
              syncStatuses: true
              auth: true
              collectResources: true
              collectLogs: true
              externalHost: true
              docker: true
              collectArtifacts: true
              logLevel: logLevel
              autoResume: true
              sidecar:
                sleepInterval: 5
                monitorSpec: true
                image: image
                imagePullPolicy: imagePullPolicy
                syncInterval: 3
                resources: "{}"
                monitorLogs: true
                imageTag: imageTag
              shm: true
              notifications:
              - trigger: null
                connections:
                - connections
                - connections
              - trigger: null
                connections:
                - connections
                - connections
            inputs:
            - delayValidation: true
              toEnv: toEnv
              description: description
              isOptional: true
              type: type
              isList: true
              isFlag: true
              argFormat: argFormat
              name: name
              options:
              - "{}"
              - "{}"
              connection: connection
              toInit: true
              value: "{}"
              validation:
                multipleOf: 0
                maxItems: 8
                excludes:
                - "{}"
                - "{}"
                keys:
                - keys
                - keys
                minLength: 5
                lt: 7
                maxDigits: 0
                containsKeys:
                - containsKeys
                - containsKeys
                gt: 1
                minItems: 6
                regex: regex
                contains:
                - "{}"
                - "{}"
                delay: true
                decimalPlaces: 7
                excludesKeys:
                - excludesKeys
                - excludesKeys
                minDigits: 9
                options:
                - "{}"
                - "{}"
                le: 9
                ge: 4
                maxLength: 4
            - delayValidation: true
              toEnv: toEnv
              description: description
              isOptional: true
              type: type
              isList: true
              isFlag: true
              argFormat: argFormat
              name: name
              options:
              - "{}"
              - "{}"
              connection: connection
              toInit: true
              value: "{}"
              validation:
                multipleOf: 0
                maxItems: 8
                excludes:
                - "{}"
                - "{}"
                keys:
                - keys
                - keys
                minLength: 5
                lt: 7
                maxDigits: 0
                containsKeys:
                - containsKeys
                - containsKeys
                gt: 1
                minItems: 6
                regex: regex
                contains:
                - "{}"
                - "{}"
                delay: true
                decimalPlaces: 7
                excludesKeys:
                - excludesKeys
                - excludesKeys
                minDigits: 9
                options:
                - "{}"
                - "{}"
                le: 9
                ge: 4
                maxLength: 4
            description: description
            run: "{}"
            version: 4.2587733
            tags:
            - tags
            - tags
            presets:
            - presets
            - presets
            build:
              cache:
                disable: true
                io:
                - io
                - io
                ttl: 7
                sections:
                - sections
                - sections
              presets:
              - presets
              - presets
              runPatch: "{}"
              hubRef: hubRef
              namespace: namespace
              connection: connection
              patchStrategy: null
              params:
                key:
                  ref: ref
                  toEnv: toEnv
                  contextOnly: true
                  connection: connection
                  toInit: true
                  value: "{}"
              queue: queue
            name: name
            namespace: namespace
            isApproved: true
            hooks:
            - presets:
              - presets
              - presets
              hubRef: hubRef
              namespace: namespace
              disableDefaults: true
              connection: connection
              trigger: null
              conditions: conditions
              params:
                key:
                  ref: ref
                  toEnv: toEnv
                  contextOnly: true
                  connection: connection
                  toInit: true
                  value: "{}"
              queue: queue
            - presets:
              - presets
              - presets
              hubRef: hubRef
              namespace: namespace
              disableDefaults: true
              connection: connection
              trigger: null
              conditions: conditions
              params:
                key:
                  ref: ref
                  toEnv: toEnv
                  contextOnly: true
                  connection: connection
                  toInit: true
                  value: "{}"
              queue: queue
            queue: queue
          environment:
            nodeName: nodeName
            dnsPolicy: dnsPolicy
            serviceAccountName: serviceAccountName
            hostNetwork: true
            dnsConfig: "{}"
            imagePullSecrets:
            - imagePullSecrets
            - imagePullSecrets
            priorityClassName: priorityClassName
            annotations:
              key: annotations
            hostAliases:
            - null
            - null
            securityContext: "{}"
            priority: 3
            restartPolicy: restartPolicy
            labels:
              key: labels
            nodeSelector:
              key: nodeSelector
            tolerations:
            - null
            - null
            schedulerName: schedulerName
            affinity: "{}"
            hostPID: hostPID
          operations:
          - joins:
              key:
                ref: ref
                offset: 0
                query: query
                limit: 4
                sort: sort
                params:
                  key:
                    toEnv: toEnv
                    contextOnly: true
                    connection: connection
                    toInit: true
                    value: value
            template:
              description: description
              fields:
              - fields
              - fields
              enabled: true
            dagRef: dagRef
            plugins:
              mountArtifactsStore: true
              syncStatuses: true
              auth: true
              collectResources: true
              collectLogs: true
              externalHost: true
              docker: true
              collectArtifacts: true
              logLevel: logLevel
              autoResume: true
              sidecar:
                sleepInterval: 5
                monitorSpec: true
                image: image
                imagePullPolicy: imagePullPolicy
                syncInterval: 3
                resources: "{}"
                monitorLogs: true
                imageTag: imageTag
              shm: true
              notifications:
              - trigger: null
                connections:
                - connections
                - connections
              - trigger: null
                connections:
                - connections
                - connections
            hubRef: hubRef
            description: description
            matrix: "{}"
            isApproved: true
            hooks:
            - presets:
              - presets
              - presets
              hubRef: hubRef
              namespace: namespace
              disableDefaults: true
              connection: connection
              trigger: null
              conditions: conditions
              params:
                key:
                  ref: ref
                  toEnv: toEnv
                  contextOnly: true
                  connection: connection
                  toInit: true
                  value: "{}"
              queue: queue
            - presets:
              - presets
              - presets
              hubRef: hubRef
              namespace: namespace
              disableDefaults: true
              connection: connection
              trigger: null
              conditions: conditions
              params:
                key:
                  ref: ref
                  toEnv: toEnv
                  contextOnly: true
                  connection: connection
                  toInit: true
                  value: "{}"
              queue: queue
            events:
            - ref: ref
              kinds:
              - null
              - null
            - ref: ref
              kinds:
              - null
              - null
            termination:
              maxRetries: 3
              ttl: 3
              timeout: 7
            cache:
              disable: true
              io:
              - io
              - io
              ttl: 7
              sections:
              - sections
              - sections
            cost: 6.628464
            kind: kind
            isPreset: true
            trigger: null
            params:
              key:
                ref: ref
                toEnv: toEnv
                contextOnly: true
                connection: connection
                toInit: true
                value: "{}"
            version: 8.969579
            tags:
            - tags
            - tags
            dependencies:
            - dependencies
            - dependencies
            schedule: "{}"
            component:
              termination:
                maxRetries: 3
                ttl: 3
                timeout: 7
              outputs:
              - delayValidation: true
                toEnv: toEnv
                description: description
                isOptional: true
                type: type
                isList: true
                isFlag: true
                argFormat: argFormat
                name: name
                options:
                - "{}"
                - "{}"
                connection: connection
                toInit: true
                value: "{}"
                validation:
                  multipleOf: 0
                  maxItems: 8
                  excludes:
                  - "{}"
                  - "{}"
                  keys:
                  - keys
                  - keys
                  minLength: 5
                  lt: 7
                  maxDigits: 0
                  containsKeys:
                  - containsKeys
                  - containsKeys
                  gt: 1
                  minItems: 6
                  regex: regex
                  contains:
                  - "{}"
                  - "{}"
                  delay: true
                  decimalPlaces: 7
                  excludesKeys:
                  - excludesKeys
                  - excludesKeys
                  minDigits: 9
                  options:
                  - "{}"
                  - "{}"
                  le: 9
                  ge: 4
                  maxLength: 4
              - delayValidation: true
                toEnv: toEnv
                description: description
                isOptional: true
                type: type
                isList: true
                isFlag: true
                argFormat: argFormat
                name: name
                options:
                - "{}"
                - "{}"
                connection: connection
                toInit: true
                value: "{}"
                validation:
                  multipleOf: 0
                  maxItems: 8
                  excludes:
                  - "{}"
                  - "{}"
                  keys:
                  - keys
                  - keys
                  minLength: 5
                  lt: 7
                  maxDigits: 0
                  containsKeys:
                  - containsKeys
                  - containsKeys
                  gt: 1
                  minItems: 6
                  regex: regex
                  contains:
                  - "{}"
                  - "{}"
                  delay: true
                  decimalPlaces: 7
                  excludesKeys:
                  - excludesKeys
                  - excludesKeys
                  minDigits: 9
                  options:
                  - "{}"
                  - "{}"
                  le: 9
                  ge: 4
                  maxLength: 4
              template:
                description: description
                fields:
                - fields
                - fields
                enabled: true
              cache:
                disable: true
                io:
                - io
                - io
                ttl: 7
                sections:
                - sections
                - sections
              cost: 4.459605
              kind: kind
              plugins:
                mountArtifactsStore: true
                syncStatuses: true
                auth: true
                collectResources: true
                collectLogs: true
                externalHost: true
                docker: true
                collectArtifacts: true
                logLevel: logLevel
                autoResume: true
                sidecar:
                  sleepInterval: 5
                  monitorSpec: true
                  image: image
                  imagePullPolicy: imagePullPolicy
                  syncInterval: 3
                  resources: "{}"
                  monitorLogs: true
                  imageTag: imageTag
                shm: true
                notifications:
                - trigger: null
                  connections:
                  - connections
                  - connections
                - trigger: null
                  connections:
                  - connections
                  - connections
              inputs:
              - delayValidation: true
                toEnv: toEnv
                description: description
                isOptional: true
                type: type
                isList: true
                isFlag: true
                argFormat: argFormat
                name: name
                options:
                - "{}"
                - "{}"
                connection: connection
                toInit: true
                value: "{}"
                validation:
                  multipleOf: 0
                  maxItems: 8
                  excludes:
                  - "{}"
                  - "{}"
                  keys:
                  - keys
                  - keys
                  minLength: 5
                  lt: 7
                  maxDigits: 0
                  containsKeys:
                  - containsKeys
                  - containsKeys
                  gt: 1
                  minItems: 6
                  regex: regex
                  contains:
                  - "{}"
                  - "{}"
                  delay: true
                  decimalPlaces: 7
                  excludesKeys:
                  - excludesKeys
                  - excludesKeys
                  minDigits: 9
                  options:
                  - "{}"
                  - "{}"
                  le: 9
                  ge: 4
                  maxLength: 4
              - delayValidation: true
                toEnv: toEnv
                description: description
                isOptional: true
                type: type
                isList: true
                isFlag: true
                argFormat: argFormat
                name: name
                options:
                - "{}"
                - "{}"
                connection: connection
                toInit: true
                value: "{}"
                validation:
                  multipleOf: 0
                  maxItems: 8
                  excludes:
                  - "{}"
                  - "{}"
                  keys:
                  - keys
                  - keys
                  minLength: 5
                  lt: 7
                  maxDigits: 0
                  containsKeys:
                  - containsKeys
                  - containsKeys
                  gt: 1
                  minItems: 6
                  regex: regex
                  contains:
                  - "{}"
                  - "{}"
                  delay: true
                  decimalPlaces: 7
                  excludesKeys:
                  - excludesKeys
                  - excludesKeys
                  minDigits: 9
                  options:
                  - "{}"
                  - "{}"
                  le: 9
                  ge: 4
                  maxLength: 4
              description: description
              run: "{}"
              version: 4.2587733
              tags:
              - tags
              - tags
              presets:
              - presets
              - presets
              build:
                cache:
                  disable: true
                  io:
                  - io
                  - io
                  ttl: 7
                  sections:
                  - sections
                  - sections
                presets:
                - presets
                - presets
                runPatch: "{}"
                hubRef: hubRef
                namespace: namespace
                connection: connection
                patchStrategy: null
                params:
                  key:
                    ref: ref
                    toEnv: toEnv
                    contextOnly: true
                    connection: connection
                    toInit: true
                    value: "{}"
                queue: queue
              name: name
              namespace: namespace
              isApproved: true
              hooks:
              - presets:
                - presets
                - presets
                hubRef: hubRef
                namespace: namespace
                disableDefaults: true
                connection: connection
                trigger: null
                conditions: conditions
                params:
                  key:
                    ref: ref
                    toEnv: toEnv
                    contextOnly: true
                    connection: connection
                    toInit: true
                    value: "{}"
                queue: queue
              - presets:
                - presets
                - presets
                hubRef: hubRef
                namespace: namespace
                disableDefaults: true
                connection: connection
                trigger: null
                conditions: conditions
                params:
                  key:
                    ref: ref
                    toEnv: toEnv
                    contextOnly: true
                    connection: connection
                    toInit: true
                    value: "{}"
                queue: queue
              queue: queue
            presets:
            - presets
            - presets
            skipOnUpstreamSkip: true
            runPatch: "{}"
            build:
              cache:
                disable: true
                io:
                - io
                - io
                ttl: 7
                sections:
                - sections
                - sections
              presets:
              - presets
              - presets
              runPatch: "{}"
              hubRef: hubRef
              namespace: namespace
              connection: connection
              patchStrategy: null
              params:
                key:
                  ref: ref
                  toEnv: toEnv
                  contextOnly: true
                  connection: connection
                  toInit: true
                  value: "{}"
              queue: queue
            name: name
            namespace: namespace
            patchStrategy: null
            urlRef: urlRef
            conditions: conditions
            pathRef: pathRef
            queue: queue
          - joins:
              key:
                ref: ref
                offset: 0
                query: query
                limit: 4
                sort: sort
                params:
                  key:
                    toEnv: toEnv
                    contextOnly: true
                    connection: connection
                    toInit: true
                    value: value
            template:
              description: description
              fields:
              - fields
              - fields
              enabled: true
            dagRef: dagRef
            plugins:
              mountArtifactsStore: true
              syncStatuses: true
              auth: true
              collectResources: true
              collectLogs: true
              externalHost: true
              docker: true
              collectArtifacts: true
              logLevel: logLevel
              autoResume: true
              sidecar:
                sleepInterval: 5
                monitorSpec: true
                image: image
                imagePullPolicy: imagePullPolicy
                syncInterval: 3
                resources: "{}"
                monitorLogs: true
                imageTag: imageTag
              shm: true
              notifications:
              - trigger: null
                connections:
                - connections
                - connections
              - trigger: null
                connections:
                - connections
                - connections
            hubRef: hubRef
            description: description
            matrix: "{}"
            isApproved: true
            hooks:
            - presets:
              - presets
              - presets
              hubRef: hubRef
              namespace: namespace
              disableDefaults: true
              connection: connection
              trigger: null
              conditions: conditions
              params:
                key:
                  ref: ref
                  toEnv: toEnv
                  contextOnly: true
                  connection: connection
                  toInit: true
                  value: "{}"
              queue: queue
            - presets:
              - presets
              - presets
              hubRef: hubRef
              namespace: namespace
              disableDefaults: true
              connection: connection
              trigger: null
              conditions: conditions
              params:
                key:
                  ref: ref
                  toEnv: toEnv
                  contextOnly: true
                  connection: connection
                  toInit: true
                  value: "{}"
              queue: queue
            events:
            - ref: ref
              kinds:
              - null
              - null
            - ref: ref
              kinds:
              - null
              - null
            termination:
              maxRetries: 3
              ttl: 3
              timeout: 7
            cache:
              disable: true
              io:
              - io
              - io
              ttl: 7
              sections:
              - sections
              - sections
            cost: 6.628464
            kind: kind
            isPreset: true
            trigger: null
            params:
              key:
                ref: ref
                toEnv: toEnv
                contextOnly: true
                connection: connection
                toInit: true
                value: "{}"
            version: 8.969579
            tags:
            - tags
            - tags
            dependencies:
            - dependencies
            - dependencies
            schedule: "{}"
            component:
              termination:
                maxRetries: 3
                ttl: 3
                timeout: 7
              outputs:
              - delayValidation: true
                toEnv: toEnv
                description: description
                isOptional: true
                type: type
                isList: true
                isFlag: true
                argFormat: argFormat
                name: name
                options:
                - "{}"
                - "{}"
                connection: connection
                toInit: true
                value: "{}"
                validation:
                  multipleOf: 0
                  maxItems: 8
                  excludes:
                  - "{}"
                  - "{}"
                  keys:
                  - keys
                  - keys
                  minLength: 5
                  lt: 7
                  maxDigits: 0
                  containsKeys:
                  - containsKeys
                  - containsKeys
                  gt: 1
                  minItems: 6
                  regex: regex
                  contains:
                  - "{}"
                  - "{}"
                  delay: true
                  decimalPlaces: 7
                  excludesKeys:
                  - excludesKeys
                  - excludesKeys
                  minDigits: 9
                  options:
                  - "{}"
                  - "{}"
                  le: 9
                  ge: 4
                  maxLength: 4
              - delayValidation: true
                toEnv: toEnv
                description: description
                isOptional: true
                type: type
                isList: true
                isFlag: true
                argFormat: argFormat
                name: name
                options:
                - "{}"
                - "{}"
                connection: connection
                toInit: true
                value: "{}"
                validation:
                  multipleOf: 0
                  maxItems: 8
                  excludes:
                  - "{}"
                  - "{}"
                  keys:
                  - keys
                  - keys
                  minLength: 5
                  lt: 7
                  maxDigits: 0
                  containsKeys:
                  - containsKeys
                  - containsKeys
                  gt: 1
                  minItems: 6
                  regex: regex
                  contains:
                  - "{}"
                  - "{}"
                  delay: true
                  decimalPlaces: 7
                  excludesKeys:
                  - excludesKeys
                  - excludesKeys
                  minDigits: 9
                  options:
                  - "{}"
                  - "{}"
                  le: 9
                  ge: 4
                  maxLength: 4
              template:
                description: description
                fields:
                - fields
                - fields
                enabled: true
              cache:
                disable: true
                io:
                - io
                - io
                ttl: 7
                sections:
                - sections
                - sections
              cost: 4.459605
              kind: kind
              plugins:
                mountArtifactsStore: true
                syncStatuses: true
                auth: true
                collectResources: true
                collectLogs: true
                externalHost: true
                docker: true
                collectArtifacts: true
                logLevel: logLevel
                autoResume: true
                sidecar:
                  sleepInterval: 5
                  monitorSpec: true
                  image: image
                  imagePullPolicy: imagePullPolicy
                  syncInterval: 3
                  resources: "{}"
                  monitorLogs: true
                  imageTag: imageTag
                shm: true
                notifications:
                - trigger: null
                  connections:
                  - connections
                  - connections
                - trigger: null
                  connections:
                  - connections
                  - connections
              inputs:
              - delayValidation: true
                toEnv: toEnv
                description: description
                isOptional: true
                type: type
                isList: true
                isFlag: true
                argFormat: argFormat
                name: name
                options:
                - "{}"
                - "{}"
                connection: connection
                toInit: true
                value: "{}"
                validation:
                  multipleOf: 0
                  maxItems: 8
                  excludes:
                  - "{}"
                  - "{}"
                  keys:
                  - keys
                  - keys
                  minLength: 5
                  lt: 7
                  maxDigits: 0
                  containsKeys:
                  - containsKeys
                  - containsKeys
                  gt: 1
                  minItems: 6
                  regex: regex
                  contains:
                  - "{}"
                  - "{}"
                  delay: true
                  decimalPlaces: 7
                  excludesKeys:
                  - excludesKeys
                  - excludesKeys
                  minDigits: 9
                  options:
                  - "{}"
                  - "{}"
                  le: 9
                  ge: 4
                  maxLength: 4
              - delayValidation: true
                toEnv: toEnv
                description: description
                isOptional: true
                type: type
                isList: true
                isFlag: true
                argFormat: argFormat
                name: name
                options:
                - "{}"
                - "{}"
                connection: connection
                toInit: true
                value: "{}"
                validation:
                  multipleOf: 0
                  maxItems: 8
                  excludes:
                  - "{}"
                  - "{}"
                  keys:
                  - keys
                  - keys
                  minLength: 5
                  lt: 7
                  maxDigits: 0
                  containsKeys:
                  - containsKeys
                  - containsKeys
                  gt: 1
                  minItems: 6
                  regex: regex
                  contains:
                  - "{}"
                  - "{}"
                  delay: true
                  decimalPlaces: 7
                  excludesKeys:
                  - excludesKeys
                  - excludesKeys
                  minDigits: 9
                  options:
                  - "{}"
                  - "{}"
                  le: 9
                  ge: 4
                  maxLength: 4
              description: description
              run: "{}"
              version: 4.2587733
              tags:
              - tags
              - tags
              presets:
              - presets
              - presets
              build:
                cache:
                  disable: true
                  io:
                  - io
                  - io
                  ttl: 7
                  sections:
                  - sections
                  - sections
                presets:
                - presets
                - presets
                runPatch: "{}"
                hubRef: hubRef
                namespace: namespace
                connection: connection
                patchStrategy: null
                params:
                  key:
                    ref: ref
                    toEnv: toEnv
                    contextOnly: true
                    connection: connection
                    toInit: true
                    value: "{}"
                queue: queue
              name: name
              namespace: namespace
              isApproved: true
              hooks:
              - presets:
                - presets
                - presets
                hubRef: hubRef
                namespace: namespace
                disableDefaults: true
                connection: connection
                trigger: null
                conditions: conditions
                params:
                  key:
                    ref: ref
                    toEnv: toEnv
                    contextOnly: true
                    connection: connection
                    toInit: true
                    value: "{}"
                queue: queue
              - presets:
                - presets
                - presets
                hubRef: hubRef
                namespace: namespace
                disableDefaults: true
                connection: connection
                trigger: null
                conditions: conditions
                params:
                  key:
                    ref: ref
                    toEnv: toEnv
                    contextOnly: true
                    connection: connection
                    toInit: true
                    value: "{}"
                queue: queue
              queue: queue
            presets:
            - presets
            - presets
            skipOnUpstreamSkip: true
            runPatch: "{}"
            build:
              cache:
                disable: true
                io:
                - io
                - io
                ttl: 7
                sections:
                - sections
                - sections
              presets:
              - presets
              - presets
              runPatch: "{}"
              hubRef: hubRef
              namespace: namespace
              connection: connection
              patchStrategy: null
              params:
                key:
                  ref: ref
                  toEnv: toEnv
                  contextOnly: true
                  connection: connection
                  toInit: true
                  value: "{}"
              queue: queue
            name: name
            namespace: namespace
            patchStrategy: null
            urlRef: urlRef
            conditions: conditions
            pathRef: pathRef
            queue: queue
          kind: dag
          volumes:
          - null
          - null
          earlyStopping:
          - "{}"
          - "{}"
          connections:
          - connections
          - connections
          concurrency: 3
        pytorchJob:
          cleanPodPolicy: null
          nProcPerNode: nProcPerNode
          elasticPolicy:
            maxReplicas: 6
            rdvzId: rdvzId
            rdvzConf:
            - "{}"
            - "{}"
            nProcPerNode: 8
            Metrics:
            - "{}"
            - "{}"
            minReplicas: 8
            maxRestarts: 9
            rdvzHost: rdvzHost
            rdvzBackend: rdvzBackend
            standalone: true
            rdvzPort: 4
          kind: pytorchjob
          worker:
            container: "{}"
            init:
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            sidecars:
            - null
            - null
            environment:
              nodeName: nodeName
              dnsPolicy: dnsPolicy
              serviceAccountName: serviceAccountName
              hostNetwork: true
              dnsConfig: "{}"
              imagePullSecrets:
              - imagePullSecrets
              - imagePullSecrets
              priorityClassName: priorityClassName
              annotations:
                key: annotations
              hostAliases:
              - null
              - null
              securityContext: "{}"
              priority: 3
              restartPolicy: restartPolicy
              labels:
                key: labels
              nodeSelector:
                key: nodeSelector
              tolerations:
              - null
              - null
              schedulerName: schedulerName
              affinity: "{}"
              hostPID: hostPID
            replicas: 1
            volumes:
            - null
            - null
            connections:
            - connections
            - connections
          schedulingPolicy:
            minAvailable: 0
            priorityClass: priorityClass
            scheduleTimeoutSeconds: 2
            minResources: "{}"
            queue: queue
          master:
            container: "{}"
            init:
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            sidecars:
            - null
            - null
            environment:
              nodeName: nodeName
              dnsPolicy: dnsPolicy
              serviceAccountName: serviceAccountName
              hostNetwork: true
              dnsConfig: "{}"
              imagePullSecrets:
              - imagePullSecrets
              - imagePullSecrets
              priorityClassName: priorityClassName
              annotations:
                key: annotations
              hostAliases:
              - null
              - null
              securityContext: "{}"
              priority: 3
              restartPolicy: restartPolicy
              labels:
                key: labels
              nodeSelector:
                key: nodeSelector
              tolerations:
              - null
              - null
              schedulerName: schedulerName
              affinity: "{}"
              hostPID: hostPID
            replicas: 1
            volumes:
            - null
            - null
            connections:
            - connections
            - connections
        job:
          container: "{}"
          init:
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          sidecars:
          - null
          - null
          environment:
            nodeName: nodeName
            dnsPolicy: dnsPolicy
            serviceAccountName: serviceAccountName
            hostNetwork: true
            dnsConfig: "{}"
            imagePullSecrets:
            - imagePullSecrets
            - imagePullSecrets
            priorityClassName: priorityClassName
            annotations:
              key: annotations
            hostAliases:
            - null
            - null
            securityContext: "{}"
            priority: 3
            restartPolicy: restartPolicy
            labels:
              key: labels
            nodeSelector:
              key: nodeSelector
            tolerations:
            - null
            - null
            schedulerName: schedulerName
            affinity: "{}"
            hostPID: hostPID
          kind: job
          volumes:
          - null
          - null
          connections:
          - connections
          - connections
        mpiJob:
          cleanPodPolicy: null
          slotsPerWorker: 1
          kind: mpijob
          worker:
            container: "{}"
            init:
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            sidecars:
            - null
            - null
            environment:
              nodeName: nodeName
              dnsPolicy: dnsPolicy
              serviceAccountName: serviceAccountName
              hostNetwork: true
              dnsConfig: "{}"
              imagePullSecrets:
              - imagePullSecrets
              - imagePullSecrets
              priorityClassName: priorityClassName
              annotations:
                key: annotations
              hostAliases:
              - null
              - null
              securityContext: "{}"
              priority: 3
              restartPolicy: restartPolicy
              labels:
                key: labels
              nodeSelector:
                key: nodeSelector
              tolerations:
              - null
              - null
              schedulerName: schedulerName
              affinity: "{}"
              hostPID: hostPID
            replicas: 1
            volumes:
            - null
            - null
            connections:
            - connections
            - connections
          schedulingPolicy:
            minAvailable: 0
            priorityClass: priorityClass
            scheduleTimeoutSeconds: 2
            minResources: "{}"
            queue: queue
          launcher:
            container: "{}"
            init:
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            sidecars:
            - null
            - null
            environment:
              nodeName: nodeName
              dnsPolicy: dnsPolicy
              serviceAccountName: serviceAccountName
              hostNetwork: true
              dnsConfig: "{}"
              imagePullSecrets:
              - imagePullSecrets
              - imagePullSecrets
              priorityClassName: priorityClassName
              annotations:
                key: annotations
              hostAliases:
              - null
              - null
              securityContext: "{}"
              priority: 3
              restartPolicy: restartPolicy
              labels:
                key: labels
              nodeSelector:
                key: nodeSelector
              tolerations:
              - null
              - null
              schedulerName: schedulerName
              affinity: "{}"
              hostPID: hostPID
            replicas: 1
            volumes:
            - null
            - null
            connections:
            - connections
            - connections
      properties:
        job:
          $ref: '#/components/schemas/v1Job'
        service:
          $ref: '#/components/schemas/v1Service'
        dag:
          $ref: '#/components/schemas/v1Dag'
        tfJob:
          $ref: '#/components/schemas/v1TFJob'
        pytorchJob:
          $ref: '#/components/schemas/v1PytorchJob'
        mpiJob:
          $ref: '#/components/schemas/v1MPIJob'
        mxJob:
          $ref: '#/components/schemas/v1MXJob'
        xgboostJob:
          $ref: '#/components/schemas/v1XGBoostJob'
        paddleJob:
          $ref: '#/components/schemas/v1PaddleJob'
        daskJob:
          $ref: '#/components/schemas/v1DaskJob'
        rayJob:
          $ref: '#/components/schemas/v1RayJob'
      type: object
    v1RunSettings:
      example:
        models:
        - owner: owner
          name: name
          project: project
          state: state
        - owner: owner
          name: name
          project: project
          state: state
        agent:
          name: name
          uuid: uuid
          version: version
          url: url
        component: "{}"
        tensorboard: "{}"
        build: "{}"
        namespace: namespace
        artifacts_store:
          name: name
          uuid: uuid
          version: version
          url: url
        queue:
          name: name
          uuid: uuid
          version: version
          url: url
        artifacts:
        - owner: owner
          name: name
          project: project
          state: state
        - owner: owner
          name: name
          project: project
          state: state
      properties:
        namespace:
          title: Namespace
          type: string
        agent:
          $ref: '#/components/schemas/v1SettingsCatalog'
        queue:
          $ref: '#/components/schemas/v1SettingsCatalog'
        artifacts_store:
          $ref: '#/components/schemas/v1SettingsCatalog'
        tensorboard:
          properties: {}
          title: "Latest Tensorboard reference, if it exists"
          type: object
        build:
          properties: {}
          title: "Build reference, if it exists"
          type: object
        component:
          properties: {}
          title: Component reference
          type: object
        models:
          items:
            $ref: '#/components/schemas/v1RunReferenceCatalog'
          title: Model version references
          type: array
        artifacts:
          items:
            $ref: '#/components/schemas/v1RunReferenceCatalog'
          title: Artifact version references
          type: array
      title: Run Settings specification
      type: object
    v1S3Type:
      example:
        bucket: bucket
        key: key
      properties:
        bucket:
          title: Optional container
          type: string
        key:
          title: Optional storage_account
          type: string
      title: Wasb type specification
      type: object
    v1Schedule:
      example:
        cron:
          cron: cron
          dependsOnPast: true
          maxRuns: 3
          kind: cron
          endAt: 2000-01-23T04:56:07.000+00:00
          startAt: 2000-01-23T04:56:07.000+00:00
        datetime:
          kind: datetime
          startAt: 2000-01-23T04:56:07.000+00:00
        interval:
          dependsOnPast: true
          maxRuns: 9
          kind: interval
          endAt: 2000-01-23T04:56:07.000+00:00
          startAt: 2000-01-23T04:56:07.000+00:00
          frequency: 5
      properties:
        cron:
          $ref: '#/components/schemas/v1CronSchedule'
        datetime:
          $ref: '#/components/schemas/v1DateTimeSchedule'
        interval:
          $ref: '#/components/schemas/v1IntervalSchedule'
      title: All Schemas message
      type: object
    v1ScheduleKind:
      default: cron
      enum:
      - cron
      - interval
      - datetime
      type: string
    v1SchedulingPolicy:
      example:
        minAvailable: 0
        priorityClass: priorityClass
        scheduleTimeoutSeconds: 2
        minResources: "{}"
        queue: queue
      properties:
        minAvailable:
          format: int32
          type: integer
        queue:
          type: string
        minResources:
          properties: {}
          type: object
        priorityClass:
          type: string
        scheduleTimeoutSeconds:
          format: int32
          type: integer
      type: object
    v1Schemas:
      example:
        s3:
          bucket: bucket
          key: key
        connectionSchema:
          hostConnection:
            insecure: true
            url: url
          claimConnection:
            mountPath: mountPath
            kind: "{}"
            readOnly: true
            volumeClaim: volumeClaim
          hostPathConnection:
            mountPath: mountPath
            kind: "{}"
            readOnly: true
            hostPath: hostPath
          gitConnection:
            flags:
            - flags
            - flags
            url: url
            revision: true
          bucketConnection:
            bucket: bucket
        auth:
          password: password
          user: user
        resource:
          mountPath: mountPath
          defaultMode: 7
          name: name
          items:
          - items
          - items
        run:
          daskJob:
            scheduler:
              container: "{}"
              init:
              - modelRef: modelRef
                container: "{}"
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: revision
                file:
                  filename: filename
                  kind: kind
                  chmod: chmod
                  content: content
                tensorboard:
                  port: 6
                  plugins: plugins
                  use_names: true
                  uuids:
                  - uuids
                  - uuids
                  path_prefix: path_prefix
                artifactRef: artifactRef
                paths:
                - "{}"
                - "{}"
                dockerfile:
                  image: image
                  gid: 0
                  workdirPath: workdirPath
                  run:
                  - run
                  - run
                  env:
                    key: env
                  path:
                  - path
                  - path
                  uid: 7
                  filename: filename
                  workdir: workdir
                  shell: shell
                  post_run_copy:
                  - "{}"
                  - "{}"
                  langEnv: langEnv
                  copy:
                  - "{}"
                  - "{}"
                  username: 7
                connection: connection
                lineageRef: lineageRef
                artifacts:
                  files:
                  - "{}"
                  - "{}"
                  dirs:
                  - "{}"
                  - "{}"
                  workers: 3
              - modelRef: modelRef
                container: "{}"
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: revision
                file:
                  filename: filename
                  kind: kind
                  chmod: chmod
                  content: content
                tensorboard:
                  port: 6
                  plugins: plugins
                  use_names: true
                  uuids:
                  - uuids
                  - uuids
                  path_prefix: path_prefix
                artifactRef: artifactRef
                paths:
                - "{}"
                - "{}"
                dockerfile:
                  image: image
                  gid: 0
                  workdirPath: workdirPath
                  run:
                  - run
                  - run
                  env:
                    key: env
                  path:
                  - path
                  - path
                  uid: 7
                  filename: filename
                  workdir: workdir
                  shell: shell
                  post_run_copy:
                  - "{}"
                  - "{}"
                  langEnv: langEnv
                  copy:
                  - "{}"
                  - "{}"
                  username: 7
                connection: connection
                lineageRef: lineageRef
                artifacts:
                  files:
                  - "{}"
                  - "{}"
                  dirs:
                  - "{}"
                  - "{}"
                  workers: 3
              sidecars:
              - null
              - null
              environment:
                nodeName: nodeName
                dnsPolicy: dnsPolicy
                serviceAccountName: serviceAccountName
                hostNetwork: true
                dnsConfig: "{}"
                imagePullSecrets:
                - imagePullSecrets
                - imagePullSecrets
                priorityClassName: priorityClassName
                annotations:
                  key: annotations
                hostAliases:
                - null
                - null
                securityContext: "{}"
                priority: 3
                restartPolicy: restartPolicy
                labels:
                  key: labels
                nodeSelector:
                  key: nodeSelector
                tolerations:
                - null
                - null
                schedulerName: schedulerName
                affinity: "{}"
                hostPID: hostPID
              replicas: 0
              volumes:
              - null
              - null
              connections:
              - connections
              - connections
            kind: daskjob
            job:
              container: "{}"
              init:
              - modelRef: modelRef
                container: "{}"
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: revision
                file:
                  filename: filename
                  kind: kind
                  chmod: chmod
                  content: content
                tensorboard:
                  port: 6
                  plugins: plugins
                  use_names: true
                  uuids:
                  - uuids
                  - uuids
                  path_prefix: path_prefix
                artifactRef: artifactRef
                paths:
                - "{}"
                - "{}"
                dockerfile:
                  image: image
                  gid: 0
                  workdirPath: workdirPath
                  run:
                  - run
                  - run
                  env:
                    key: env
                  path:
                  - path
                  - path
                  uid: 7
                  filename: filename
                  workdir: workdir
                  shell: shell
                  post_run_copy:
                  - "{}"
                  - "{}"
                  langEnv: langEnv
                  copy:
                  - "{}"
                  - "{}"
                  username: 7
                connection: connection
                lineageRef: lineageRef
                artifacts:
                  files:
                  - "{}"
                  - "{}"
                  dirs:
                  - "{}"
                  - "{}"
                  workers: 3
              - modelRef: modelRef
                container: "{}"
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: revision
                file:
                  filename: filename
                  kind: kind
                  chmod: chmod
                  content: content
                tensorboard:
                  port: 6
                  plugins: plugins
                  use_names: true
                  uuids:
                  - uuids
                  - uuids
                  path_prefix: path_prefix
                artifactRef: artifactRef
                paths:
                - "{}"
                - "{}"
                dockerfile:
                  image: image
                  gid: 0
                  workdirPath: workdirPath
                  run:
                  - run
                  - run
                  env:
                    key: env
                  path:
                  - path
                  - path
                  uid: 7
                  filename: filename
                  workdir: workdir
                  shell: shell
                  post_run_copy:
                  - "{}"
                  - "{}"
                  langEnv: langEnv
                  copy:
                  - "{}"
                  - "{}"
                  username: 7
                connection: connection
                lineageRef: lineageRef
                artifacts:
                  files:
                  - "{}"
                  - "{}"
                  dirs:
                  - "{}"
                  - "{}"
                  workers: 3
              sidecars:
              - null
              - null
              environment:
                nodeName: nodeName
                dnsPolicy: dnsPolicy
                serviceAccountName: serviceAccountName
                hostNetwork: true
                dnsConfig: "{}"
                imagePullSecrets:
                - imagePullSecrets
                - imagePullSecrets
                priorityClassName: priorityClassName
                annotations:
                  key: annotations
                hostAliases:
                - null
                - null
                securityContext: "{}"
                priority: 3
                restartPolicy: restartPolicy
                labels:
                  key: labels
                nodeSelector:
                  key: nodeSelector
                tolerations:
                - null
                - null
                schedulerName: schedulerName
                affinity: "{}"
                hostPID: hostPID
              replicas: 0
              volumes:
              - null
              - null
              connections:
              - connections
              - connections
            worker:
              container: "{}"
              init:
              - modelRef: modelRef
                container: "{}"
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: revision
                file:
                  filename: filename
                  kind: kind
                  chmod: chmod
                  content: content
                tensorboard:
                  port: 6
                  plugins: plugins
                  use_names: true
                  uuids:
                  - uuids
                  - uuids
                  path_prefix: path_prefix
                artifactRef: artifactRef
                paths:
                - "{}"
                - "{}"
                dockerfile:
                  image: image
                  gid: 0
                  workdirPath: workdirPath
                  run:
                  - run
                  - run
                  env:
                    key: env
                  path:
                  - path
                  - path
                  uid: 7
                  filename: filename
                  workdir: workdir
                  shell: shell
                  post_run_copy:
                  - "{}"
                  - "{}"
                  langEnv: langEnv
                  copy:
                  - "{}"
                  - "{}"
                  username: 7
                connection: connection
                lineageRef: lineageRef
                artifacts:
                  files:
                  - "{}"
                  - "{}"
                  dirs:
                  - "{}"
                  - "{}"
                  workers: 3
              - modelRef: modelRef
                container: "{}"
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: revision
                file:
                  filename: filename
                  kind: kind
                  chmod: chmod
                  content: content
                tensorboard:
                  port: 6
                  plugins: plugins
                  use_names: true
                  uuids:
                  - uuids
                  - uuids
                  path_prefix: path_prefix
                artifactRef: artifactRef
                paths:
                - "{}"
                - "{}"
                dockerfile:
                  image: image
                  gid: 0
                  workdirPath: workdirPath
                  run:
                  - run
                  - run
                  env:
                    key: env
                  path:
                  - path
                  - path
                  uid: 7
                  filename: filename
                  workdir: workdir
                  shell: shell
                  post_run_copy:
                  - "{}"
                  - "{}"
                  langEnv: langEnv
                  copy:
                  - "{}"
                  - "{}"
                  username: 7
                connection: connection
                lineageRef: lineageRef
                artifacts:
                  files:
                  - "{}"
                  - "{}"
                  dirs:
                  - "{}"
                  - "{}"
                  workers: 3
              sidecars:
              - null
              - null
              environment:
                nodeName: nodeName
                dnsPolicy: dnsPolicy
                serviceAccountName: serviceAccountName
                hostNetwork: true
                dnsConfig: "{}"
                imagePullSecrets:
                - imagePullSecrets
                - imagePullSecrets
                priorityClassName: priorityClassName
                annotations:
                  key: annotations
                hostAliases:
                - null
                - null
                securityContext: "{}"
                priority: 3
                restartPolicy: restartPolicy
                labels:
                  key: labels
                nodeSelector:
                  key: nodeSelector
                tolerations:
                - null
                - null
                schedulerName: schedulerName
                affinity: "{}"
                hostPID: hostPID
              replicas: 0
              volumes:
              - null
              - null
              connections:
              - connections
              - connections
          paddleJob:
            cleanPodPolicy: null
            elasticPolicy:
              maxReplicas: 9
              minReplicas: 3
              maxRestarts: 8
              metrics:
              - "{}"
              - "{}"
            kind: paddlejob
            worker:
              container: "{}"
              init:
              - modelRef: modelRef
                container: "{}"
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: revision
                file:
                  filename: filename
                  kind: kind
                  chmod: chmod
                  content: content
                tensorboard:
                  port: 6
                  plugins: plugins
                  use_names: true
                  uuids:
                  - uuids
                  - uuids
                  path_prefix: path_prefix
                artifactRef: artifactRef
                paths:
                - "{}"
                - "{}"
                dockerfile:
                  image: image
                  gid: 0
                  workdirPath: workdirPath
                  run:
                  - run
                  - run
                  env:
                    key: env
                  path:
                  - path
                  - path
                  uid: 7
                  filename: filename
                  workdir: workdir
                  shell: shell
                  post_run_copy:
                  - "{}"
                  - "{}"
                  langEnv: langEnv
                  copy:
                  - "{}"
                  - "{}"
                  username: 7
                connection: connection
                lineageRef: lineageRef
                artifacts:
                  files:
                  - "{}"
                  - "{}"
                  dirs:
                  - "{}"
                  - "{}"
                  workers: 3
              - modelRef: modelRef
                container: "{}"
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: revision
                file:
                  filename: filename
                  kind: kind
                  chmod: chmod
                  content: content
                tensorboard:
                  port: 6
                  plugins: plugins
                  use_names: true
                  uuids:
                  - uuids
                  - uuids
                  path_prefix: path_prefix
                artifactRef: artifactRef
                paths:
                - "{}"
                - "{}"
                dockerfile:
                  image: image
                  gid: 0
                  workdirPath: workdirPath
                  run:
                  - run
                  - run
                  env:
                    key: env
                  path:
                  - path
                  - path
                  uid: 7
                  filename: filename
                  workdir: workdir
                  shell: shell
                  post_run_copy:
                  - "{}"
                  - "{}"
                  langEnv: langEnv
                  copy:
                  - "{}"
                  - "{}"
                  username: 7
                connection: connection
                lineageRef: lineageRef
                artifacts:
                  files:
                  - "{}"
                  - "{}"
                  dirs:
                  - "{}"
                  - "{}"
                  workers: 3
              sidecars:
              - null
              - null
              environment:
                nodeName: nodeName
                dnsPolicy: dnsPolicy
                serviceAccountName: serviceAccountName
                hostNetwork: true
                dnsConfig: "{}"
                imagePullSecrets:
                - imagePullSecrets
                - imagePullSecrets
                priorityClassName: priorityClassName
                annotations:
                  key: annotations
                hostAliases:
                - null
                - null
                securityContext: "{}"
                priority: 3
                restartPolicy: restartPolicy
                labels:
                  key: labels
                nodeSelector:
                  key: nodeSelector
                tolerations:
                - null
                - null
                schedulerName: schedulerName
                affinity: "{}"
                hostPID: hostPID
              replicas: 1
              volumes:
              - null
              - null
              connections:
              - connections
              - connections
            schedulingPolicy:
              minAvailable: 0
              priorityClass: priorityClass
              scheduleTimeoutSeconds: 2
              minResources: "{}"
              queue: queue
            master:
              container: "{}"
              init:
              - modelRef: modelRef
                container: "{}"
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: revision
                file:
                  filename: filename
                  kind: kind
                  chmod: chmod
                  content: content
                tensorboard:
                  port: 6
                  plugins: plugins
                  use_names: true
                  uuids:
                  - uuids
                  - uuids
                  path_prefix: path_prefix
                artifactRef: artifactRef
                paths:
                - "{}"
                - "{}"
                dockerfile:
                  image: image
                  gid: 0
                  workdirPath: workdirPath
                  run:
                  - run
                  - run
                  env:
                    key: env
                  path:
                  - path
                  - path
                  uid: 7
                  filename: filename
                  workdir: workdir
                  shell: shell
                  post_run_copy:
                  - "{}"
                  - "{}"
                  langEnv: langEnv
                  copy:
                  - "{}"
                  - "{}"
                  username: 7
                connection: connection
                lineageRef: lineageRef
                artifacts:
                  files:
                  - "{}"
                  - "{}"
                  dirs:
                  - "{}"
                  - "{}"
                  workers: 3
              - modelRef: modelRef
                container: "{}"
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: revision
                file:
                  filename: filename
                  kind: kind
                  chmod: chmod
                  content: content
                tensorboard:
                  port: 6
                  plugins: plugins
                  use_names: true
                  uuids:
                  - uuids
                  - uuids
                  path_prefix: path_prefix
                artifactRef: artifactRef
                paths:
                - "{}"
                - "{}"
                dockerfile:
                  image: image
                  gid: 0
                  workdirPath: workdirPath
                  run:
                  - run
                  - run
                  env:
                    key: env
                  path:
                  - path
                  - path
                  uid: 7
                  filename: filename
                  workdir: workdir
                  shell: shell
                  post_run_copy:
                  - "{}"
                  - "{}"
                  langEnv: langEnv
                  copy:
                  - "{}"
                  - "{}"
                  username: 7
                connection: connection
                lineageRef: lineageRef
                artifacts:
                  files:
                  - "{}"
                  - "{}"
                  dirs:
                  - "{}"
                  - "{}"
                  workers: 3
              sidecars:
              - null
              - null
              environment:
                nodeName: nodeName
                dnsPolicy: dnsPolicy
                serviceAccountName: serviceAccountName
                hostNetwork: true
                dnsConfig: "{}"
                imagePullSecrets:
                - imagePullSecrets
                - imagePullSecrets
                priorityClassName: priorityClassName
                annotations:
                  key: annotations
                hostAliases:
                - null
                - null
                securityContext: "{}"
                priority: 3
                restartPolicy: restartPolicy
                labels:
                  key: labels
                nodeSelector:
                  key: nodeSelector
                tolerations:
                - null
                - null
                schedulerName: schedulerName
                affinity: "{}"
                hostPID: hostPID
              replicas: 1
              volumes:
              - null
              - null
              connections:
              - connections
              - connections
          rayJob:
            rayVersion: rayVersion
            head:
              maxReplicas: 8
              container: "{}"
              init:
              - modelRef: modelRef
                container: "{}"
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: revision
                file:
                  filename: filename
                  kind: kind
                  chmod: chmod
                  content: content
                tensorboard:
                  port: 6
                  plugins: plugins
                  use_names: true
                  uuids:
                  - uuids
                  - uuids
                  path_prefix: path_prefix
                artifactRef: artifactRef
                paths:
                - "{}"
                - "{}"
                dockerfile:
                  image: image
                  gid: 0
                  workdirPath: workdirPath
                  run:
                  - run
                  - run
                  env:
                    key: env
                  path:
                  - path
                  - path
                  uid: 7
                  filename: filename
                  workdir: workdir
                  shell: shell
                  post_run_copy:
                  - "{}"
                  - "{}"
                  langEnv: langEnv
                  copy:
                  - "{}"
                  - "{}"
                  username: 7
                connection: connection
                lineageRef: lineageRef
                artifacts:
                  files:
                  - "{}"
                  - "{}"
                  dirs:
                  - "{}"
                  - "{}"
                  workers: 3
              - modelRef: modelRef
                container: "{}"
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: revision
                file:
                  filename: filename
                  kind: kind
                  chmod: chmod
                  content: content
                tensorboard:
                  port: 6
                  plugins: plugins
                  use_names: true
                  uuids:
                  - uuids
                  - uuids
                  path_prefix: path_prefix
                artifactRef: artifactRef
                paths:
                - "{}"
                - "{}"
                dockerfile:
                  image: image
                  gid: 0
                  workdirPath: workdirPath
                  run:
                  - run
                  - run
                  env:
                    key: env
                  path:
                  - path
                  - path
                  uid: 7
                  filename: filename
                  workdir: workdir
                  shell: shell
                  post_run_copy:
                  - "{}"
                  - "{}"
                  langEnv: langEnv
                  copy:
                  - "{}"
                  - "{}"
                  username: 7
                connection: connection
                lineageRef: lineageRef
                artifacts:
                  files:
                  - "{}"
                  - "{}"
                  dirs:
                  - "{}"
                  - "{}"
                  workers: 3
              sidecars:
              - null
              - null
              groupName: groupName
              environment:
                nodeName: nodeName
                dnsPolicy: dnsPolicy
                serviceAccountName: serviceAccountName
                hostNetwork: true
                dnsConfig: "{}"
                imagePullSecrets:
                - imagePullSecrets
                - imagePullSecrets
                priorityClassName: priorityClassName
                annotations:
                  key: annotations
                hostAliases:
                - null
                - null
                securityContext: "{}"
                priority: 3
                restartPolicy: restartPolicy
                labels:
                  key: labels
                nodeSelector:
                  key: nodeSelector
                tolerations:
                - null
                - null
                schedulerName: schedulerName
                affinity: "{}"
                hostPID: hostPID
              minReplicas: 5
              replicas: 5
              volumes:
              - null
              - null
              rayStartParams:
                key: rayStartParams
              connections:
              - connections
              - connections
            metadata:
              key: metadata
            kind: rayjob
            entrypoint: entrypoint
            workers:
            - maxReplicas: 8
              container: "{}"
              init:
              - modelRef: modelRef
                container: "{}"
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: revision
                file:
                  filename: filename
                  kind: kind
                  chmod: chmod
                  content: content
                tensorboard:
                  port: 6
                  plugins: plugins
                  use_names: true
                  uuids:
                  - uuids
                  - uuids
                  path_prefix: path_prefix
                artifactRef: artifactRef
                paths:
                - "{}"
                - "{}"
                dockerfile:
                  image: image
                  gid: 0
                  workdirPath: workdirPath
                  run:
                  - run
                  - run
                  env:
                    key: env
                  path:
                  - path
                  - path
                  uid: 7
                  filename: filename
                  workdir: workdir
                  shell: shell
                  post_run_copy:
                  - "{}"
                  - "{}"
                  langEnv: langEnv
                  copy:
                  - "{}"
                  - "{}"
                  username: 7
                connection: connection
                lineageRef: lineageRef
                artifacts:
                  files:
                  - "{}"
                  - "{}"
                  dirs:
                  - "{}"
                  - "{}"
                  workers: 3
              - modelRef: modelRef
                container: "{}"
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: revision
                file:
                  filename: filename
                  kind: kind
                  chmod: chmod
                  content: content
                tensorboard:
                  port: 6
                  plugins: plugins
                  use_names: true
                  uuids:
                  - uuids
                  - uuids
                  path_prefix: path_prefix
                artifactRef: artifactRef
                paths:
                - "{}"
                - "{}"
                dockerfile:
                  image: image
                  gid: 0
                  workdirPath: workdirPath
                  run:
                  - run
                  - run
                  env:
                    key: env
                  path:
                  - path
                  - path
                  uid: 7
                  filename: filename
                  workdir: workdir
                  shell: shell
                  post_run_copy:
                  - "{}"
                  - "{}"
                  langEnv: langEnv
                  copy:
                  - "{}"
                  - "{}"
                  username: 7
                connection: connection
                lineageRef: lineageRef
                artifacts:
                  files:
                  - "{}"
                  - "{}"
                  dirs:
                  - "{}"
                  - "{}"
                  workers: 3
              sidecars:
              - null
              - null
              groupName: groupName
              environment:
                nodeName: nodeName
                dnsPolicy: dnsPolicy
                serviceAccountName: serviceAccountName
                hostNetwork: true
                dnsConfig: "{}"
                imagePullSecrets:
                - imagePullSecrets
                - imagePullSecrets
                priorityClassName: priorityClassName
                annotations:
                  key: annotations
                hostAliases:
                - null
                - null
                securityContext: "{}"
                priority: 3
                restartPolicy: restartPolicy
                labels:
                  key: labels
                nodeSelector:
                  key: nodeSelector
                tolerations:
                - null
                - null
                schedulerName: schedulerName
                affinity: "{}"
                hostPID: hostPID
              minReplicas: 5
              replicas: 5
              volumes:
              - null
              - null
              rayStartParams:
                key: rayStartParams
              connections:
              - connections
              - connections
            - maxReplicas: 8
              container: "{}"
              init:
              - modelRef: modelRef
                container: "{}"
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: revision
                file:
                  filename: filename
                  kind: kind
                  chmod: chmod
                  content: content
                tensorboard:
                  port: 6
                  plugins: plugins
                  use_names: true
                  uuids:
                  - uuids
                  - uuids
                  path_prefix: path_prefix
                artifactRef: artifactRef
                paths:
                - "{}"
                - "{}"
                dockerfile:
                  image: image
                  gid: 0
                  workdirPath: workdirPath
                  run:
                  - run
                  - run
                  env:
                    key: env
                  path:
                  - path
                  - path
                  uid: 7
                  filename: filename
                  workdir: workdir
                  shell: shell
                  post_run_copy:
                  - "{}"
                  - "{}"
                  langEnv: langEnv
                  copy:
                  - "{}"
                  - "{}"
                  username: 7
                connection: connection
                lineageRef: lineageRef
                artifacts:
                  files:
                  - "{}"
                  - "{}"
                  dirs:
                  - "{}"
                  - "{}"
                  workers: 3
              - modelRef: modelRef
                container: "{}"
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: revision
                file:
                  filename: filename
                  kind: kind
                  chmod: chmod
                  content: content
                tensorboard:
                  port: 6
                  plugins: plugins
                  use_names: true
                  uuids:
                  - uuids
                  - uuids
                  path_prefix: path_prefix
                artifactRef: artifactRef
                paths:
                - "{}"
                - "{}"
                dockerfile:
                  image: image
                  gid: 0
                  workdirPath: workdirPath
                  run:
                  - run
                  - run
                  env:
                    key: env
                  path:
                  - path
                  - path
                  uid: 7
                  filename: filename
                  workdir: workdir
                  shell: shell
                  post_run_copy:
                  - "{}"
                  - "{}"
                  langEnv: langEnv
                  copy:
                  - "{}"
                  - "{}"
                  username: 7
                connection: connection
                lineageRef: lineageRef
                artifacts:
                  files:
                  - "{}"
                  - "{}"
                  dirs:
                  - "{}"
                  - "{}"
                  workers: 3
              sidecars:
              - null
              - null
              groupName: groupName
              environment:
                nodeName: nodeName
                dnsPolicy: dnsPolicy
                serviceAccountName: serviceAccountName
                hostNetwork: true
                dnsConfig: "{}"
                imagePullSecrets:
                - imagePullSecrets
                - imagePullSecrets
                priorityClassName: priorityClassName
                annotations:
                  key: annotations
                hostAliases:
                - null
                - null
                securityContext: "{}"
                priority: 3
                restartPolicy: restartPolicy
                labels:
                  key: labels
                nodeSelector:
                  key: nodeSelector
                tolerations:
                - null
                - null
                schedulerName: schedulerName
                affinity: "{}"
                hostPID: hostPID
              minReplicas: 5
              replicas: 5
              volumes:
              - null
              - null
              rayStartParams:
                key: rayStartParams
              connections:
              - connections
              - connections
            runtimeEnv: "{}"
          mxJob:
            mode: null
            scheduler:
              container: "{}"
              init:
              - modelRef: modelRef
                container: "{}"
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: revision
                file:
                  filename: filename
                  kind: kind
                  chmod: chmod
                  content: content
                tensorboard:
                  port: 6
                  plugins: plugins
                  use_names: true
                  uuids:
                  - uuids
                  - uuids
                  path_prefix: path_prefix
                artifactRef: artifactRef
                paths:
                - "{}"
                - "{}"
                dockerfile:
                  image: image
                  gid: 0
                  workdirPath: workdirPath
                  run:
                  - run
                  - run
                  env:
                    key: env
                  path:
                  - path
                  - path
                  uid: 7
                  filename: filename
                  workdir: workdir
                  shell: shell
                  post_run_copy:
                  - "{}"
                  - "{}"
                  langEnv: langEnv
                  copy:
                  - "{}"
                  - "{}"
                  username: 7
                connection: connection
                lineageRef: lineageRef
                artifacts:
                  files:
                  - "{}"
                  - "{}"
                  dirs:
                  - "{}"
                  - "{}"
                  workers: 3
              - modelRef: modelRef
                container: "{}"
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: revision
                file:
                  filename: filename
                  kind: kind
                  chmod: chmod
                  content: content
                tensorboard:
                  port: 6
                  plugins: plugins
                  use_names: true
                  uuids:
                  - uuids
                  - uuids
                  path_prefix: path_prefix
                artifactRef: artifactRef
                paths:
                - "{}"
                - "{}"
                dockerfile:
                  image: image
                  gid: 0
                  workdirPath: workdirPath
                  run:
                  - run
                  - run
                  env:
                    key: env
                  path:
                  - path
                  - path
                  uid: 7
                  filename: filename
                  workdir: workdir
                  shell: shell
                  post_run_copy:
                  - "{}"
                  - "{}"
                  langEnv: langEnv
                  copy:
                  - "{}"
                  - "{}"
                  username: 7
                connection: connection
                lineageRef: lineageRef
                artifacts:
                  files:
                  - "{}"
                  - "{}"
                  dirs:
                  - "{}"
                  - "{}"
                  workers: 3
              sidecars:
              - null
              - null
              environment:
                nodeName: nodeName
                dnsPolicy: dnsPolicy
                serviceAccountName: serviceAccountName
                hostNetwork: true
                dnsConfig: "{}"
                imagePullSecrets:
                - imagePullSecrets
                - imagePullSecrets
                priorityClassName: priorityClassName
                annotations:
                  key: annotations
                hostAliases:
                - null
                - null
                securityContext: "{}"
                priority: 3
                restartPolicy: restartPolicy
                labels:
                  key: labels
                nodeSelector:
                  key: nodeSelector
                tolerations:
                - null
                - null
                schedulerName: schedulerName
                affinity: "{}"
                hostPID: hostPID
              replicas: 1
              volumes:
              - null
              - null
              connections:
              - connections
              - connections
            cleanPodPolicy: null
            server:
              container: "{}"
              init:
              - modelRef: modelRef
                container: "{}"
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: revision
                file:
                  filename: filename
                  kind: kind
                  chmod: chmod
                  content: content
                tensorboard:
                  port: 6
                  plugins: plugins
                  use_names: true
                  uuids:
                  - uuids
                  - uuids
                  path_prefix: path_prefix
                artifactRef: artifactRef
                paths:
                - "{}"
                - "{}"
                dockerfile:
                  image: image
                  gid: 0
                  workdirPath: workdirPath
                  run:
                  - run
                  - run
                  env:
                    key: env
                  path:
                  - path
                  - path
                  uid: 7
                  filename: filename
                  workdir: workdir
                  shell: shell
                  post_run_copy:
                  - "{}"
                  - "{}"
                  langEnv: langEnv
                  copy:
                  - "{}"
                  - "{}"
                  username: 7
                connection: connection
                lineageRef: lineageRef
                artifacts:
                  files:
                  - "{}"
                  - "{}"
                  dirs:
                  - "{}"
                  - "{}"
                  workers: 3
              - modelRef: modelRef
                container: "{}"
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: revision
                file:
                  filename: filename
                  kind: kind
                  chmod: chmod
                  content: content
                tensorboard:
                  port: 6
                  plugins: plugins
                  use_names: true
                  uuids:
                  - uuids
                  - uuids
                  path_prefix: path_prefix
                artifactRef: artifactRef
                paths:
                - "{}"
                - "{}"
                dockerfile:
                  image: image
                  gid: 0
                  workdirPath: workdirPath
                  run:
                  - run
                  - run
                  env:
                    key: env
                  path:
                  - path
                  - path
                  uid: 7
                  filename: filename
                  workdir: workdir
                  shell: shell
                  post_run_copy:
                  - "{}"
                  - "{}"
                  langEnv: langEnv
                  copy:
                  - "{}"
                  - "{}"
                  username: 7
                connection: connection
                lineageRef: lineageRef
                artifacts:
                  files:
                  - "{}"
                  - "{}"
                  dirs:
                  - "{}"
                  - "{}"
                  workers: 3
              sidecars:
              - null
              - null
              environment:
                nodeName: nodeName
                dnsPolicy: dnsPolicy
                serviceAccountName: serviceAccountName
                hostNetwork: true
                dnsConfig: "{}"
                imagePullSecrets:
                - imagePullSecrets
                - imagePullSecrets
                priorityClassName: priorityClassName
                annotations:
                  key: annotations
                hostAliases:
                - null
                - null
                securityContext: "{}"
                priority: 3
                restartPolicy: restartPolicy
                labels:
                  key: labels
                nodeSelector:
                  key: nodeSelector
                tolerations:
                - null
                - null
                schedulerName: schedulerName
                affinity: "{}"
                hostPID: hostPID
              replicas: 1
              volumes:
              - null
              - null
              connections:
              - connections
              - connections
            tuner_server:
              container: "{}"
              init:
              - modelRef: modelRef
                container: "{}"
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: revision
                file:
                  filename: filename
                  kind: kind
                  chmod: chmod
                  content: content
                tensorboard:
                  port: 6
                  plugins: plugins
                  use_names: true
                  uuids:
                  - uuids
                  - uuids
                  path_prefix: path_prefix
                artifactRef: artifactRef
                paths:
                - "{}"
                - "{}"
                dockerfile:
                  image: image
                  gid: 0
                  workdirPath: workdirPath
                  run:
                  - run
                  - run
                  env:
                    key: env
                  path:
                  - path
                  - path
                  uid: 7
                  filename: filename
                  workdir: workdir
                  shell: shell
                  post_run_copy:
                  - "{}"
                  - "{}"
                  langEnv: langEnv
                  copy:
                  - "{}"
                  - "{}"
                  username: 7
                connection: connection
                lineageRef: lineageRef
                artifacts:
                  files:
                  - "{}"
                  - "{}"
                  dirs:
                  - "{}"
                  - "{}"
                  workers: 3
              - modelRef: modelRef
                container: "{}"
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: revision
                file:
                  filename: filename
                  kind: kind
                  chmod: chmod
                  content: content
                tensorboard:
                  port: 6
                  plugins: plugins
                  use_names: true
                  uuids:
                  - uuids
                  - uuids
                  path_prefix: path_prefix
                artifactRef: artifactRef
                paths:
                - "{}"
                - "{}"
                dockerfile:
                  image: image
                  gid: 0
                  workdirPath: workdirPath
                  run:
                  - run
                  - run
                  env:
                    key: env
                  path:
                  - path
                  - path
                  uid: 7
                  filename: filename
                  workdir: workdir
                  shell: shell
                  post_run_copy:
                  - "{}"
                  - "{}"
                  langEnv: langEnv
                  copy:
                  - "{}"
                  - "{}"
                  username: 7
                connection: connection
                lineageRef: lineageRef
                artifacts:
                  files:
                  - "{}"
                  - "{}"
                  dirs:
                  - "{}"
                  - "{}"
                  workers: 3
              sidecars:
              - null
              - null
              environment:
                nodeName: nodeName
                dnsPolicy: dnsPolicy
                serviceAccountName: serviceAccountName
                hostNetwork: true
                dnsConfig: "{}"
                imagePullSecrets:
                - imagePullSecrets
                - imagePullSecrets
                priorityClassName: priorityClassName
                annotations:
                  key: annotations
                hostAliases:
                - null
                - null
                securityContext: "{}"
                priority: 3
                restartPolicy: restartPolicy
                labels:
                  key: labels
                nodeSelector:
                  key: nodeSelector
                tolerations:
                - null
                - null
                schedulerName: schedulerName
                affinity: "{}"
                hostPID: hostPID
              replicas: 1
              volumes:
              - null
              - null
              connections:
              - connections
              - connections
            tuner:
              container: "{}"
              init:
              - modelRef: modelRef
                container: "{}"
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: revision
                file:
                  filename: filename
                  kind: kind
                  chmod: chmod
                  content: content
                tensorboard:
                  port: 6
                  plugins: plugins
                  use_names: true
                  uuids:
                  - uuids
                  - uuids
                  path_prefix: path_prefix
                artifactRef: artifactRef
                paths:
                - "{}"
                - "{}"
                dockerfile:
                  image: image
                  gid: 0
                  workdirPath: workdirPath
                  run:
                  - run
                  - run
                  env:
                    key: env
                  path:
                  - path
                  - path
                  uid: 7
                  filename: filename
                  workdir: workdir
                  shell: shell
                  post_run_copy:
                  - "{}"
                  - "{}"
                  langEnv: langEnv
                  copy:
                  - "{}"
                  - "{}"
                  username: 7
                connection: connection
                lineageRef: lineageRef
                artifacts:
                  files:
                  - "{}"
                  - "{}"
                  dirs:
                  - "{}"
                  - "{}"
                  workers: 3
              - modelRef: modelRef
                container: "{}"
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: revision
                file:
                  filename: filename
                  kind: kind
                  chmod: chmod
                  content: content
                tensorboard:
                  port: 6
                  plugins: plugins
                  use_names: true
                  uuids:
                  - uuids
                  - uuids
                  path_prefix: path_prefix
                artifactRef: artifactRef
                paths:
                - "{}"
                - "{}"
                dockerfile:
                  image: image
                  gid: 0
                  workdirPath: workdirPath
                  run:
                  - run
                  - run
                  env:
                    key: env
                  path:
                  - path
                  - path
                  uid: 7
                  filename: filename
                  workdir: workdir
                  shell: shell
                  post_run_copy:
                  - "{}"
                  - "{}"
                  langEnv: langEnv
                  copy:
                  - "{}"
                  - "{}"
                  username: 7
                connection: connection
                lineageRef: lineageRef
                artifacts:
                  files:
                  - "{}"
                  - "{}"
                  dirs:
                  - "{}"
                  - "{}"
                  workers: 3
              sidecars:
              - null
              - null
              environment:
                nodeName: nodeName
                dnsPolicy: dnsPolicy
                serviceAccountName: serviceAccountName
                hostNetwork: true
                dnsConfig: "{}"
                imagePullSecrets:
                - imagePullSecrets
                - imagePullSecrets
                priorityClassName: priorityClassName
                annotations:
                  key: annotations
                hostAliases:
                - null
                - null
                securityContext: "{}"
                priority: 3
                restartPolicy: restartPolicy
                labels:
                  key: labels
                nodeSelector:
                  key: nodeSelector
                tolerations:
                - null
                - null
                schedulerName: schedulerName
                affinity: "{}"
                hostPID: hostPID
              replicas: 1
              volumes:
              - null
              - null
              connections:
              - connections
              - connections
            tuner_tracker:
              container: "{}"
              init:
              - modelRef: modelRef
                container: "{}"
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: revision
                file:
                  filename: filename
                  kind: kind
                  chmod: chmod
                  content: content
                tensorboard:
                  port: 6
                  plugins: plugins
                  use_names: true
                  uuids:
                  - uuids
                  - uuids
                  path_prefix: path_prefix
                artifactRef: artifactRef
                paths:
                - "{}"
                - "{}"
                dockerfile:
                  image: image
                  gid: 0
                  workdirPath: workdirPath
                  run:
                  - run
                  - run
                  env:
                    key: env
                  path:
                  - path
                  - path
                  uid: 7
                  filename: filename
                  workdir: workdir
                  shell: shell
                  post_run_copy:
                  - "{}"
                  - "{}"
                  langEnv: langEnv
                  copy:
                  - "{}"
                  - "{}"
                  username: 7
                connection: connection
                lineageRef: lineageRef
                artifacts:
                  files:
                  - "{}"
                  - "{}"
                  dirs:
                  - "{}"
                  - "{}"
                  workers: 3
              - modelRef: modelRef
                container: "{}"
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: revision
                file:
                  filename: filename
                  kind: kind
                  chmod: chmod
                  content: content
                tensorboard:
                  port: 6
                  plugins: plugins
                  use_names: true
                  uuids:
                  - uuids
                  - uuids
                  path_prefix: path_prefix
                artifactRef: artifactRef
                paths:
                - "{}"
                - "{}"
                dockerfile:
                  image: image
                  gid: 0
                  workdirPath: workdirPath
                  run:
                  - run
                  - run
                  env:
                    key: env
                  path:
                  - path
                  - path
                  uid: 7
                  filename: filename
                  workdir: workdir
                  shell: shell
                  post_run_copy:
                  - "{}"
                  - "{}"
                  langEnv: langEnv
                  copy:
                  - "{}"
                  - "{}"
                  username: 7
                connection: connection
                lineageRef: lineageRef
                artifacts:
                  files:
                  - "{}"
                  - "{}"
                  dirs:
                  - "{}"
                  - "{}"
                  workers: 3
              sidecars:
              - null
              - null
              environment:
                nodeName: nodeName
                dnsPolicy: dnsPolicy
                serviceAccountName: serviceAccountName
                hostNetwork: true
                dnsConfig: "{}"
                imagePullSecrets:
                - imagePullSecrets
                - imagePullSecrets
                priorityClassName: priorityClassName
                annotations:
                  key: annotations
                hostAliases:
                - null
                - null
                securityContext: "{}"
                priority: 3
                restartPolicy: restartPolicy
                labels:
                  key: labels
                nodeSelector:
                  key: nodeSelector
                tolerations:
                - null
                - null
                schedulerName: schedulerName
                affinity: "{}"
                hostPID: hostPID
              replicas: 1
              volumes:
              - null
              - null
              connections:
              - connections
              - connections
            kind: mxjob
            worker:
              container: "{}"
              init:
              - modelRef: modelRef
                container: "{}"
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: revision
                file:
                  filename: filename
                  kind: kind
                  chmod: chmod
                  content: content
                tensorboard:
                  port: 6
                  plugins: plugins
                  use_names: true
                  uuids:
                  - uuids
                  - uuids
                  path_prefix: path_prefix
                artifactRef: artifactRef
                paths:
                - "{}"
                - "{}"
                dockerfile:
                  image: image
                  gid: 0
                  workdirPath: workdirPath
                  run:
                  - run
                  - run
                  env:
                    key: env
                  path:
                  - path
                  - path
                  uid: 7
                  filename: filename
                  workdir: workdir
                  shell: shell
                  post_run_copy:
                  - "{}"
                  - "{}"
                  langEnv: langEnv
                  copy:
                  - "{}"
                  - "{}"
                  username: 7
                connection: connection
                lineageRef: lineageRef
                artifacts:
                  files:
                  - "{}"
                  - "{}"
                  dirs:
                  - "{}"
                  - "{}"
                  workers: 3
              - modelRef: modelRef
                container: "{}"
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: revision
                file:
                  filename: filename
                  kind: kind
                  chmod: chmod
                  content: content
                tensorboard:
                  port: 6
                  plugins: plugins
                  use_names: true
                  uuids:
                  - uuids
                  - uuids
                  path_prefix: path_prefix
                artifactRef: artifactRef
                paths:
                - "{}"
                - "{}"
                dockerfile:
                  image: image
                  gid: 0
                  workdirPath: workdirPath
                  run:
                  - run
                  - run
                  env:
                    key: env
                  path:
                  - path
                  - path
                  uid: 7
                  filename: filename
                  workdir: workdir
                  shell: shell
                  post_run_copy:
                  - "{}"
                  - "{}"
                  langEnv: langEnv
                  copy:
                  - "{}"
                  - "{}"
                  username: 7
                connection: connection
                lineageRef: lineageRef
                artifacts:
                  files:
                  - "{}"
                  - "{}"
                  dirs:
                  - "{}"
                  - "{}"
                  workers: 3
              sidecars:
              - null
              - null
              environment:
                nodeName: nodeName
                dnsPolicy: dnsPolicy
                serviceAccountName: serviceAccountName
                hostNetwork: true
                dnsConfig: "{}"
                imagePullSecrets:
                - imagePullSecrets
                - imagePullSecrets
                priorityClassName: priorityClassName
                annotations:
                  key: annotations
                hostAliases:
                - null
                - null
                securityContext: "{}"
                priority: 3
                restartPolicy: restartPolicy
                labels:
                  key: labels
                nodeSelector:
                  key: nodeSelector
                tolerations:
                - null
                - null
                schedulerName: schedulerName
                affinity: "{}"
                hostPID: hostPID
              replicas: 1
              volumes:
              - null
              - null
              connections:
              - connections
              - connections
            schedulingPolicy:
              minAvailable: 0
              priorityClass: priorityClass
              scheduleTimeoutSeconds: 2
              minResources: "{}"
              queue: queue
          service:
            container: "{}"
            init:
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            sidecars:
            - null
            - null
            environment:
              nodeName: nodeName
              dnsPolicy: dnsPolicy
              serviceAccountName: serviceAccountName
              hostNetwork: true
              dnsConfig: "{}"
              imagePullSecrets:
              - imagePullSecrets
              - imagePullSecrets
              priorityClassName: priorityClassName
              annotations:
                key: annotations
              hostAliases:
              - null
              - null
              securityContext: "{}"
              priority: 3
              restartPolicy: restartPolicy
              labels:
                key: labels
              nodeSelector:
                key: nodeSelector
              tolerations:
              - null
              - null
              schedulerName: schedulerName
              affinity: "{}"
              hostPID: hostPID
            isExternal: true
            kind: service
            replicas: 4
            volumes:
            - null
            - null
            ports:
            - 0
            - 0
            rewritePath: true
            connections:
            - connections
            - connections
          tfJob:
            cleanPodPolicy: null
            enableDynamicWorker: true
            ps:
              container: "{}"
              init:
              - modelRef: modelRef
                container: "{}"
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: revision
                file:
                  filename: filename
                  kind: kind
                  chmod: chmod
                  content: content
                tensorboard:
                  port: 6
                  plugins: plugins
                  use_names: true
                  uuids:
                  - uuids
                  - uuids
                  path_prefix: path_prefix
                artifactRef: artifactRef
                paths:
                - "{}"
                - "{}"
                dockerfile:
                  image: image
                  gid: 0
                  workdirPath: workdirPath
                  run:
                  - run
                  - run
                  env:
                    key: env
                  path:
                  - path
                  - path
                  uid: 7
                  filename: filename
                  workdir: workdir
                  shell: shell
                  post_run_copy:
                  - "{}"
                  - "{}"
                  langEnv: langEnv
                  copy:
                  - "{}"
                  - "{}"
                  username: 7
                connection: connection
                lineageRef: lineageRef
                artifacts:
                  files:
                  - "{}"
                  - "{}"
                  dirs:
                  - "{}"
                  - "{}"
                  workers: 3
              - modelRef: modelRef
                container: "{}"
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: revision
                file:
                  filename: filename
                  kind: kind
                  chmod: chmod
                  content: content
                tensorboard:
                  port: 6
                  plugins: plugins
                  use_names: true
                  uuids:
                  - uuids
                  - uuids
                  path_prefix: path_prefix
                artifactRef: artifactRef
                paths:
                - "{}"
                - "{}"
                dockerfile:
                  image: image
                  gid: 0
                  workdirPath: workdirPath
                  run:
                  - run
                  - run
                  env:
                    key: env
                  path:
                  - path
                  - path
                  uid: 7
                  filename: filename
                  workdir: workdir
                  shell: shell
                  post_run_copy:
                  - "{}"
                  - "{}"
                  langEnv: langEnv
                  copy:
                  - "{}"
                  - "{}"
                  username: 7
                connection: connection
                lineageRef: lineageRef
                artifacts:
                  files:
                  - "{}"
                  - "{}"
                  dirs:
                  - "{}"
                  - "{}"
                  workers: 3
              sidecars:
              - null
              - null
              environment:
                nodeName: nodeName
                dnsPolicy: dnsPolicy
                serviceAccountName: serviceAccountName
                hostNetwork: true
                dnsConfig: "{}"
                imagePullSecrets:
                - imagePullSecrets
                - imagePullSecrets
                priorityClassName: priorityClassName
                annotations:
                  key: annotations
                hostAliases:
                - null
                - null
                securityContext: "{}"
                priority: 3
                restartPolicy: restartPolicy
                labels:
                  key: labels
                nodeSelector:
                  key: nodeSelector
                tolerations:
                - null
                - null
                schedulerName: schedulerName
                affinity: "{}"
                hostPID: hostPID
              replicas: 1
              volumes:
              - null
              - null
              connections:
              - connections
              - connections
            kind: tfjob
            chief:
              container: "{}"
              init:
              - modelRef: modelRef
                container: "{}"
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: revision
                file:
                  filename: filename
                  kind: kind
                  chmod: chmod
                  content: content
                tensorboard:
                  port: 6
                  plugins: plugins
                  use_names: true
                  uuids:
                  - uuids
                  - uuids
                  path_prefix: path_prefix
                artifactRef: artifactRef
                paths:
                - "{}"
                - "{}"
                dockerfile:
                  image: image
                  gid: 0
                  workdirPath: workdirPath
                  run:
                  - run
                  - run
                  env:
                    key: env
                  path:
                  - path
                  - path
                  uid: 7
                  filename: filename
                  workdir: workdir
                  shell: shell
                  post_run_copy:
                  - "{}"
                  - "{}"
                  langEnv: langEnv
                  copy:
                  - "{}"
                  - "{}"
                  username: 7
                connection: connection
                lineageRef: lineageRef
                artifacts:
                  files:
                  - "{}"
                  - "{}"
                  dirs:
                  - "{}"
                  - "{}"
                  workers: 3
              - modelRef: modelRef
                container: "{}"
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: revision
                file:
                  filename: filename
                  kind: kind
                  chmod: chmod
                  content: content
                tensorboard:
                  port: 6
                  plugins: plugins
                  use_names: true
                  uuids:
                  - uuids
                  - uuids
                  path_prefix: path_prefix
                artifactRef: artifactRef
                paths:
                - "{}"
                - "{}"
                dockerfile:
                  image: image
                  gid: 0
                  workdirPath: workdirPath
                  run:
                  - run
                  - run
                  env:
                    key: env
                  path:
                  - path
                  - path
                  uid: 7
                  filename: filename
                  workdir: workdir
                  shell: shell
                  post_run_copy:
                  - "{}"
                  - "{}"
                  langEnv: langEnv
                  copy:
                  - "{}"
                  - "{}"
                  username: 7
                connection: connection
                lineageRef: lineageRef
                artifacts:
                  files:
                  - "{}"
                  - "{}"
                  dirs:
                  - "{}"
                  - "{}"
                  workers: 3
              sidecars:
              - null
              - null
              environment:
                nodeName: nodeName
                dnsPolicy: dnsPolicy
                serviceAccountName: serviceAccountName
                hostNetwork: true
                dnsConfig: "{}"
                imagePullSecrets:
                - imagePullSecrets
                - imagePullSecrets
                priorityClassName: priorityClassName
                annotations:
                  key: annotations
                hostAliases:
                - null
                - null
                securityContext: "{}"
                priority: 3
                restartPolicy: restartPolicy
                labels:
                  key: labels
                nodeSelector:
                  key: nodeSelector
                tolerations:
                - null
                - null
                schedulerName: schedulerName
                affinity: "{}"
                hostPID: hostPID
              replicas: 1
              volumes:
              - null
              - null
              connections:
              - connections
              - connections
            worker:
              container: "{}"
              init:
              - modelRef: modelRef
                container: "{}"
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: revision
                file:
                  filename: filename
                  kind: kind
                  chmod: chmod
                  content: content
                tensorboard:
                  port: 6
                  plugins: plugins
                  use_names: true
                  uuids:
                  - uuids
                  - uuids
                  path_prefix: path_prefix
                artifactRef: artifactRef
                paths:
                - "{}"
                - "{}"
                dockerfile:
                  image: image
                  gid: 0
                  workdirPath: workdirPath
                  run:
                  - run
                  - run
                  env:
                    key: env
                  path:
                  - path
                  - path
                  uid: 7
                  filename: filename
                  workdir: workdir
                  shell: shell
                  post_run_copy:
                  - "{}"
                  - "{}"
                  langEnv: langEnv
                  copy:
                  - "{}"
                  - "{}"
                  username: 7
                connection: connection
                lineageRef: lineageRef
                artifacts:
                  files:
                  - "{}"
                  - "{}"
                  dirs:
                  - "{}"
                  - "{}"
                  workers: 3
              - modelRef: modelRef
                container: "{}"
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: revision
                file:
                  filename: filename
                  kind: kind
                  chmod: chmod
                  content: content
                tensorboard:
                  port: 6
                  plugins: plugins
                  use_names: true
                  uuids:
                  - uuids
                  - uuids
                  path_prefix: path_prefix
                artifactRef: artifactRef
                paths:
                - "{}"
                - "{}"
                dockerfile:
                  image: image
                  gid: 0
                  workdirPath: workdirPath
                  run:
                  - run
                  - run
                  env:
                    key: env
                  path:
                  - path
                  - path
                  uid: 7
                  filename: filename
                  workdir: workdir
                  shell: shell
                  post_run_copy:
                  - "{}"
                  - "{}"
                  langEnv: langEnv
                  copy:
                  - "{}"
                  - "{}"
                  username: 7
                connection: connection
                lineageRef: lineageRef
                artifacts:
                  files:
                  - "{}"
                  - "{}"
                  dirs:
                  - "{}"
                  - "{}"
                  workers: 3
              sidecars:
              - null
              - null
              environment:
                nodeName: nodeName
                dnsPolicy: dnsPolicy
                serviceAccountName: serviceAccountName
                hostNetwork: true
                dnsConfig: "{}"
                imagePullSecrets:
                - imagePullSecrets
                - imagePullSecrets
                priorityClassName: priorityClassName
                annotations:
                  key: annotations
                hostAliases:
                - null
                - null
                securityContext: "{}"
                priority: 3
                restartPolicy: restartPolicy
                labels:
                  key: labels
                nodeSelector:
                  key: nodeSelector
                tolerations:
                - null
                - null
                schedulerName: schedulerName
                affinity: "{}"
                hostPID: hostPID
              replicas: 1
              volumes:
              - null
              - null
              connections:
              - connections
              - connections
            schedulingPolicy:
              minAvailable: 0
              priorityClass: priorityClass
              scheduleTimeoutSeconds: 2
              minResources: "{}"
              queue: queue
            successPolicy: successPolicy
            evaluator:
              container: "{}"
              init:
              - modelRef: modelRef
                container: "{}"
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: revision
                file:
                  filename: filename
                  kind: kind
                  chmod: chmod
                  content: content
                tensorboard:
                  port: 6
                  plugins: plugins
                  use_names: true
                  uuids:
                  - uuids
                  - uuids
                  path_prefix: path_prefix
                artifactRef: artifactRef
                paths:
                - "{}"
                - "{}"
                dockerfile:
                  image: image
                  gid: 0
                  workdirPath: workdirPath
                  run:
                  - run
                  - run
                  env:
                    key: env
                  path:
                  - path
                  - path
                  uid: 7
                  filename: filename
                  workdir: workdir
                  shell: shell
                  post_run_copy:
                  - "{}"
                  - "{}"
                  langEnv: langEnv
                  copy:
                  - "{}"
                  - "{}"
                  username: 7
                connection: connection
                lineageRef: lineageRef
                artifacts:
                  files:
                  - "{}"
                  - "{}"
                  dirs:
                  - "{}"
                  - "{}"
                  workers: 3
              - modelRef: modelRef
                container: "{}"
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: revision
                file:
                  filename: filename
                  kind: kind
                  chmod: chmod
                  content: content
                tensorboard:
                  port: 6
                  plugins: plugins
                  use_names: true
                  uuids:
                  - uuids
                  - uuids
                  path_prefix: path_prefix
                artifactRef: artifactRef
                paths:
                - "{}"
                - "{}"
                dockerfile:
                  image: image
                  gid: 0
                  workdirPath: workdirPath
                  run:
                  - run
                  - run
                  env:
                    key: env
                  path:
                  - path
                  - path
                  uid: 7
                  filename: filename
                  workdir: workdir
                  shell: shell
                  post_run_copy:
                  - "{}"
                  - "{}"
                  langEnv: langEnv
                  copy:
                  - "{}"
                  - "{}"
                  username: 7
                connection: connection
                lineageRef: lineageRef
                artifacts:
                  files:
                  - "{}"
                  - "{}"
                  dirs:
                  - "{}"
                  - "{}"
                  workers: 3
              sidecars:
              - null
              - null
              environment:
                nodeName: nodeName
                dnsPolicy: dnsPolicy
                serviceAccountName: serviceAccountName
                hostNetwork: true
                dnsConfig: "{}"
                imagePullSecrets:
                - imagePullSecrets
                - imagePullSecrets
                priorityClassName: priorityClassName
                annotations:
                  key: annotations
                hostAliases:
                - null
                - null
                securityContext: "{}"
                priority: 3
                restartPolicy: restartPolicy
                labels:
                  key: labels
                nodeSelector:
                  key: nodeSelector
                tolerations:
                - null
                - null
                schedulerName: schedulerName
                affinity: "{}"
                hostPID: hostPID
              replicas: 1
              volumes:
              - null
              - null
              connections:
              - connections
              - connections
          xgboostJob:
            cleanPodPolicy: null
            kind: xgboostjob
            worker:
              container: "{}"
              init:
              - modelRef: modelRef
                container: "{}"
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: revision
                file:
                  filename: filename
                  kind: kind
                  chmod: chmod
                  content: content
                tensorboard:
                  port: 6
                  plugins: plugins
                  use_names: true
                  uuids:
                  - uuids
                  - uuids
                  path_prefix: path_prefix
                artifactRef: artifactRef
                paths:
                - "{}"
                - "{}"
                dockerfile:
                  image: image
                  gid: 0
                  workdirPath: workdirPath
                  run:
                  - run
                  - run
                  env:
                    key: env
                  path:
                  - path
                  - path
                  uid: 7
                  filename: filename
                  workdir: workdir
                  shell: shell
                  post_run_copy:
                  - "{}"
                  - "{}"
                  langEnv: langEnv
                  copy:
                  - "{}"
                  - "{}"
                  username: 7
                connection: connection
                lineageRef: lineageRef
                artifacts:
                  files:
                  - "{}"
                  - "{}"
                  dirs:
                  - "{}"
                  - "{}"
                  workers: 3
              - modelRef: modelRef
                container: "{}"
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: revision
                file:
                  filename: filename
                  kind: kind
                  chmod: chmod
                  content: content
                tensorboard:
                  port: 6
                  plugins: plugins
                  use_names: true
                  uuids:
                  - uuids
                  - uuids
                  path_prefix: path_prefix
                artifactRef: artifactRef
                paths:
                - "{}"
                - "{}"
                dockerfile:
                  image: image
                  gid: 0
                  workdirPath: workdirPath
                  run:
                  - run
                  - run
                  env:
                    key: env
                  path:
                  - path
                  - path
                  uid: 7
                  filename: filename
                  workdir: workdir
                  shell: shell
                  post_run_copy:
                  - "{}"
                  - "{}"
                  langEnv: langEnv
                  copy:
                  - "{}"
                  - "{}"
                  username: 7
                connection: connection
                lineageRef: lineageRef
                artifacts:
                  files:
                  - "{}"
                  - "{}"
                  dirs:
                  - "{}"
                  - "{}"
                  workers: 3
              sidecars:
              - null
              - null
              environment:
                nodeName: nodeName
                dnsPolicy: dnsPolicy
                serviceAccountName: serviceAccountName
                hostNetwork: true
                dnsConfig: "{}"
                imagePullSecrets:
                - imagePullSecrets
                - imagePullSecrets
                priorityClassName: priorityClassName
                annotations:
                  key: annotations
                hostAliases:
                - null
                - null
                securityContext: "{}"
                priority: 3
                restartPolicy: restartPolicy
                labels:
                  key: labels
                nodeSelector:
                  key: nodeSelector
                tolerations:
                - null
                - null
                schedulerName: schedulerName
                affinity: "{}"
                hostPID: hostPID
              replicas: 1
              volumes:
              - null
              - null
              connections:
              - connections
              - connections
            schedulingPolicy:
              minAvailable: 0
              priorityClass: priorityClass
              scheduleTimeoutSeconds: 2
              minResources: "{}"
              queue: queue
            master:
              container: "{}"
              init:
              - modelRef: modelRef
                container: "{}"
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: revision
                file:
                  filename: filename
                  kind: kind
                  chmod: chmod
                  content: content
                tensorboard:
                  port: 6
                  plugins: plugins
                  use_names: true
                  uuids:
                  - uuids
                  - uuids
                  path_prefix: path_prefix
                artifactRef: artifactRef
                paths:
                - "{}"
                - "{}"
                dockerfile:
                  image: image
                  gid: 0
                  workdirPath: workdirPath
                  run:
                  - run
                  - run
                  env:
                    key: env
                  path:
                  - path
                  - path
                  uid: 7
                  filename: filename
                  workdir: workdir
                  shell: shell
                  post_run_copy:
                  - "{}"
                  - "{}"
                  langEnv: langEnv
                  copy:
                  - "{}"
                  - "{}"
                  username: 7
                connection: connection
                lineageRef: lineageRef
                artifacts:
                  files:
                  - "{}"
                  - "{}"
                  dirs:
                  - "{}"
                  - "{}"
                  workers: 3
              - modelRef: modelRef
                container: "{}"
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: revision
                file:
                  filename: filename
                  kind: kind
                  chmod: chmod
                  content: content
                tensorboard:
                  port: 6
                  plugins: plugins
                  use_names: true
                  uuids:
                  - uuids
                  - uuids
                  path_prefix: path_prefix
                artifactRef: artifactRef
                paths:
                - "{}"
                - "{}"
                dockerfile:
                  image: image
                  gid: 0
                  workdirPath: workdirPath
                  run:
                  - run
                  - run
                  env:
                    key: env
                  path:
                  - path
                  - path
                  uid: 7
                  filename: filename
                  workdir: workdir
                  shell: shell
                  post_run_copy:
                  - "{}"
                  - "{}"
                  langEnv: langEnv
                  copy:
                  - "{}"
                  - "{}"
                  username: 7
                connection: connection
                lineageRef: lineageRef
                artifacts:
                  files:
                  - "{}"
                  - "{}"
                  dirs:
                  - "{}"
                  - "{}"
                  workers: 3
              sidecars:
              - null
              - null
              environment:
                nodeName: nodeName
                dnsPolicy: dnsPolicy
                serviceAccountName: serviceAccountName
                hostNetwork: true
                dnsConfig: "{}"
                imagePullSecrets:
                - imagePullSecrets
                - imagePullSecrets
                priorityClassName: priorityClassName
                annotations:
                  key: annotations
                hostAliases:
                - null
                - null
                securityContext: "{}"
                priority: 3
                restartPolicy: restartPolicy
                labels:
                  key: labels
                nodeSelector:
                  key: nodeSelector
                tolerations:
                - null
                - null
                schedulerName: schedulerName
                affinity: "{}"
                hostPID: hostPID
              replicas: 1
              volumes:
              - null
              - null
              connections:
              - connections
              - connections
          dag:
            components:
            - termination:
                maxRetries: 3
                ttl: 3
                timeout: 7
              outputs:
              - delayValidation: true
                toEnv: toEnv
                description: description
                isOptional: true
                type: type
                isList: true
                isFlag: true
                argFormat: argFormat
                name: name
                options:
                - "{}"
                - "{}"
                connection: connection
                toInit: true
                value: "{}"
                validation:
                  multipleOf: 0
                  maxItems: 8
                  excludes:
                  - "{}"
                  - "{}"
                  keys:
                  - keys
                  - keys
                  minLength: 5
                  lt: 7
                  maxDigits: 0
                  containsKeys:
                  - containsKeys
                  - containsKeys
                  gt: 1
                  minItems: 6
                  regex: regex
                  contains:
                  - "{}"
                  - "{}"
                  delay: true
                  decimalPlaces: 7
                  excludesKeys:
                  - excludesKeys
                  - excludesKeys
                  minDigits: 9
                  options:
                  - "{}"
                  - "{}"
                  le: 9
                  ge: 4
                  maxLength: 4
              - delayValidation: true
                toEnv: toEnv
                description: description
                isOptional: true
                type: type
                isList: true
                isFlag: true
                argFormat: argFormat
                name: name
                options:
                - "{}"
                - "{}"
                connection: connection
                toInit: true
                value: "{}"
                validation:
                  multipleOf: 0
                  maxItems: 8
                  excludes:
                  - "{}"
                  - "{}"
                  keys:
                  - keys
                  - keys
                  minLength: 5
                  lt: 7
                  maxDigits: 0
                  containsKeys:
                  - containsKeys
                  - containsKeys
                  gt: 1
                  minItems: 6
                  regex: regex
                  contains:
                  - "{}"
                  - "{}"
                  delay: true
                  decimalPlaces: 7
                  excludesKeys:
                  - excludesKeys
                  - excludesKeys
                  minDigits: 9
                  options:
                  - "{}"
                  - "{}"
                  le: 9
                  ge: 4
                  maxLength: 4
              template:
                description: description
                fields:
                - fields
                - fields
                enabled: true
              cache:
                disable: true
                io:
                - io
                - io
                ttl: 7
                sections:
                - sections
                - sections
              cost: 4.459605
              kind: kind
              plugins:
                mountArtifactsStore: true
                syncStatuses: true
                auth: true
                collectResources: true
                collectLogs: true
                externalHost: true
                docker: true
                collectArtifacts: true
                logLevel: logLevel
                autoResume: true
                sidecar:
                  sleepInterval: 5
                  monitorSpec: true
                  image: image
                  imagePullPolicy: imagePullPolicy
                  syncInterval: 3
                  resources: "{}"
                  monitorLogs: true
                  imageTag: imageTag
                shm: true
                notifications:
                - trigger: null
                  connections:
                  - connections
                  - connections
                - trigger: null
                  connections:
                  - connections
                  - connections
              inputs:
              - delayValidation: true
                toEnv: toEnv
                description: description
                isOptional: true
                type: type
                isList: true
                isFlag: true
                argFormat: argFormat
                name: name
                options:
                - "{}"
                - "{}"
                connection: connection
                toInit: true
                value: "{}"
                validation:
                  multipleOf: 0
                  maxItems: 8
                  excludes:
                  - "{}"
                  - "{}"
                  keys:
                  - keys
                  - keys
                  minLength: 5
                  lt: 7
                  maxDigits: 0
                  containsKeys:
                  - containsKeys
                  - containsKeys
                  gt: 1
                  minItems: 6
                  regex: regex
                  contains:
                  - "{}"
                  - "{}"
                  delay: true
                  decimalPlaces: 7
                  excludesKeys:
                  - excludesKeys
                  - excludesKeys
                  minDigits: 9
                  options:
                  - "{}"
                  - "{}"
                  le: 9
                  ge: 4
                  maxLength: 4
              - delayValidation: true
                toEnv: toEnv
                description: description
                isOptional: true
                type: type
                isList: true
                isFlag: true
                argFormat: argFormat
                name: name
                options:
                - "{}"
                - "{}"
                connection: connection
                toInit: true
                value: "{}"
                validation:
                  multipleOf: 0
                  maxItems: 8
                  excludes:
                  - "{}"
                  - "{}"
                  keys:
                  - keys
                  - keys
                  minLength: 5
                  lt: 7
                  maxDigits: 0
                  containsKeys:
                  - containsKeys
                  - containsKeys
                  gt: 1
                  minItems: 6
                  regex: regex
                  contains:
                  - "{}"
                  - "{}"
                  delay: true
                  decimalPlaces: 7
                  excludesKeys:
                  - excludesKeys
                  - excludesKeys
                  minDigits: 9
                  options:
                  - "{}"
                  - "{}"
                  le: 9
                  ge: 4
                  maxLength: 4
              description: description
              run: "{}"
              version: 4.2587733
              tags:
              - tags
              - tags
              presets:
              - presets
              - presets
              build:
                cache:
                  disable: true
                  io:
                  - io
                  - io
                  ttl: 7
                  sections:
                  - sections
                  - sections
                presets:
                - presets
                - presets
                runPatch: "{}"
                hubRef: hubRef
                namespace: namespace
                connection: connection
                patchStrategy: null
                params:
                  key:
                    ref: ref
                    toEnv: toEnv
                    contextOnly: true
                    connection: connection
                    toInit: true
                    value: "{}"
                queue: queue
              name: name
              namespace: namespace
              isApproved: true
              hooks:
              - presets:
                - presets
                - presets
                hubRef: hubRef
                namespace: namespace
                disableDefaults: true
                connection: connection
                trigger: null
                conditions: conditions
                params:
                  key:
                    ref: ref
                    toEnv: toEnv
                    contextOnly: true
                    connection: connection
                    toInit: true
                    value: "{}"
                queue: queue
              - presets:
                - presets
                - presets
                hubRef: hubRef
                namespace: namespace
                disableDefaults: true
                connection: connection
                trigger: null
                conditions: conditions
                params:
                  key:
                    ref: ref
                    toEnv: toEnv
                    contextOnly: true
                    connection: connection
                    toInit: true
                    value: "{}"
                queue: queue
              queue: queue
            - termination:
                maxRetries: 3
                ttl: 3
                timeout: 7
              outputs:
              - delayValidation: true
                toEnv: toEnv
                description: description
                isOptional: true
                type: type
                isList: true
                isFlag: true
                argFormat: argFormat
                name: name
                options:
                - "{}"
                - "{}"
                connection: connection
                toInit: true
                value: "{}"
                validation:
                  multipleOf: 0
                  maxItems: 8
                  excludes:
                  - "{}"
                  - "{}"
                  keys:
                  - keys
                  - keys
                  minLength: 5
                  lt: 7
                  maxDigits: 0
                  containsKeys:
                  - containsKeys
                  - containsKeys
                  gt: 1
                  minItems: 6
                  regex: regex
                  contains:
                  - "{}"
                  - "{}"
                  delay: true
                  decimalPlaces: 7
                  excludesKeys:
                  - excludesKeys
                  - excludesKeys
                  minDigits: 9
                  options:
                  - "{}"
                  - "{}"
                  le: 9
                  ge: 4
                  maxLength: 4
              - delayValidation: true
                toEnv: toEnv
                description: description
                isOptional: true
                type: type
                isList: true
                isFlag: true
                argFormat: argFormat
                name: name
                options:
                - "{}"
                - "{}"
                connection: connection
                toInit: true
                value: "{}"
                validation:
                  multipleOf: 0
                  maxItems: 8
                  excludes:
                  - "{}"
                  - "{}"
                  keys:
                  - keys
                  - keys
                  minLength: 5
                  lt: 7
                  maxDigits: 0
                  containsKeys:
                  - containsKeys
                  - containsKeys
                  gt: 1
                  minItems: 6
                  regex: regex
                  contains:
                  - "{}"
                  - "{}"
                  delay: true
                  decimalPlaces: 7
                  excludesKeys:
                  - excludesKeys
                  - excludesKeys
                  minDigits: 9
                  options:
                  - "{}"
                  - "{}"
                  le: 9
                  ge: 4
                  maxLength: 4
              template:
                description: description
                fields:
                - fields
                - fields
                enabled: true
              cache:
                disable: true
                io:
                - io
                - io
                ttl: 7
                sections:
                - sections
                - sections
              cost: 4.459605
              kind: kind
              plugins:
                mountArtifactsStore: true
                syncStatuses: true
                auth: true
                collectResources: true
                collectLogs: true
                externalHost: true
                docker: true
                collectArtifacts: true
                logLevel: logLevel
                autoResume: true
                sidecar:
                  sleepInterval: 5
                  monitorSpec: true
                  image: image
                  imagePullPolicy: imagePullPolicy
                  syncInterval: 3
                  resources: "{}"
                  monitorLogs: true
                  imageTag: imageTag
                shm: true
                notifications:
                - trigger: null
                  connections:
                  - connections
                  - connections
                - trigger: null
                  connections:
                  - connections
                  - connections
              inputs:
              - delayValidation: true
                toEnv: toEnv
                description: description
                isOptional: true
                type: type
                isList: true
                isFlag: true
                argFormat: argFormat
                name: name
                options:
                - "{}"
                - "{}"
                connection: connection
                toInit: true
                value: "{}"
                validation:
                  multipleOf: 0
                  maxItems: 8
                  excludes:
                  - "{}"
                  - "{}"
                  keys:
                  - keys
                  - keys
                  minLength: 5
                  lt: 7
                  maxDigits: 0
                  containsKeys:
                  - containsKeys
                  - containsKeys
                  gt: 1
                  minItems: 6
                  regex: regex
                  contains:
                  - "{}"
                  - "{}"
                  delay: true
                  decimalPlaces: 7
                  excludesKeys:
                  - excludesKeys
                  - excludesKeys
                  minDigits: 9
                  options:
                  - "{}"
                  - "{}"
                  le: 9
                  ge: 4
                  maxLength: 4
              - delayValidation: true
                toEnv: toEnv
                description: description
                isOptional: true
                type: type
                isList: true
                isFlag: true
                argFormat: argFormat
                name: name
                options:
                - "{}"
                - "{}"
                connection: connection
                toInit: true
                value: "{}"
                validation:
                  multipleOf: 0
                  maxItems: 8
                  excludes:
                  - "{}"
                  - "{}"
                  keys:
                  - keys
                  - keys
                  minLength: 5
                  lt: 7
                  maxDigits: 0
                  containsKeys:
                  - containsKeys
                  - containsKeys
                  gt: 1
                  minItems: 6
                  regex: regex
                  contains:
                  - "{}"
                  - "{}"
                  delay: true
                  decimalPlaces: 7
                  excludesKeys:
                  - excludesKeys
                  - excludesKeys
                  minDigits: 9
                  options:
                  - "{}"
                  - "{}"
                  le: 9
                  ge: 4
                  maxLength: 4
              description: description
              run: "{}"
              version: 4.2587733
              tags:
              - tags
              - tags
              presets:
              - presets
              - presets
              build:
                cache:
                  disable: true
                  io:
                  - io
                  - io
                  ttl: 7
                  sections:
                  - sections
                  - sections
                presets:
                - presets
                - presets
                runPatch: "{}"
                hubRef: hubRef
                namespace: namespace
                connection: connection
                patchStrategy: null
                params:
                  key:
                    ref: ref
                    toEnv: toEnv
                    contextOnly: true
                    connection: connection
                    toInit: true
                    value: "{}"
                queue: queue
              name: name
              namespace: namespace
              isApproved: true
              hooks:
              - presets:
                - presets
                - presets
                hubRef: hubRef
                namespace: namespace
                disableDefaults: true
                connection: connection
                trigger: null
                conditions: conditions
                params:
                  key:
                    ref: ref
                    toEnv: toEnv
                    contextOnly: true
                    connection: connection
                    toInit: true
                    value: "{}"
                queue: queue
              - presets:
                - presets
                - presets
                hubRef: hubRef
                namespace: namespace
                disableDefaults: true
                connection: connection
                trigger: null
                conditions: conditions
                params:
                  key:
                    ref: ref
                    toEnv: toEnv
                    contextOnly: true
                    connection: connection
                    toInit: true
                    value: "{}"
                queue: queue
              queue: queue
            environment:
              nodeName: nodeName
              dnsPolicy: dnsPolicy
              serviceAccountName: serviceAccountName
              hostNetwork: true
              dnsConfig: "{}"
              imagePullSecrets:
              - imagePullSecrets
              - imagePullSecrets
              priorityClassName: priorityClassName
              annotations:
                key: annotations
              hostAliases:
              - null
              - null
              securityContext: "{}"
              priority: 3
              restartPolicy: restartPolicy
              labels:
                key: labels
              nodeSelector:
                key: nodeSelector
              tolerations:
              - null
              - null
              schedulerName: schedulerName
              affinity: "{}"
              hostPID: hostPID
            operations:
            - joins:
                key:
                  ref: ref
                  offset: 0
                  query: query
                  limit: 4
                  sort: sort
                  params:
                    key:
                      toEnv: toEnv
                      contextOnly: true
                      connection: connection
                      toInit: true
                      value: value
              template:
                description: description
                fields:
                - fields
                - fields
                enabled: true
              dagRef: dagRef
              plugins:
                mountArtifactsStore: true
                syncStatuses: true
                auth: true
                collectResources: true
                collectLogs: true
                externalHost: true
                docker: true
                collectArtifacts: true
                logLevel: logLevel
                autoResume: true
                sidecar:
                  sleepInterval: 5
                  monitorSpec: true
                  image: image
                  imagePullPolicy: imagePullPolicy
                  syncInterval: 3
                  resources: "{}"
                  monitorLogs: true
                  imageTag: imageTag
                shm: true
                notifications:
                - trigger: null
                  connections:
                  - connections
                  - connections
                - trigger: null
                  connections:
                  - connections
                  - connections
              hubRef: hubRef
              description: description
              matrix: "{}"
              isApproved: true
              hooks:
              - presets:
                - presets
                - presets
                hubRef: hubRef
                namespace: namespace
                disableDefaults: true
                connection: connection
                trigger: null
                conditions: conditions
                params:
                  key:
                    ref: ref
                    toEnv: toEnv
                    contextOnly: true
                    connection: connection
                    toInit: true
                    value: "{}"
                queue: queue
              - presets:
                - presets
                - presets
                hubRef: hubRef
                namespace: namespace
                disableDefaults: true
                connection: connection
                trigger: null
                conditions: conditions
                params:
                  key:
                    ref: ref
                    toEnv: toEnv
                    contextOnly: true
                    connection: connection
                    toInit: true
                    value: "{}"
                queue: queue
              events:
              - ref: ref
                kinds:
                - null
                - null
              - ref: ref
                kinds:
                - null
                - null
              termination:
                maxRetries: 3
                ttl: 3
                timeout: 7
              cache:
                disable: true
                io:
                - io
                - io
                ttl: 7
                sections:
                - sections
                - sections
              cost: 6.628464
              kind: kind
              isPreset: true
              trigger: null
              params:
                key:
                  ref: ref
                  toEnv: toEnv
                  contextOnly: true
                  connection: connection
                  toInit: true
                  value: "{}"
              version: 8.969579
              tags:
              - tags
              - tags
              dependencies:
              - dependencies
              - dependencies
              schedule: "{}"
              component:
                termination:
                  maxRetries: 3
                  ttl: 3
                  timeout: 7
                outputs:
                - delayValidation: true
                  toEnv: toEnv
                  description: description
                  isOptional: true
                  type: type
                  isList: true
                  isFlag: true
                  argFormat: argFormat
                  name: name
                  options:
                  - "{}"
                  - "{}"
                  connection: connection
                  toInit: true
                  value: "{}"
                  validation:
                    multipleOf: 0
                    maxItems: 8
                    excludes:
                    - "{}"
                    - "{}"
                    keys:
                    - keys
                    - keys
                    minLength: 5
                    lt: 7
                    maxDigits: 0
                    containsKeys:
                    - containsKeys
                    - containsKeys
                    gt: 1
                    minItems: 6
                    regex: regex
                    contains:
                    - "{}"
                    - "{}"
                    delay: true
                    decimalPlaces: 7
                    excludesKeys:
                    - excludesKeys
                    - excludesKeys
                    minDigits: 9
                    options:
                    - "{}"
                    - "{}"
                    le: 9
                    ge: 4
                    maxLength: 4
                - delayValidation: true
                  toEnv: toEnv
                  description: description
                  isOptional: true
                  type: type
                  isList: true
                  isFlag: true
                  argFormat: argFormat
                  name: name
                  options:
                  - "{}"
                  - "{}"
                  connection: connection
                  toInit: true
                  value: "{}"
                  validation:
                    multipleOf: 0
                    maxItems: 8
                    excludes:
                    - "{}"
                    - "{}"
                    keys:
                    - keys
                    - keys
                    minLength: 5
                    lt: 7
                    maxDigits: 0
                    containsKeys:
                    - containsKeys
                    - containsKeys
                    gt: 1
                    minItems: 6
                    regex: regex
                    contains:
                    - "{}"
                    - "{}"
                    delay: true
                    decimalPlaces: 7
                    excludesKeys:
                    - excludesKeys
                    - excludesKeys
                    minDigits: 9
                    options:
                    - "{}"
                    - "{}"
                    le: 9
                    ge: 4
                    maxLength: 4
                template:
                  description: description
                  fields:
                  - fields
                  - fields
                  enabled: true
                cache:
                  disable: true
                  io:
                  - io
                  - io
                  ttl: 7
                  sections:
                  - sections
                  - sections
                cost: 4.459605
                kind: kind
                plugins:
                  mountArtifactsStore: true
                  syncStatuses: true
                  auth: true
                  collectResources: true
                  collectLogs: true
                  externalHost: true
                  docker: true
                  collectArtifacts: true
                  logLevel: logLevel
                  autoResume: true
                  sidecar:
                    sleepInterval: 5
                    monitorSpec: true
                    image: image
                    imagePullPolicy: imagePullPolicy
                    syncInterval: 3
                    resources: "{}"
                    monitorLogs: true
                    imageTag: imageTag
                  shm: true
                  notifications:
                  - trigger: null
                    connections:
                    - connections
                    - connections
                  - trigger: null
                    connections:
                    - connections
                    - connections
                inputs:
                - delayValidation: true
                  toEnv: toEnv
                  description: description
                  isOptional: true
                  type: type
                  isList: true
                  isFlag: true
                  argFormat: argFormat
                  name: name
                  options:
                  - "{}"
                  - "{}"
                  connection: connection
                  toInit: true
                  value: "{}"
                  validation:
                    multipleOf: 0
                    maxItems: 8
                    excludes:
                    - "{}"
                    - "{}"
                    keys:
                    - keys
                    - keys
                    minLength: 5
                    lt: 7
                    maxDigits: 0
                    containsKeys:
                    - containsKeys
                    - containsKeys
                    gt: 1
                    minItems: 6
                    regex: regex
                    contains:
                    - "{}"
                    - "{}"
                    delay: true
                    decimalPlaces: 7
                    excludesKeys:
                    - excludesKeys
                    - excludesKeys
                    minDigits: 9
                    options:
                    - "{}"
                    - "{}"
                    le: 9
                    ge: 4
                    maxLength: 4
                - delayValidation: true
                  toEnv: toEnv
                  description: description
                  isOptional: true
                  type: type
                  isList: true
                  isFlag: true
                  argFormat: argFormat
                  name: name
                  options:
                  - "{}"
                  - "{}"
                  connection: connection
                  toInit: true
                  value: "{}"
                  validation:
                    multipleOf: 0
                    maxItems: 8
                    excludes:
                    - "{}"
                    - "{}"
                    keys:
                    - keys
                    - keys
                    minLength: 5
                    lt: 7
                    maxDigits: 0
                    containsKeys:
                    - containsKeys
                    - containsKeys
                    gt: 1
                    minItems: 6
                    regex: regex
                    contains:
                    - "{}"
                    - "{}"
                    delay: true
                    decimalPlaces: 7
                    excludesKeys:
                    - excludesKeys
                    - excludesKeys
                    minDigits: 9
                    options:
                    - "{}"
                    - "{}"
                    le: 9
                    ge: 4
                    maxLength: 4
                description: description
                run: "{}"
                version: 4.2587733
                tags:
                - tags
                - tags
                presets:
                - presets
                - presets
                build:
                  cache:
                    disable: true
                    io:
                    - io
                    - io
                    ttl: 7
                    sections:
                    - sections
                    - sections
                  presets:
                  - presets
                  - presets
                  runPatch: "{}"
                  hubRef: hubRef
                  namespace: namespace
                  connection: connection
                  patchStrategy: null
                  params:
                    key:
                      ref: ref
                      toEnv: toEnv
                      contextOnly: true
                      connection: connection
                      toInit: true
                      value: "{}"
                  queue: queue
                name: name
                namespace: namespace
                isApproved: true
                hooks:
                - presets:
                  - presets
                  - presets
                  hubRef: hubRef
                  namespace: namespace
                  disableDefaults: true
                  connection: connection
                  trigger: null
                  conditions: conditions
                  params:
                    key:
                      ref: ref
                      toEnv: toEnv
                      contextOnly: true
                      connection: connection
                      toInit: true
                      value: "{}"
                  queue: queue
                - presets:
                  - presets
                  - presets
                  hubRef: hubRef
                  namespace: namespace
                  disableDefaults: true
                  connection: connection
                  trigger: null
                  conditions: conditions
                  params:
                    key:
                      ref: ref
                      toEnv: toEnv
                      contextOnly: true
                      connection: connection
                      toInit: true
                      value: "{}"
                  queue: queue
                queue: queue
              presets:
              - presets
              - presets
              skipOnUpstreamSkip: true
              runPatch: "{}"
              build:
                cache:
                  disable: true
                  io:
                  - io
                  - io
                  ttl: 7
                  sections:
                  - sections
                  - sections
                presets:
                - presets
                - presets
                runPatch: "{}"
                hubRef: hubRef
                namespace: namespace
                connection: connection
                patchStrategy: null
                params:
                  key:
                    ref: ref
                    toEnv: toEnv
                    contextOnly: true
                    connection: connection
                    toInit: true
                    value: "{}"
                queue: queue
              name: name
              namespace: namespace
              patchStrategy: null
              urlRef: urlRef
              conditions: conditions
              pathRef: pathRef
              queue: queue
            - joins:
                key:
                  ref: ref
                  offset: 0
                  query: query
                  limit: 4
                  sort: sort
                  params:
                    key:
                      toEnv: toEnv
                      contextOnly: true
                      connection: connection
                      toInit: true
                      value: value
              template:
                description: description
                fields:
                - fields
                - fields
                enabled: true
              dagRef: dagRef
              plugins:
                mountArtifactsStore: true
                syncStatuses: true
                auth: true
                collectResources: true
                collectLogs: true
                externalHost: true
                docker: true
                collectArtifacts: true
                logLevel: logLevel
                autoResume: true
                sidecar:
                  sleepInterval: 5
                  monitorSpec: true
                  image: image
                  imagePullPolicy: imagePullPolicy
                  syncInterval: 3
                  resources: "{}"
                  monitorLogs: true
                  imageTag: imageTag
                shm: true
                notifications:
                - trigger: null
                  connections:
                  - connections
                  - connections
                - trigger: null
                  connections:
                  - connections
                  - connections
              hubRef: hubRef
              description: description
              matrix: "{}"
              isApproved: true
              hooks:
              - presets:
                - presets
                - presets
                hubRef: hubRef
                namespace: namespace
                disableDefaults: true
                connection: connection
                trigger: null
                conditions: conditions
                params:
                  key:
                    ref: ref
                    toEnv: toEnv
                    contextOnly: true
                    connection: connection
                    toInit: true
                    value: "{}"
                queue: queue
              - presets:
                - presets
                - presets
                hubRef: hubRef
                namespace: namespace
                disableDefaults: true
                connection: connection
                trigger: null
                conditions: conditions
                params:
                  key:
                    ref: ref
                    toEnv: toEnv
                    contextOnly: true
                    connection: connection
                    toInit: true
                    value: "{}"
                queue: queue
              events:
              - ref: ref
                kinds:
                - null
                - null
              - ref: ref
                kinds:
                - null
                - null
              termination:
                maxRetries: 3
                ttl: 3
                timeout: 7
              cache:
                disable: true
                io:
                - io
                - io
                ttl: 7
                sections:
                - sections
                - sections
              cost: 6.628464
              kind: kind
              isPreset: true
              trigger: null
              params:
                key:
                  ref: ref
                  toEnv: toEnv
                  contextOnly: true
                  connection: connection
                  toInit: true
                  value: "{}"
              version: 8.969579
              tags:
              - tags
              - tags
              dependencies:
              - dependencies
              - dependencies
              schedule: "{}"
              component:
                termination:
                  maxRetries: 3
                  ttl: 3
                  timeout: 7
                outputs:
                - delayValidation: true
                  toEnv: toEnv
                  description: description
                  isOptional: true
                  type: type
                  isList: true
                  isFlag: true
                  argFormat: argFormat
                  name: name
                  options:
                  - "{}"
                  - "{}"
                  connection: connection
                  toInit: true
                  value: "{}"
                  validation:
                    multipleOf: 0
                    maxItems: 8
                    excludes:
                    - "{}"
                    - "{}"
                    keys:
                    - keys
                    - keys
                    minLength: 5
                    lt: 7
                    maxDigits: 0
                    containsKeys:
                    - containsKeys
                    - containsKeys
                    gt: 1
                    minItems: 6
                    regex: regex
                    contains:
                    - "{}"
                    - "{}"
                    delay: true
                    decimalPlaces: 7
                    excludesKeys:
                    - excludesKeys
                    - excludesKeys
                    minDigits: 9
                    options:
                    - "{}"
                    - "{}"
                    le: 9
                    ge: 4
                    maxLength: 4
                - delayValidation: true
                  toEnv: toEnv
                  description: description
                  isOptional: true
                  type: type
                  isList: true
                  isFlag: true
                  argFormat: argFormat
                  name: name
                  options:
                  - "{}"
                  - "{}"
                  connection: connection
                  toInit: true
                  value: "{}"
                  validation:
                    multipleOf: 0
                    maxItems: 8
                    excludes:
                    - "{}"
                    - "{}"
                    keys:
                    - keys
                    - keys
                    minLength: 5
                    lt: 7
                    maxDigits: 0
                    containsKeys:
                    - containsKeys
                    - containsKeys
                    gt: 1
                    minItems: 6
                    regex: regex
                    contains:
                    - "{}"
                    - "{}"
                    delay: true
                    decimalPlaces: 7
                    excludesKeys:
                    - excludesKeys
                    - excludesKeys
                    minDigits: 9
                    options:
                    - "{}"
                    - "{}"
                    le: 9
                    ge: 4
                    maxLength: 4
                template:
                  description: description
                  fields:
                  - fields
                  - fields
                  enabled: true
                cache:
                  disable: true
                  io:
                  - io
                  - io
                  ttl: 7
                  sections:
                  - sections
                  - sections
                cost: 4.459605
                kind: kind
                plugins:
                  mountArtifactsStore: true
                  syncStatuses: true
                  auth: true
                  collectResources: true
                  collectLogs: true
                  externalHost: true
                  docker: true
                  collectArtifacts: true
                  logLevel: logLevel
                  autoResume: true
                  sidecar:
                    sleepInterval: 5
                    monitorSpec: true
                    image: image
                    imagePullPolicy: imagePullPolicy
                    syncInterval: 3
                    resources: "{}"
                    monitorLogs: true
                    imageTag: imageTag
                  shm: true
                  notifications:
                  - trigger: null
                    connections:
                    - connections
                    - connections
                  - trigger: null
                    connections:
                    - connections
                    - connections
                inputs:
                - delayValidation: true
                  toEnv: toEnv
                  description: description
                  isOptional: true
                  type: type
                  isList: true
                  isFlag: true
                  argFormat: argFormat
                  name: name
                  options:
                  - "{}"
                  - "{}"
                  connection: connection
                  toInit: true
                  value: "{}"
                  validation:
                    multipleOf: 0
                    maxItems: 8
                    excludes:
                    - "{}"
                    - "{}"
                    keys:
                    - keys
                    - keys
                    minLength: 5
                    lt: 7
                    maxDigits: 0
                    containsKeys:
                    - containsKeys
                    - containsKeys
                    gt: 1
                    minItems: 6
                    regex: regex
                    contains:
                    - "{}"
                    - "{}"
                    delay: true
                    decimalPlaces: 7
                    excludesKeys:
                    - excludesKeys
                    - excludesKeys
                    minDigits: 9
                    options:
                    - "{}"
                    - "{}"
                    le: 9
                    ge: 4
                    maxLength: 4
                - delayValidation: true
                  toEnv: toEnv
                  description: description
                  isOptional: true
                  type: type
                  isList: true
                  isFlag: true
                  argFormat: argFormat
                  name: name
                  options:
                  - "{}"
                  - "{}"
                  connection: connection
                  toInit: true
                  value: "{}"
                  validation:
                    multipleOf: 0
                    maxItems: 8
                    excludes:
                    - "{}"
                    - "{}"
                    keys:
                    - keys
                    - keys
                    minLength: 5
                    lt: 7
                    maxDigits: 0
                    containsKeys:
                    - containsKeys
                    - containsKeys
                    gt: 1
                    minItems: 6
                    regex: regex
                    contains:
                    - "{}"
                    - "{}"
                    delay: true
                    decimalPlaces: 7
                    excludesKeys:
                    - excludesKeys
                    - excludesKeys
                    minDigits: 9
                    options:
                    - "{}"
                    - "{}"
                    le: 9
                    ge: 4
                    maxLength: 4
                description: description
                run: "{}"
                version: 4.2587733
                tags:
                - tags
                - tags
                presets:
                - presets
                - presets
                build:
                  cache:
                    disable: true
                    io:
                    - io
                    - io
                    ttl: 7
                    sections:
                    - sections
                    - sections
                  presets:
                  - presets
                  - presets
                  runPatch: "{}"
                  hubRef: hubRef
                  namespace: namespace
                  connection: connection
                  patchStrategy: null
                  params:
                    key:
                      ref: ref
                      toEnv: toEnv
                      contextOnly: true
                      connection: connection
                      toInit: true
                      value: "{}"
                  queue: queue
                name: name
                namespace: namespace
                isApproved: true
                hooks:
                - presets:
                  - presets
                  - presets
                  hubRef: hubRef
                  namespace: namespace
                  disableDefaults: true
                  connection: connection
                  trigger: null
                  conditions: conditions
                  params:
                    key:
                      ref: ref
                      toEnv: toEnv
                      contextOnly: true
                      connection: connection
                      toInit: true
                      value: "{}"
                  queue: queue
                - presets:
                  - presets
                  - presets
                  hubRef: hubRef
                  namespace: namespace
                  disableDefaults: true
                  connection: connection
                  trigger: null
                  conditions: conditions
                  params:
                    key:
                      ref: ref
                      toEnv: toEnv
                      contextOnly: true
                      connection: connection
                      toInit: true
                      value: "{}"
                  queue: queue
                queue: queue
              presets:
              - presets
              - presets
              skipOnUpstreamSkip: true
              runPatch: "{}"
              build:
                cache:
                  disable: true
                  io:
                  - io
                  - io
                  ttl: 7
                  sections:
                  - sections
                  - sections
                presets:
                - presets
                - presets
                runPatch: "{}"
                hubRef: hubRef
                namespace: namespace
                connection: connection
                patchStrategy: null
                params:
                  key:
                    ref: ref
                    toEnv: toEnv
                    contextOnly: true
                    connection: connection
                    toInit: true
                    value: "{}"
                queue: queue
              name: name
              namespace: namespace
              patchStrategy: null
              urlRef: urlRef
              conditions: conditions
              pathRef: pathRef
              queue: queue
            kind: dag
            volumes:
            - null
            - null
            earlyStopping:
            - "{}"
            - "{}"
            connections:
            - connections
            - connections
            concurrency: 3
          pytorchJob:
            cleanPodPolicy: null
            nProcPerNode: nProcPerNode
            elasticPolicy:
              maxReplicas: 6
              rdvzId: rdvzId
              rdvzConf:
              - "{}"
              - "{}"
              nProcPerNode: 8
              Metrics:
              - "{}"
              - "{}"
              minReplicas: 8
              maxRestarts: 9
              rdvzHost: rdvzHost
              rdvzBackend: rdvzBackend
              standalone: true
              rdvzPort: 4
            kind: pytorchjob
            worker:
              container: "{}"
              init:
              - modelRef: modelRef
                container: "{}"
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: revision
                file:
                  filename: filename
                  kind: kind
                  chmod: chmod
                  content: content
                tensorboard:
                  port: 6
                  plugins: plugins
                  use_names: true
                  uuids:
                  - uuids
                  - uuids
                  path_prefix: path_prefix
                artifactRef: artifactRef
                paths:
                - "{}"
                - "{}"
                dockerfile:
                  image: image
                  gid: 0
                  workdirPath: workdirPath
                  run:
                  - run
                  - run
                  env:
                    key: env
                  path:
                  - path
                  - path
                  uid: 7
                  filename: filename
                  workdir: workdir
                  shell: shell
                  post_run_copy:
                  - "{}"
                  - "{}"
                  langEnv: langEnv
                  copy:
                  - "{}"
                  - "{}"
                  username: 7
                connection: connection
                lineageRef: lineageRef
                artifacts:
                  files:
                  - "{}"
                  - "{}"
                  dirs:
                  - "{}"
                  - "{}"
                  workers: 3
              - modelRef: modelRef
                container: "{}"
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: revision
                file:
                  filename: filename
                  kind: kind
                  chmod: chmod
                  content: content
                tensorboard:
                  port: 6
                  plugins: plugins
                  use_names: true
                  uuids:
                  - uuids
                  - uuids
                  path_prefix: path_prefix
                artifactRef: artifactRef
                paths:
                - "{}"
                - "{}"
                dockerfile:
                  image: image
                  gid: 0
                  workdirPath: workdirPath
                  run:
                  - run
                  - run
                  env:
                    key: env
                  path:
                  - path
                  - path
                  uid: 7
                  filename: filename
                  workdir: workdir
                  shell: shell
                  post_run_copy:
                  - "{}"
                  - "{}"
                  langEnv: langEnv
                  copy:
                  - "{}"
                  - "{}"
                  username: 7
                connection: connection
                lineageRef: lineageRef
                artifacts:
                  files:
                  - "{}"
                  - "{}"
                  dirs:
                  - "{}"
                  - "{}"
                  workers: 3
              sidecars:
              - null
              - null
              environment:
                nodeName: nodeName
                dnsPolicy: dnsPolicy
                serviceAccountName: serviceAccountName
                hostNetwork: true
                dnsConfig: "{}"
                imagePullSecrets:
                - imagePullSecrets
                - imagePullSecrets
                priorityClassName: priorityClassName
                annotations:
                  key: annotations
                hostAliases:
                - null
                - null
                securityContext: "{}"
                priority: 3
                restartPolicy: restartPolicy
                labels:
                  key: labels
                nodeSelector:
                  key: nodeSelector
                tolerations:
                - null
                - null
                schedulerName: schedulerName
                affinity: "{}"
                hostPID: hostPID
              replicas: 1
              volumes:
              - null
              - null
              connections:
              - connections
              - connections
            schedulingPolicy:
              minAvailable: 0
              priorityClass: priorityClass
              scheduleTimeoutSeconds: 2
              minResources: "{}"
              queue: queue
            master:
              container: "{}"
              init:
              - modelRef: modelRef
                container: "{}"
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: revision
                file:
                  filename: filename
                  kind: kind
                  chmod: chmod
                  content: content
                tensorboard:
                  port: 6
                  plugins: plugins
                  use_names: true
                  uuids:
                  - uuids
                  - uuids
                  path_prefix: path_prefix
                artifactRef: artifactRef
                paths:
                - "{}"
                - "{}"
                dockerfile:
                  image: image
                  gid: 0
                  workdirPath: workdirPath
                  run:
                  - run
                  - run
                  env:
                    key: env
                  path:
                  - path
                  - path
                  uid: 7
                  filename: filename
                  workdir: workdir
                  shell: shell
                  post_run_copy:
                  - "{}"
                  - "{}"
                  langEnv: langEnv
                  copy:
                  - "{}"
                  - "{}"
                  username: 7
                connection: connection
                lineageRef: lineageRef
                artifacts:
                  files:
                  - "{}"
                  - "{}"
                  dirs:
                  - "{}"
                  - "{}"
                  workers: 3
              - modelRef: modelRef
                container: "{}"
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: revision
                file:
                  filename: filename
                  kind: kind
                  chmod: chmod
                  content: content
                tensorboard:
                  port: 6
                  plugins: plugins
                  use_names: true
                  uuids:
                  - uuids
                  - uuids
                  path_prefix: path_prefix
                artifactRef: artifactRef
                paths:
                - "{}"
                - "{}"
                dockerfile:
                  image: image
                  gid: 0
                  workdirPath: workdirPath
                  run:
                  - run
                  - run
                  env:
                    key: env
                  path:
                  - path
                  - path
                  uid: 7
                  filename: filename
                  workdir: workdir
                  shell: shell
                  post_run_copy:
                  - "{}"
                  - "{}"
                  langEnv: langEnv
                  copy:
                  - "{}"
                  - "{}"
                  username: 7
                connection: connection
                lineageRef: lineageRef
                artifacts:
                  files:
                  - "{}"
                  - "{}"
                  dirs:
                  - "{}"
                  - "{}"
                  workers: 3
              sidecars:
              - null
              - null
              environment:
                nodeName: nodeName
                dnsPolicy: dnsPolicy
                serviceAccountName: serviceAccountName
                hostNetwork: true
                dnsConfig: "{}"
                imagePullSecrets:
                - imagePullSecrets
                - imagePullSecrets
                priorityClassName: priorityClassName
                annotations:
                  key: annotations
                hostAliases:
                - null
                - null
                securityContext: "{}"
                priority: 3
                restartPolicy: restartPolicy
                labels:
                  key: labels
                nodeSelector:
                  key: nodeSelector
                tolerations:
                - null
                - null
                schedulerName: schedulerName
                affinity: "{}"
                hostPID: hostPID
              replicas: 1
              volumes:
              - null
              - null
              connections:
              - connections
              - connections
          job:
            container: "{}"
            init:
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            - modelRef: modelRef
              container: "{}"
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: revision
              file:
                filename: filename
                kind: kind
                chmod: chmod
                content: content
              tensorboard:
                port: 6
                plugins: plugins
                use_names: true
                uuids:
                - uuids
                - uuids
                path_prefix: path_prefix
              artifactRef: artifactRef
              paths:
              - "{}"
              - "{}"
              dockerfile:
                image: image
                gid: 0
                workdirPath: workdirPath
                run:
                - run
                - run
                env:
                  key: env
                path:
                - path
                - path
                uid: 7
                filename: filename
                workdir: workdir
                shell: shell
                post_run_copy:
                - "{}"
                - "{}"
                langEnv: langEnv
                copy:
                - "{}"
                - "{}"
                username: 7
              connection: connection
              lineageRef: lineageRef
              artifacts:
                files:
                - "{}"
                - "{}"
                dirs:
                - "{}"
                - "{}"
                workers: 3
            sidecars:
            - null
            - null
            environment:
              nodeName: nodeName
              dnsPolicy: dnsPolicy
              serviceAccountName: serviceAccountName
              hostNetwork: true
              dnsConfig: "{}"
              imagePullSecrets:
              - imagePullSecrets
              - imagePullSecrets
              priorityClassName: priorityClassName
              annotations:
                key: annotations
              hostAliases:
              - null
              - null
              securityContext: "{}"
              priority: 3
              restartPolicy: restartPolicy
              labels:
                key: labels
              nodeSelector:
                key: nodeSelector
              tolerations:
              - null
              - null
              schedulerName: schedulerName
              affinity: "{}"
              hostPID: hostPID
            kind: job
            volumes:
            - null
            - null
            connections:
            - connections
            - connections
          mpiJob:
            cleanPodPolicy: null
            slotsPerWorker: 1
            kind: mpijob
            worker:
              container: "{}"
              init:
              - modelRef: modelRef
                container: "{}"
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: revision
                file:
                  filename: filename
                  kind: kind
                  chmod: chmod
                  content: content
                tensorboard:
                  port: 6
                  plugins: plugins
                  use_names: true
                  uuids:
                  - uuids
                  - uuids
                  path_prefix: path_prefix
                artifactRef: artifactRef
                paths:
                - "{}"
                - "{}"
                dockerfile:
                  image: image
                  gid: 0
                  workdirPath: workdirPath
                  run:
                  - run
                  - run
                  env:
                    key: env
                  path:
                  - path
                  - path
                  uid: 7
                  filename: filename
                  workdir: workdir
                  shell: shell
                  post_run_copy:
                  - "{}"
                  - "{}"
                  langEnv: langEnv
                  copy:
                  - "{}"
                  - "{}"
                  username: 7
                connection: connection
                lineageRef: lineageRef
                artifacts:
                  files:
                  - "{}"
                  - "{}"
                  dirs:
                  - "{}"
                  - "{}"
                  workers: 3
              - modelRef: modelRef
                container: "{}"
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: revision
                file:
                  filename: filename
                  kind: kind
                  chmod: chmod
                  content: content
                tensorboard:
                  port: 6
                  plugins: plugins
                  use_names: true
                  uuids:
                  - uuids
                  - uuids
                  path_prefix: path_prefix
                artifactRef: artifactRef
                paths:
                - "{}"
                - "{}"
                dockerfile:
                  image: image
                  gid: 0
                  workdirPath: workdirPath
                  run:
                  - run
                  - run
                  env:
                    key: env
                  path:
                  - path
                  - path
                  uid: 7
                  filename: filename
                  workdir: workdir
                  shell: shell
                  post_run_copy:
                  - "{}"
                  - "{}"
                  langEnv: langEnv
                  copy:
                  - "{}"
                  - "{}"
                  username: 7
                connection: connection
                lineageRef: lineageRef
                artifacts:
                  files:
                  - "{}"
                  - "{}"
                  dirs:
                  - "{}"
                  - "{}"
                  workers: 3
              sidecars:
              - null
              - null
              environment:
                nodeName: nodeName
                dnsPolicy: dnsPolicy
                serviceAccountName: serviceAccountName
                hostNetwork: true
                dnsConfig: "{}"
                imagePullSecrets:
                - imagePullSecrets
                - imagePullSecrets
                priorityClassName: priorityClassName
                annotations:
                  key: annotations
                hostAliases:
                - null
                - null
                securityContext: "{}"
                priority: 3
                restartPolicy: restartPolicy
                labels:
                  key: labels
                nodeSelector:
                  key: nodeSelector
                tolerations:
                - null
                - null
                schedulerName: schedulerName
                affinity: "{}"
                hostPID: hostPID
              replicas: 1
              volumes:
              - null
              - null
              connections:
              - connections
              - connections
            schedulingPolicy:
              minAvailable: 0
              priorityClass: priorityClass
              scheduleTimeoutSeconds: 2
              minResources: "{}"
              queue: queue
            launcher:
              container: "{}"
              init:
              - modelRef: modelRef
                container: "{}"
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: revision
                file:
                  filename: filename
                  kind: kind
                  chmod: chmod
                  content: content
                tensorboard:
                  port: 6
                  plugins: plugins
                  use_names: true
                  uuids:
                  - uuids
                  - uuids
                  path_prefix: path_prefix
                artifactRef: artifactRef
                paths:
                - "{}"
                - "{}"
                dockerfile:
                  image: image
                  gid: 0
                  workdirPath: workdirPath
                  run:
                  - run
                  - run
                  env:
                    key: env
                  path:
                  - path
                  - path
                  uid: 7
                  filename: filename
                  workdir: workdir
                  shell: shell
                  post_run_copy:
                  - "{}"
                  - "{}"
                  langEnv: langEnv
                  copy:
                  - "{}"
                  - "{}"
                  username: 7
                connection: connection
                lineageRef: lineageRef
                artifacts:
                  files:
                  - "{}"
                  - "{}"
                  dirs:
                  - "{}"
                  - "{}"
                  workers: 3
              - modelRef: modelRef
                container: "{}"
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: revision
                file:
                  filename: filename
                  kind: kind
                  chmod: chmod
                  content: content
                tensorboard:
                  port: 6
                  plugins: plugins
                  use_names: true
                  uuids:
                  - uuids
                  - uuids
                  path_prefix: path_prefix
                artifactRef: artifactRef
                paths:
                - "{}"
                - "{}"
                dockerfile:
                  image: image
                  gid: 0
                  workdirPath: workdirPath
                  run:
                  - run
                  - run
                  env:
                    key: env
                  path:
                  - path
                  - path
                  uid: 7
                  filename: filename
                  workdir: workdir
                  shell: shell
                  post_run_copy:
                  - "{}"
                  - "{}"
                  langEnv: langEnv
                  copy:
                  - "{}"
                  - "{}"
                  username: 7
                connection: connection
                lineageRef: lineageRef
                artifacts:
                  files:
                  - "{}"
                  - "{}"
                  dirs:
                  - "{}"
                  - "{}"
                  workers: 3
              sidecars:
              - null
              - null
              environment:
                nodeName: nodeName
                dnsPolicy: dnsPolicy
                serviceAccountName: serviceAccountName
                hostNetwork: true
                dnsConfig: "{}"
                imagePullSecrets:
                - imagePullSecrets
                - imagePullSecrets
                priorityClassName: priorityClassName
                annotations:
                  key: annotations
                hostAliases:
                - null
                - null
                securityContext: "{}"
                priority: 3
                restartPolicy: restartPolicy
                labels:
                  key: labels
                nodeSelector:
                  key: nodeSelector
                tolerations:
                - null
                - null
                schedulerName: schedulerName
                affinity: "{}"
                hostPID: hostPID
              replicas: 1
              volumes:
              - null
              - null
              connections:
              - connections
              - connections
        hpParams:
          normal:
            kind: normal
            value: "{}"
          lognormal:
            kind: lognormal
            value: "{}"
          daterange:
            kind: daterange
            value: "{}"
          pchoice:
            kind: pchoice
            value: "{}"
          range:
            kind: range
            value: "{}"
          quniform:
            kind: quniform
            value: "{}"
          datetimerange:
            kind: datetimerange
            value: "{}"
          qlognormal:
            kind: qlognormal
            value: "{}"
          uniform:
            kind: uniform
            value: "{}"
          geomspace:
            kind: geomspace
            value: "{}"
          loguniform:
            kind: loguniform
            value: "{}"
          qloguniform:
            kind: qloguniform
            value: "{}"
          choice:
            kind: choice
            value: "{}"
          logspace:
            kind: logspace
            value: "{}"
          linspace:
            kind: linspace
            value: "{}"
          qnormal:
            kind: qnormal
            value: "{}"
        scheduleKind: null
        eventType:
          kind: null
          name: name
        matrix:
          random:
            seed: 1
            numRuns: 1
            kind: random
            params:
              key: "{}"
            earlyStopping:
            - "{}"
            - "{}"
            concurrency: 1
          hyperband:
            resume: true
            maxIterations: 4
            eta: 5
            tuner:
              presets:
              - presets
              - presets
              hubRef: hubRef
              namespace: namespace
              params:
                key:
                  ref: ref
                  toEnv: toEnv
                  contextOnly: true
                  connection: connection
                  toInit: true
                  value: "{}"
              queue: queue
            seed: 9
            resource:
              name: name
              type: null
            metric:
              optimization: null
              name: name
            kind: hyperband
            params:
              key: "{}"
            earlyStopping:
            - "{}"
            - "{}"
            concurrency: 9
          mapping:
            kind: mapping
            values:
            - "{}"
            - "{}"
            earlyStopping:
            - "{}"
            - "{}"
            concurrency: 6
          grid:
            seed: 7
            numRuns: 6
            kind: grid
            params:
              key: "{}"
            earlyStopping:
            - "{}"
            - "{}"
            concurrency: 1
          hyperopt:
            maxIterations: 6
            tuner:
              presets:
              - presets
              - presets
              hubRef: hubRef
              namespace: namespace
              params:
                key:
                  ref: ref
                  toEnv: toEnv
                  contextOnly: true
                  connection: connection
                  toInit: true
                  value: "{}"
              queue: queue
            seed: 1
            numRuns: 3
            metric:
              optimization: null
              name: name
            kind: hyperopt
            params:
              key: "{}"
            earlyStopping:
            - "{}"
            - "{}"
            algorithm: null
            concurrency: 2
          iterative:
            maxIterations: 6
            tuner:
              presets:
              - presets
              - presets
              hubRef: hubRef
              namespace: namespace
              params:
                key:
                  ref: ref
                  toEnv: toEnv
                  contextOnly: true
                  connection: connection
                  toInit: true
                  value: "{}"
              queue: queue
            seed: 6
            kind: iterative
            params:
              key: "{}"
            earlyStopping:
            - "{}"
            - "{}"
            concurrency: 5
          bayes:
            maxIterations: 8
            tuner:
              presets:
              - presets
              - presets
              hubRef: hubRef
              namespace: namespace
              params:
                key:
                  ref: ref
                  toEnv: toEnv
                  contextOnly: true
                  connection: connection
                  toInit: true
                  value: "{}"
              queue: queue
            seed: 9
            metric:
              optimization: null
              name: name
            kind: bayes
            numInitialRuns: 6
            utilityFunction: "{}"
            params:
              key: "{}"
            earlyStopping:
            - "{}"
            - "{}"
            concurrency: 6
        artifactsMount:
          paths:
          - paths
          - paths
          name: name
        uri:
          password: password
          host: true
          user: user
        wasb:
          container: container
          path: true
          storageAccount: storageAccount
        reference:
          dagRef:
            kind: dag_ref
            name: name
          hubRef:
            kind: hub_ref
            name: name
          urlRef:
            kind: url_ref
            url: url
          pathRef:
            path: path
            kind: path_ref
        schedule:
          cron:
            cron: cron
            dependsOnPast: true
            maxRuns: 3
            kind: cron
            endAt: 2000-01-23T04:56:07.000+00:00
            startAt: 2000-01-23T04:56:07.000+00:00
          datetime:
            kind: datetime
            startAt: 2000-01-23T04:56:07.000+00:00
          interval:
            dependsOnPast: true
            maxRuns: 9
            kind: interval
            endAt: 2000-01-23T04:56:07.000+00:00
            startAt: 2000-01-23T04:56:07.000+00:00
            frequency: 5
        polyaxonSidecarContainer:
          sleepInterval: 5
          monitorSpec: true
          image: image
          imagePullPolicy: imagePullPolicy
          syncInterval: 3
          resources: "{}"
          monitorLogs: true
          imageTag: imageTag
        artifacs:
          files:
          - "{}"
          - "{}"
          dirs:
          - "{}"
          - "{}"
          workers: 3
        gcs:
          bucket: bucket
          blob: blob
        matrixKind: null
        connection:
          schema: "{}"
          kind: null
          configMap:
            mountPath: mountPath
            defaultMode: 7
            name: name
            items:
            - items
            - items
          name: name
          description: description
          annotations:
            key: annotations
          secret:
            mountPath: mountPath
            defaultMode: 7
            name: name
            items:
            - items
            - items
          env:
          - "{}"
          - "{}"
          tags: tags
        polyaxonInitContainer:
          image: image
          imagePullPolicy: imagePullPolicy
          resources: "{}"
          imageTag: imageTag
        event:
          image:
            path: path
            colorspace: 8
            width: 3
            height: 2
          curve:
            annotation: annotation
            kind: null
            x:
            - 2.535259
            - 2.535259
            "y":
            - 6.173804
            - 6.173804
          video:
            path: path
            content_type: content_type
            colorspace: 0
            width: 9
            height: 2
          histogram:
            counts:
            - 0.4833312865174044
            - 0.4833312865174044
            values:
            - 4.518309517874243
            - 4.518309517874243
          artifact:
            path: path
            kind: null
          metric: 3.1497903
          step: 0
          html: html
          model:
            path: path
            framework: framework
            spec: "{}"
          audio:
            num_channels: 7
            path: path
            length_frames: 4
            sample_rate: 0.3526219
            content_type: content_type
          text: text
          dataframe:
            path: path
            content_type: content_type
          chart:
            figure: "{}"
            kind: null
          confusion:
            x:
            - "{}"
            - "{}"
            "y":
            - "{}"
            - "{}"
            z:
            - "{}"
            - "{}"
          timestamp: 2000-01-23T04:56:07.000+00:00
          span:
            outputs: "{}"
            metadata: "{}"
            finished_at: 2000-01-23T04:56:07.000+00:00
            children:
            - null
            - null
            inputs: "{}"
            kind: null
            name: name
            started_at: 2000-01-23T04:56:07.000+00:00
            uuid: uuid
            status_conditions:
            - reason: reason
              last_update_time: 2000-01-23T04:56:07.000+00:00
              meta_info: "{}"
              last_transition_time: 2000-01-23T04:56:07.000+00:00
              type: null
              message: message
              status: status
            - reason: reason
              last_update_time: 2000-01-23T04:56:07.000+00:00
              meta_info: "{}"
              last_transition_time: 2000-01-23T04:56:07.000+00:00
              type: null
              message: message
              status: status
            tags:
            - tags
            - tags
            status: null
        earlyStopping:
          median:
            minSamples: 1
            kind: median
            minInterval: 6
            evaluationInterval: 0
          metric:
            metric: metric
            optimization: null
            kind: metric_early_stopping
            value: value
            policy: "{}"
          failure:
            kind: failure_early_stopping
            percent: 7
          diff:
            minSamples: 7
            kind: kind
            minInterval: 2
            evaluationInterval: 5
            percent: 5.962134
          truncation:
            minSamples: 4
            includeSucceeded: true
            kind: truncation
            minInterval: 2
            evaluationInterval: 3
            percent: 9
        operation:
          joins:
            key:
              ref: ref
              offset: 0
              query: query
              limit: 4
              sort: sort
              params:
                key:
                  toEnv: toEnv
                  contextOnly: true
                  connection: connection
                  toInit: true
                  value: value
          template:
            description: description
            fields:
            - fields
            - fields
            enabled: true
          dagRef: dagRef
          plugins:
            mountArtifactsStore: true
            syncStatuses: true
            auth: true
            collectResources: true
            collectLogs: true
            externalHost: true
            docker: true
            collectArtifacts: true
            logLevel: logLevel
            autoResume: true
            sidecar:
              sleepInterval: 5
              monitorSpec: true
              image: image
              imagePullPolicy: imagePullPolicy
              syncInterval: 3
              resources: "{}"
              monitorLogs: true
              imageTag: imageTag
            shm: true
            notifications:
            - trigger: null
              connections:
              - connections
              - connections
            - trigger: null
              connections:
              - connections
              - connections
          hubRef: hubRef
          description: description
          matrix: "{}"
          isApproved: true
          hooks:
          - presets:
            - presets
            - presets
            hubRef: hubRef
            namespace: namespace
            disableDefaults: true
            connection: connection
            trigger: null
            conditions: conditions
            params:
              key:
                ref: ref
                toEnv: toEnv
                contextOnly: true
                connection: connection
                toInit: true
                value: "{}"
            queue: queue
          - presets:
            - presets
            - presets
            hubRef: hubRef
            namespace: namespace
            disableDefaults: true
            connection: connection
            trigger: null
            conditions: conditions
            params:
              key:
                ref: ref
                toEnv: toEnv
                contextOnly: true
                connection: connection
                toInit: true
                value: "{}"
            queue: queue
          events:
          - ref: ref
            kinds:
            - null
            - null
          - ref: ref
            kinds:
            - null
            - null
          termination:
            maxRetries: 3
            ttl: 3
            timeout: 7
          cache:
            disable: true
            io:
            - io
            - io
            ttl: 7
            sections:
            - sections
            - sections
          cost: 6.628464
          kind: kind
          isPreset: true
          trigger: null
          params:
            key:
              ref: ref
              toEnv: toEnv
              contextOnly: true
              connection: connection
              toInit: true
              value: "{}"
          version: 8.969579
          tags:
          - tags
          - tags
          dependencies:
          - dependencies
          - dependencies
          schedule: "{}"
          component:
            termination:
              maxRetries: 3
              ttl: 3
              timeout: 7
            outputs:
            - delayValidation: true
              toEnv: toEnv
              description: description
              isOptional: true
              type: type
              isList: true
              isFlag: true
              argFormat: argFormat
              name: name
              options:
              - "{}"
              - "{}"
              connection: connection
              toInit: true
              value: "{}"
              validation:
                multipleOf: 0
                maxItems: 8
                excludes:
                - "{}"
                - "{}"
                keys:
                - keys
                - keys
                minLength: 5
                lt: 7
                maxDigits: 0
                containsKeys:
                - containsKeys
                - containsKeys
                gt: 1
                minItems: 6
                regex: regex
                contains:
                - "{}"
                - "{}"
                delay: true
                decimalPlaces: 7
                excludesKeys:
                - excludesKeys
                - excludesKeys
                minDigits: 9
                options:
                - "{}"
                - "{}"
                le: 9
                ge: 4
                maxLength: 4
            - delayValidation: true
              toEnv: toEnv
              description: description
              isOptional: true
              type: type
              isList: true
              isFlag: true
              argFormat: argFormat
              name: name
              options:
              - "{}"
              - "{}"
              connection: connection
              toInit: true
              value: "{}"
              validation:
                multipleOf: 0
                maxItems: 8
                excludes:
                - "{}"
                - "{}"
                keys:
                - keys
                - keys
                minLength: 5
                lt: 7
                maxDigits: 0
                containsKeys:
                - containsKeys
                - containsKeys
                gt: 1
                minItems: 6
                regex: regex
                contains:
                - "{}"
                - "{}"
                delay: true
                decimalPlaces: 7
                excludesKeys:
                - excludesKeys
                - excludesKeys
                minDigits: 9
                options:
                - "{}"
                - "{}"
                le: 9
                ge: 4
                maxLength: 4
            template:
              description: description
              fields:
              - fields
              - fields
              enabled: true
            cache:
              disable: true
              io:
              - io
              - io
              ttl: 7
              sections:
              - sections
              - sections
            cost: 4.459605
            kind: kind
            plugins:
              mountArtifactsStore: true
              syncStatuses: true
              auth: true
              collectResources: true
              collectLogs: true
              externalHost: true
              docker: true
              collectArtifacts: true
              logLevel: logLevel
              autoResume: true
              sidecar:
                sleepInterval: 5
                monitorSpec: true
                image: image
                imagePullPolicy: imagePullPolicy
                syncInterval: 3
                resources: "{}"
                monitorLogs: true
                imageTag: imageTag
              shm: true
              notifications:
              - trigger: null
                connections:
                - connections
                - connections
              - trigger: null
                connections:
                - connections
                - connections
            inputs:
            - delayValidation: true
              toEnv: toEnv
              description: description
              isOptional: true
              type: type
              isList: true
              isFlag: true
              argFormat: argFormat
              name: name
              options:
              - "{}"
              - "{}"
              connection: connection
              toInit: true
              value: "{}"
              validation:
                multipleOf: 0
                maxItems: 8
                excludes:
                - "{}"
                - "{}"
                keys:
                - keys
                - keys
                minLength: 5
                lt: 7
                maxDigits: 0
                containsKeys:
                - containsKeys
                - containsKeys
                gt: 1
                minItems: 6
                regex: regex
                contains:
                - "{}"
                - "{}"
                delay: true
                decimalPlaces: 7
                excludesKeys:
                - excludesKeys
                - excludesKeys
                minDigits: 9
                options:
                - "{}"
                - "{}"
                le: 9
                ge: 4
                maxLength: 4
            - delayValidation: true
              toEnv: toEnv
              description: description
              isOptional: true
              type: type
              isList: true
              isFlag: true
              argFormat: argFormat
              name: name
              options:
              - "{}"
              - "{}"
              connection: connection
              toInit: true
              value: "{}"
              validation:
                multipleOf: 0
                maxItems: 8
                excludes:
                - "{}"
                - "{}"
                keys:
                - keys
                - keys
                minLength: 5
                lt: 7
                maxDigits: 0
                containsKeys:
                - containsKeys
                - containsKeys
                gt: 1
                minItems: 6
                regex: regex
                contains:
                - "{}"
                - "{}"
                delay: true
                decimalPlaces: 7
                excludesKeys:
                - excludesKeys
                - excludesKeys
                minDigits: 9
                options:
                - "{}"
                - "{}"
                le: 9
                ge: 4
                maxLength: 4
            description: description
            run: "{}"
            version: 4.2587733
            tags:
            - tags
            - tags
            presets:
            - presets
            - presets
            build:
              cache:
                disable: true
                io:
                - io
                - io
                ttl: 7
                sections:
                - sections
                - sections
              presets:
              - presets
              - presets
              runPatch: "{}"
              hubRef: hubRef
              namespace: namespace
              connection: connection
              patchStrategy: null
              params:
                key:
                  ref: ref
                  toEnv: toEnv
                  contextOnly: true
                  connection: connection
                  toInit: true
                  value: "{}"
              queue: queue
            name: name
            namespace: namespace
            isApproved: true
            hooks:
            - presets:
              - presets
              - presets
              hubRef: hubRef
              namespace: namespace
              disableDefaults: true
              connection: connection
              trigger: null
              conditions: conditions
              params:
                key:
                  ref: ref
                  toEnv: toEnv
                  contextOnly: true
                  connection: connection
                  toInit: true
                  value: "{}"
              queue: queue
            - presets:
              - presets
              - presets
              hubRef: hubRef
              namespace: namespace
              disableDefaults: true
              connection: connection
              trigger: null
              conditions: conditions
              params:
                key:
                  ref: ref
                  toEnv: toEnv
                  contextOnly: true
                  connection: connection
                  toInit: true
                  value: "{}"
              queue: queue
            queue: queue
          presets:
          - presets
          - presets
          skipOnUpstreamSkip: true
          runPatch: "{}"
          build:
            cache:
              disable: true
              io:
              - io
              - io
              ttl: 7
              sections:
              - sections
              - sections
            presets:
            - presets
            - presets
            runPatch: "{}"
            hubRef: hubRef
            namespace: namespace
            connection: connection
            patchStrategy: null
            params:
              key:
                ref: ref
                toEnv: toEnv
                contextOnly: true
                connection: connection
                toInit: true
                value: "{}"
            queue: queue
          name: name
          namespace: namespace
          patchStrategy: null
          urlRef: urlRef
          conditions: conditions
          pathRef: pathRef
          queue: queue
        compiledOperation:
          joins:
            key:
              ref: ref
              offset: 0
              query: query
              limit: 4
              sort: sort
              params:
                key:
                  toEnv: toEnv
                  contextOnly: true
                  connection: connection
                  toInit: true
                  value: value
          outputs:
          - delayValidation: true
            toEnv: toEnv
            description: description
            isOptional: true
            type: type
            isList: true
            isFlag: true
            argFormat: argFormat
            name: name
            options:
            - "{}"
            - "{}"
            connection: connection
            toInit: true
            value: "{}"
            validation:
              multipleOf: 0
              maxItems: 8
              excludes:
              - "{}"
              - "{}"
              keys:
              - keys
              - keys
              minLength: 5
              lt: 7
              maxDigits: 0
              containsKeys:
              - containsKeys
              - containsKeys
              gt: 1
              minItems: 6
              regex: regex
              contains:
              - "{}"
              - "{}"
              delay: true
              decimalPlaces: 7
              excludesKeys:
              - excludesKeys
              - excludesKeys
              minDigits: 9
              options:
              - "{}"
              - "{}"
              le: 9
              ge: 4
              maxLength: 4
          - delayValidation: true
            toEnv: toEnv
            description: description
            isOptional: true
            type: type
            isList: true
            isFlag: true
            argFormat: argFormat
            name: name
            options:
            - "{}"
            - "{}"
            connection: connection
            toInit: true
            value: "{}"
            validation:
              multipleOf: 0
              maxItems: 8
              excludes:
              - "{}"
              - "{}"
              keys:
              - keys
              - keys
              minLength: 5
              lt: 7
              maxDigits: 0
              containsKeys:
              - containsKeys
              - containsKeys
              gt: 1
              minItems: 6
              regex: regex
              contains:
              - "{}"
              - "{}"
              delay: true
              decimalPlaces: 7
              excludesKeys:
              - excludesKeys
              - excludesKeys
              minDigits: 9
              options:
              - "{}"
              - "{}"
              le: 9
              ge: 4
              maxLength: 4
          plugins:
            mountArtifactsStore: true
            syncStatuses: true
            auth: true
            collectResources: true
            collectLogs: true
            externalHost: true
            docker: true
            collectArtifacts: true
            logLevel: logLevel
            autoResume: true
            sidecar:
              sleepInterval: 5
              monitorSpec: true
              image: image
              imagePullPolicy: imagePullPolicy
              syncInterval: 3
              resources: "{}"
              monitorLogs: true
              imageTag: imageTag
            shm: true
            notifications:
            - trigger: null
              connections:
              - connections
              - connections
            - trigger: null
              connections:
              - connections
              - connections
          inputs:
          - delayValidation: true
            toEnv: toEnv
            description: description
            isOptional: true
            type: type
            isList: true
            isFlag: true
            argFormat: argFormat
            name: name
            options:
            - "{}"
            - "{}"
            connection: connection
            toInit: true
            value: "{}"
            validation:
              multipleOf: 0
              maxItems: 8
              excludes:
              - "{}"
              - "{}"
              keys:
              - keys
              - keys
              minLength: 5
              lt: 7
              maxDigits: 0
              containsKeys:
              - containsKeys
              - containsKeys
              gt: 1
              minItems: 6
              regex: regex
              contains:
              - "{}"
              - "{}"
              delay: true
              decimalPlaces: 7
              excludesKeys:
              - excludesKeys
              - excludesKeys
              minDigits: 9
              options:
              - "{}"
              - "{}"
              le: 9
              ge: 4
              maxLength: 4
          - delayValidation: true
            toEnv: toEnv
            description: description
            isOptional: true
            type: type
            isList: true
            isFlag: true
            argFormat: argFormat
            name: name
            options:
            - "{}"
            - "{}"
            connection: connection
            toInit: true
            value: "{}"
            validation:
              multipleOf: 0
              maxItems: 8
              excludes:
              - "{}"
              - "{}"
              keys:
              - keys
              - keys
              minLength: 5
              lt: 7
              maxDigits: 0
              containsKeys:
              - containsKeys
              - containsKeys
              gt: 1
              minItems: 6
              regex: regex
              contains:
              - "{}"
              - "{}"
              delay: true
              decimalPlaces: 7
              excludesKeys:
              - excludesKeys
              - excludesKeys
              minDigits: 9
              options:
              - "{}"
              - "{}"
              le: 9
              ge: 4
              maxLength: 4
          description: description
          run: "{}"
          contexts:
          - delayValidation: true
            toEnv: toEnv
            description: description
            isOptional: true
            type: type
            isList: true
            isFlag: true
            argFormat: argFormat
            name: name
            options:
            - "{}"
            - "{}"
            connection: connection
            toInit: true
            value: "{}"
            validation:
              multipleOf: 0
              maxItems: 8
              excludes:
              - "{}"
              - "{}"
              keys:
              - keys
              - keys
              minLength: 5
              lt: 7
              maxDigits: 0
              containsKeys:
              - containsKeys
              - containsKeys
              gt: 1
              minItems: 6
              regex: regex
              contains:
              - "{}"
              - "{}"
              delay: true
              decimalPlaces: 7
              excludesKeys:
              - excludesKeys
              - excludesKeys
              minDigits: 9
              options:
              - "{}"
              - "{}"
              le: 9
              ge: 4
              maxLength: 4
          - delayValidation: true
            toEnv: toEnv
            description: description
            isOptional: true
            type: type
            isList: true
            isFlag: true
            argFormat: argFormat
            name: name
            options:
            - "{}"
            - "{}"
            connection: connection
            toInit: true
            value: "{}"
            validation:
              multipleOf: 0
              maxItems: 8
              excludes:
              - "{}"
              - "{}"
              keys:
              - keys
              - keys
              minLength: 5
              lt: 7
              maxDigits: 0
              containsKeys:
              - containsKeys
              - containsKeys
              gt: 1
              minItems: 6
              regex: regex
              contains:
              - "{}"
              - "{}"
              delay: true
              decimalPlaces: 7
              excludesKeys:
              - excludesKeys
              - excludesKeys
              minDigits: 9
              options:
              - "{}"
              - "{}"
              le: 9
              ge: 4
              maxLength: 4
          matrix: "{}"
          isApproved: true
          hooks:
          - presets:
            - presets
            - presets
            hubRef: hubRef
            namespace: namespace
            disableDefaults: true
            connection: connection
            trigger: null
            conditions: conditions
            params:
              key:
                ref: ref
                toEnv: toEnv
                contextOnly: true
                connection: connection
                toInit: true
                value: "{}"
            queue: queue
          - presets:
            - presets
            - presets
            hubRef: hubRef
            namespace: namespace
            disableDefaults: true
            connection: connection
            trigger: null
            conditions: conditions
            params:
              key:
                ref: ref
                toEnv: toEnv
                contextOnly: true
                connection: connection
                toInit: true
                value: "{}"
            queue: queue
          events:
          - ref: ref
            kinds:
            - null
            - null
          - ref: ref
            kinds:
            - null
            - null
          termination:
            maxRetries: 3
            ttl: 3
            timeout: 7
          cache:
            disable: true
            io:
            - io
            - io
            ttl: 7
            sections:
            - sections
            - sections
          cost: 3.7814124
          kind: kind
          trigger: null
          version: 7.6068635
          tags:
          - tags
          - tags
          dependencies:
          - dependencies
          - dependencies
          schedule: "{}"
          presets:
          - presets
          - presets
          skipOnUpstreamSkip: true
          build:
            cache:
              disable: true
              io:
              - io
              - io
              ttl: 7
              sections:
              - sections
              - sections
            presets:
            - presets
            - presets
            runPatch: "{}"
            hubRef: hubRef
            namespace: namespace
            connection: connection
            patchStrategy: null
            params:
              key:
                ref: ref
                toEnv: toEnv
                contextOnly: true
                connection: connection
                toInit: true
                value: "{}"
            queue: queue
          name: name
          namespace: namespace
          conditions: conditions
          queue: queue
      properties:
        earlyStopping:
          $ref: '#/components/schemas/v1EarlyStopping'
        matrix:
          $ref: '#/components/schemas/v1Matrix'
        run:
          $ref: '#/components/schemas/v1RunSchema'
        operation:
          $ref: '#/components/schemas/v1Operation'
        compiledOperation:
          $ref: '#/components/schemas/v1CompiledOperation'
        schedule:
          $ref: '#/components/schemas/v1Schedule'
        connectionSchema:
          $ref: '#/components/schemas/v1ConnectionSchema'
        hpParams:
          $ref: '#/components/schemas/v1HpParams'
        reference:
          $ref: '#/components/schemas/v1Reference'
        artifactsMount:
          $ref: '#/components/schemas/v1ArtifactsMount'
        polyaxonSidecarContainer:
          $ref: '#/components/schemas/v1PolyaxonSidecarContainer'
        polyaxonInitContainer:
          $ref: '#/components/schemas/v1PolyaxonInitContainer'
        artifacs:
          $ref: '#/components/schemas/v1ArtifactsType'
        wasb:
          $ref: '#/components/schemas/v1WasbType'
        gcs:
          $ref: '#/components/schemas/v1GcsType'
        s3:
          $ref: '#/components/schemas/v1S3Type'
        auth:
          $ref: '#/components/schemas/v1AuthType'
        uri:
          $ref: '#/components/schemas/v1UriType'
        resource:
          $ref: '#/components/schemas/v1ConnectionResource'
        connection:
          $ref: '#/components/schemas/v1ConnectionType'
        eventType:
          $ref: '#/components/schemas/v1EventType'
        matrixKind:
          $ref: '#/components/schemas/v1MatrixKind'
        scheduleKind:
          $ref: '#/components/schemas/v1ScheduleKind'
        event:
          $ref: '#/components/schemas/v1Event'
      type: object
    v1Search:
      example:
        view: null
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        org_level: true
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        live_state: 6
        uuid: uuid
        spec:
          heat: heat
          histograms: "{}"
          offset: 5
          columns: columns
          query: query
          sort: sort
          groupby: groupby
          sections: sections
          compares: compares
          layout: layout
          analytics:
            view: view
            trunc: trunc
            groupby: groupby
            frequency: frequency
          limit: 1
          events:
            xaxis: xaxis
            sample_size: 7
            step: 4
            smoothing: 2
            ignore_outliers: true
            sections:
            - is_frozen: true
              columns: 1
              widgets:
              - "{}"
              - "{}"
              xaxis: xaxis
              sample_size: 7
              is_minimized: true
              page_index: 9
              name: name
              step: 2
              smoothing: 5
              ignore_outliers: true
              height: 5
              page_size: 3
            - is_frozen: true
              columns: 1
              widgets:
              - "{}"
              - "{}"
              xaxis: xaxis
              sample_size: 7
              is_minimized: true
              page_index: 9
              name: name
              step: 2
              smoothing: 5
              ignore_outliers: true
              height: 5
              page_size: 3
          trends: "{}"
        tags:
        - tags
        - tags
      properties:
        uuid:
          title: UUID
          type: string
        name:
          title: Optional name
          type: string
        description:
          title: Optional description
          type: string
        tags:
          items:
            type: string
          title: Optional tags of this entity
          type: array
        live_state:
          format: int32
          title: Current live state
          type: integer
        view:
          $ref: '#/components/schemas/SearchView'
        spec:
          $ref: '#/components/schemas/v1SearchSpec'
        org_level:
          title: Optional search level
          type: boolean
        created_at:
          format: date-time
          title: Optional time when the entity was created
          type: string
        updated_at:
          format: date-time
          title: Optional last time the entity was updated
          type: string
      title: Search specification
      type: object
    v1SearchSpec:
      example:
        heat: heat
        histograms: "{}"
        offset: 5
        columns: columns
        query: query
        sort: sort
        groupby: groupby
        sections: sections
        compares: compares
        layout: layout
        analytics:
          view: view
          trunc: trunc
          groupby: groupby
          frequency: frequency
        limit: 1
        events:
          xaxis: xaxis
          sample_size: 7
          step: 4
          smoothing: 2
          ignore_outliers: true
          sections:
          - is_frozen: true
            columns: 1
            widgets:
            - "{}"
            - "{}"
            xaxis: xaxis
            sample_size: 7
            is_minimized: true
            page_index: 9
            name: name
            step: 2
            smoothing: 5
            ignore_outliers: true
            height: 5
            page_size: 3
          - is_frozen: true
            columns: 1
            widgets:
            - "{}"
            - "{}"
            xaxis: xaxis
            sample_size: 7
            is_minimized: true
            page_index: 9
            name: name
            step: 2
            smoothing: 5
            ignore_outliers: true
            height: 5
            page_size: 3
        trends: "{}"
      properties:
        query:
          title: Search query
          type: string
        sort:
          title: Search sort
          type: string
        limit:
          format: int32
          title: Limit size
          type: integer
        offset:
          format: int32
          title: Offset value
          type: integer
        groupby:
          title: Search group bys
          type: string
        columns:
          title: Search columns
          type: string
        layout:
          title: Search layout
          type: string
        sections:
          title: Search sections
          type: string
        compares:
          title: Compare Flags
          type: string
        heat:
          title: Optional heat fields
          type: string
        events:
          $ref: '#/components/schemas/v1DashboardSpec'
        histograms:
          properties: {}
          title: Optional histograms specification
          type: object
        trends:
          properties: {}
          title: Optional trends specification
          type: object
        analytics:
          $ref: '#/components/schemas/v1AnalyticsSpec'
      title: Search spec definition
      type: object
    v1SectionSpec:
      example:
        is_frozen: true
        columns: 1
        widgets:
        - "{}"
        - "{}"
        xaxis: xaxis
        sample_size: 7
        is_minimized: true
        page_index: 9
        name: name
        step: 2
        smoothing: 5
        ignore_outliers: true
        height: 5
        page_size: 3
      properties:
        name:
          title: Section name
          type: string
        is_minimized:
          title: Minimize
          type: boolean
        is_frozen:
          title: Freeze
          type: boolean
        columns:
          format: int32
          title: Number of columns
          type: integer
        height:
          format: int32
          title: Height
          type: integer
        xaxis:
          title: xaxis
          type: string
        smoothing:
          format: int32
          title: Smoothing
          type: integer
        step:
          format: int32
          title: Step
          type: integer
        ignore_outliers:
          title: Ignore outliers
          type: boolean
        sample_size:
          format: int32
          title: Sample size
          type: integer
        widgets:
          items:
            properties: {}
            type: object
          title: Section's widgets
          type: array
        page_index:
          format: int32
          title: Page index
          type: integer
        page_size:
          format: int32
          title: Page size
          type: integer
      title: Dashboard section definition
      type: object
    v1Service:
      example:
        container: "{}"
        init:
        - modelRef: modelRef
          container: "{}"
          path: path
          git:
            flags:
            - flags
            - flags
            url: url
            revision: revision
          file:
            filename: filename
            kind: kind
            chmod: chmod
            content: content
          tensorboard:
            port: 6
            plugins: plugins
            use_names: true
            uuids:
            - uuids
            - uuids
            path_prefix: path_prefix
          artifactRef: artifactRef
          paths:
          - "{}"
          - "{}"
          dockerfile:
            image: image
            gid: 0
            workdirPath: workdirPath
            run:
            - run
            - run
            env:
              key: env
            path:
            - path
            - path
            uid: 7
            filename: filename
            workdir: workdir
            shell: shell
            post_run_copy:
            - "{}"
            - "{}"
            langEnv: langEnv
            copy:
            - "{}"
            - "{}"
            username: 7
          connection: connection
          lineageRef: lineageRef
          artifacts:
            files:
            - "{}"
            - "{}"
            dirs:
            - "{}"
            - "{}"
            workers: 3
        - modelRef: modelRef
          container: "{}"
          path: path
          git:
            flags:
            - flags
            - flags
            url: url
            revision: revision
          file:
            filename: filename
            kind: kind
            chmod: chmod
            content: content
          tensorboard:
            port: 6
            plugins: plugins
            use_names: true
            uuids:
            - uuids
            - uuids
            path_prefix: path_prefix
          artifactRef: artifactRef
          paths:
          - "{}"
          - "{}"
          dockerfile:
            image: image
            gid: 0
            workdirPath: workdirPath
            run:
            - run
            - run
            env:
              key: env
            path:
            - path
            - path
            uid: 7
            filename: filename
            workdir: workdir
            shell: shell
            post_run_copy:
            - "{}"
            - "{}"
            langEnv: langEnv
            copy:
            - "{}"
            - "{}"
            username: 7
          connection: connection
          lineageRef: lineageRef
          artifacts:
            files:
            - "{}"
            - "{}"
            dirs:
            - "{}"
            - "{}"
            workers: 3
        sidecars:
        - null
        - null
        environment:
          nodeName: nodeName
          dnsPolicy: dnsPolicy
          serviceAccountName: serviceAccountName
          hostNetwork: true
          dnsConfig: "{}"
          imagePullSecrets:
          - imagePullSecrets
          - imagePullSecrets
          priorityClassName: priorityClassName
          annotations:
            key: annotations
          hostAliases:
          - null
          - null
          securityContext: "{}"
          priority: 3
          restartPolicy: restartPolicy
          labels:
            key: labels
          nodeSelector:
            key: nodeSelector
          tolerations:
          - null
          - null
          schedulerName: schedulerName
          affinity: "{}"
          hostPID: hostPID
        isExternal: true
        kind: service
        replicas: 4
        volumes:
        - null
        - null
        ports:
        - 0
        - 0
        rewritePath: true
        connections:
        - connections
        - connections
      properties:
        kind:
          default: service
          title: "Optional component kind, should be equal to 'service'"
          type: string
        environment:
          $ref: '#/components/schemas/v1Environment'
        connections:
          items:
            type: string
          title: Optional connections section
          type: array
        volumes:
          description: Volumes is a list of volumes that can be mounted.
          items:
            $ref: '#/components/schemas/v1Volume'
          type: array
        init:
          items:
            $ref: '#/components/schemas/v1Init'
          title: Optional init connections/containers section
          type: array
        sidecars:
          items:
            $ref: '#/components/schemas/v1Container'
          title: Optional sidecars section
          type: array
        container:
          title: Placeholder for Container
          type: object
        ports:
          items:
            format: int32
            type: integer
          title: Optional service section
          type: array
        rewritePath:
          description: |-
            Rewrite path to remove polyaxon base url(i.e. /v1/services/namespace/owner/project/).
            Default is false, the service shoud handle a base url.
          type: boolean
        isExternal:
          description: |-
            Optional flag to signal to Polyaxon that this service should not go through Polyaxon's auth
            Default is false, the service will be controlled by Polyaxon's auth.
          type: boolean
        replicas:
          format: int32
          title: Optional value to provision more than a single replica for the service
          type: integer
      title: Service specification
      type: object
    v1ServiceAccount:
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        live_state: 6
        scopes:
        - scopes
        - scopes
        services:
        - services
        - services
        uuid: uuid
        tags:
        - tags
        - tags
      properties:
        uuid:
          title: UUID
          type: string
        name:
          title: Name
          type: string
        description:
          title: Optional description
          type: string
        tags:
          items:
            type: string
          title: Optional tags of this entity
          type: array
        live_state:
          format: int32
          title: Current live state
          type: integer
        created_at:
          format: date-time
          title: Optional time when the entity was created
          type: string
        updated_at:
          format: date-time
          title: Optional last time the entity was updated
          type: string
        scopes:
          items:
            type: string
          title: Optional scopes allowed for this service account
          type: array
        services:
          items:
            type: string
          title: Optional services allowed for this service account
          type: array
      title: ServiceAccount specification
      type: object
    v1SettingsCatalog:
      example:
        name: name
        uuid: uuid
        version: version
        url: url
      properties:
        uuid:
          title: Uuid
          type: string
        name:
          title: Name
          type: string
        version:
          title: Version
          type: string
        url:
          title: Url
          type: string
      title: Settings catalog specification
      type: object
    v1Stage:
      example:
        stage: null
        stage_conditions:
        - reason: reason
          last_update_time: 2000-01-23T04:56:07.000+00:00
          meta_info: "{}"
          last_transition_time: 2000-01-23T04:56:07.000+00:00
          type: null
          message: message
          status: status
        - reason: reason
          last_update_time: 2000-01-23T04:56:07.000+00:00
          meta_info: "{}"
          last_transition_time: 2000-01-23T04:56:07.000+00:00
          type: null
          message: message
          status: status
        uuid: uuid
      properties:
        uuid:
          title: The uuid of the stage
          type: string
        stage:
          $ref: '#/components/schemas/v1Stages'
        stage_conditions:
          items:
            $ref: '#/components/schemas/v1StageCondition'
          title: The stage conditions timeline
          type: array
      title: Stage specification
      type: object
    v1StageCondition:
      example:
        reason: reason
        last_update_time: 2000-01-23T04:56:07.000+00:00
        meta_info: "{}"
        last_transition_time: 2000-01-23T04:56:07.000+00:00
        type: null
        message: message
        status: status
      properties:
        type:
          $ref: '#/components/schemas/v1Stages'
        status:
          title: Status state
          type: string
        reason:
          title: Status reason
          type: string
        message:
          title: Status message
          type: string
        last_update_time:
          format: date-time
          title: last update time
          type: string
        last_transition_time:
          format: date-time
          title: last transition time
          type: string
        meta_info:
          properties: {}
          title: Optional meta_info
          type: object
      title: stage condition specification
      type: object
    v1Stages:
      default: testing
      enum:
      - testing
      - staging
      - production
      - disabled
      type: string
    v1Status:
      example:
        meta_info: "{}"
        uuid: uuid
        status_conditions:
        - reason: reason
          last_update_time: 2000-01-23T04:56:07.000+00:00
          meta_info: "{}"
          last_transition_time: 2000-01-23T04:56:07.000+00:00
          type: null
          message: message
          status: status
        - reason: reason
          last_update_time: 2000-01-23T04:56:07.000+00:00
          meta_info: "{}"
          last_transition_time: 2000-01-23T04:56:07.000+00:00
          type: null
          message: message
          status: status
        status: null
      properties:
        uuid:
          title: The uuid of the status
          type: string
        status:
          $ref: '#/components/schemas/v1Statuses'
        status_conditions:
          items:
            $ref: '#/components/schemas/v1StatusCondition'
          title: The status conditions timeline
          type: array
        meta_info:
          properties: {}
          title: Additional optional meta_info
          type: object
      title: Status specification
      type: object
    v1StatusCondition:
      example:
        reason: reason
        last_update_time: 2000-01-23T04:56:07.000+00:00
        meta_info: "{}"
        last_transition_time: 2000-01-23T04:56:07.000+00:00
        type: null
        message: message
        status: status
      properties:
        type:
          $ref: '#/components/schemas/v1Statuses'
        status:
          title: Status state
          type: string
        reason:
          title: Status reason
          type: string
        message:
          title: Status message
          type: string
        last_update_time:
          format: date-time
          title: last update time
          type: string
        last_transition_time:
          format: date-time
          title: last transition time
          type: string
        meta_info:
          properties: {}
          title: Optional meta_info
          type: object
      title: Status condition specification
      type: object
    v1Statuses:
      default: created
      enum:
      - created
      - resuming
      - on_schedule
      - compiled
      - queued
      - scheduled
      - starting
      - running
      - processing
      - stopping
      - failed
      - stopped
      - succeeded
      - skipped
      - warning
      - unschedulable
      - upstream_failed
      - retrying
      - unknown
      - done
      type: string
    v1TFJob:
      example:
        cleanPodPolicy: null
        enableDynamicWorker: true
        ps:
          container: "{}"
          init:
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          sidecars:
          - null
          - null
          environment:
            nodeName: nodeName
            dnsPolicy: dnsPolicy
            serviceAccountName: serviceAccountName
            hostNetwork: true
            dnsConfig: "{}"
            imagePullSecrets:
            - imagePullSecrets
            - imagePullSecrets
            priorityClassName: priorityClassName
            annotations:
              key: annotations
            hostAliases:
            - null
            - null
            securityContext: "{}"
            priority: 3
            restartPolicy: restartPolicy
            labels:
              key: labels
            nodeSelector:
              key: nodeSelector
            tolerations:
            - null
            - null
            schedulerName: schedulerName
            affinity: "{}"
            hostPID: hostPID
          replicas: 1
          volumes:
          - null
          - null
          connections:
          - connections
          - connections
        kind: tfjob
        chief:
          container: "{}"
          init:
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          sidecars:
          - null
          - null
          environment:
            nodeName: nodeName
            dnsPolicy: dnsPolicy
            serviceAccountName: serviceAccountName
            hostNetwork: true
            dnsConfig: "{}"
            imagePullSecrets:
            - imagePullSecrets
            - imagePullSecrets
            priorityClassName: priorityClassName
            annotations:
              key: annotations
            hostAliases:
            - null
            - null
            securityContext: "{}"
            priority: 3
            restartPolicy: restartPolicy
            labels:
              key: labels
            nodeSelector:
              key: nodeSelector
            tolerations:
            - null
            - null
            schedulerName: schedulerName
            affinity: "{}"
            hostPID: hostPID
          replicas: 1
          volumes:
          - null
          - null
          connections:
          - connections
          - connections
        worker:
          container: "{}"
          init:
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          sidecars:
          - null
          - null
          environment:
            nodeName: nodeName
            dnsPolicy: dnsPolicy
            serviceAccountName: serviceAccountName
            hostNetwork: true
            dnsConfig: "{}"
            imagePullSecrets:
            - imagePullSecrets
            - imagePullSecrets
            priorityClassName: priorityClassName
            annotations:
              key: annotations
            hostAliases:
            - null
            - null
            securityContext: "{}"
            priority: 3
            restartPolicy: restartPolicy
            labels:
              key: labels
            nodeSelector:
              key: nodeSelector
            tolerations:
            - null
            - null
            schedulerName: schedulerName
            affinity: "{}"
            hostPID: hostPID
          replicas: 1
          volumes:
          - null
          - null
          connections:
          - connections
          - connections
        schedulingPolicy:
          minAvailable: 0
          priorityClass: priorityClass
          scheduleTimeoutSeconds: 2
          minResources: "{}"
          queue: queue
        successPolicy: successPolicy
        evaluator:
          container: "{}"
          init:
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          sidecars:
          - null
          - null
          environment:
            nodeName: nodeName
            dnsPolicy: dnsPolicy
            serviceAccountName: serviceAccountName
            hostNetwork: true
            dnsConfig: "{}"
            imagePullSecrets:
            - imagePullSecrets
            - imagePullSecrets
            priorityClassName: priorityClassName
            annotations:
              key: annotations
            hostAliases:
            - null
            - null
            securityContext: "{}"
            priority: 3
            restartPolicy: restartPolicy
            labels:
              key: labels
            nodeSelector:
              key: nodeSelector
            tolerations:
            - null
            - null
            schedulerName: schedulerName
            affinity: "{}"
            hostPID: hostPID
          replicas: 1
          volumes:
          - null
          - null
          connections:
          - connections
          - connections
      properties:
        kind:
          default: tfjob
          title: "Optional component kind, should be equal to 'tfjob'"
          type: string
        cleanPodPolicy:
          $ref: '#/components/schemas/v1CleanPodPolicy'
        schedulingPolicy:
          $ref: '#/components/schemas/v1SchedulingPolicy'
        successPolicy:
          title: optiona success policy
          type: string
        enableDynamicWorker:
          title: optional flag to enable dynamic worker
          type: boolean
        chief:
          $ref: '#/components/schemas/v1KFReplica'
        worker:
          $ref: '#/components/schemas/v1KFReplica'
        ps:
          $ref: '#/components/schemas/v1KFReplica'
        evaluator:
          $ref: '#/components/schemas/v1KFReplica'
      title: TF Job specification
      type: object
    v1Tag:
      example:
        color: color
        stats: "{}"
        name: name
        icon: icon
        description: description
        uuid: uuid
      properties:
        uuid:
          title: UUID
          type: string
        name:
          title: Tag name
          type: string
        color:
          title: Optional Tag color
          type: string
        description:
          title: Optional tag description
          type: string
        icon:
          title: Optional tag icon
          type: string
        stats:
          properties: {}
          title: Optional tag stats
          type: object
      title: Tag specification
      type: object
    v1Team:
      example:
        owner: owner
        settings:
          projects:
          - name: name
            uuid: uuid
            version: version
            url: url
          - name: name
            uuid: uuid
            version: version
            url: url
          registries:
          - name: name
            uuid: uuid
            version: version
            url: url
          - name: name
            uuid: uuid
            version: version
            url: url
          hubs:
          - name: name
            uuid: uuid
            version: version
            url: url
          - name: name
            uuid: uuid
            version: version
            url: url
        model_registries:
        - model_registries
        - model_registries
        projects:
        - projects
        - projects
        role: role
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        component_hubs:
        - component_hubs
        - component_hubs
        created_at: 2000-01-23T04:56:07.000+00:00
        uuid: uuid
        policy: policy
      properties:
        uuid:
          title: Uuid
          type: string
        owner:
          title: Owner/namespace where the team was created
          type: string
        name:
          title: Name
          type: string
        projects:
          items:
            type: string
          title: projects
          type: array
        component_hubs:
          items:
            type: string
          title: hubs
          type: array
        model_registries:
          items:
            type: string
          title: registries
          type: array
        settings:
          $ref: '#/components/schemas/v1TeamSettings'
        policy:
          title: Attached policy
          type: string
        role:
          title: Current user's role in this (org/teams)/project
          type: string
        created_at:
          format: date-time
          title: Optional time when the entity was created
          type: string
        updated_at:
          format: date-time
          title: Optional last time the entity was updated
          type: string
      title: Team specification
      type: object
    v1TeamMember:
      example:
        user_email: user_email
        role: role
        updated_at: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        user: user
        org_role: org_role
      properties:
        user:
          title: User
          type: string
        user_email:
          title: User email
          type: string
        role:
          title: Role
          type: string
        org_role:
          title: Organization Role
          type: string
        created_at:
          format: date-time
          title: Optional time when the entity was created
          type: string
        updated_at:
          format: date-time
          title: Optional last time the entity was updated
          type: string
      title: Team member specification
      type: object
    v1TeamSettings:
      example:
        projects:
        - name: name
          uuid: uuid
          version: version
          url: url
        - name: name
          uuid: uuid
          version: version
          url: url
        registries:
        - name: name
          uuid: uuid
          version: version
          url: url
        - name: name
          uuid: uuid
          version: version
          url: url
        hubs:
        - name: name
          uuid: uuid
          version: version
          url: url
        - name: name
          uuid: uuid
          version: version
          url: url
      properties:
        projects:
          items:
            $ref: '#/components/schemas/v1SettingsCatalog'
          title: Projects
          type: array
        hubs:
          items:
            $ref: '#/components/schemas/v1SettingsCatalog'
          title: Component hubs
          type: array
        registries:
          items:
            $ref: '#/components/schemas/v1SettingsCatalog'
          title: Model registries
          type: array
      title: Team Settings specification
      type: object
    v1Template:
      example:
        description: description
        fields:
        - fields
        - fields
        enabled: true
      properties:
        enabled:
          type: boolean
        description:
          title: Template description
          type: string
        fields:
          items:
            type: string
          title: Fields that require customization
          type: array
      title: Template specification
      type: object
    v1TensorboardType:
      example:
        port: 6
        plugins: plugins
        use_names: true
        uuids:
        - uuids
        - uuids
        path_prefix: path_prefix
      properties:
        port:
          format: int32
          title: Port to expose the tensorboard service
          type: integer
        uuids:
          items:
            type: string
          title: A comma separated list of operation's uuids to load the tensorboard
            logs from
          type: array
        use_names:
          title: A flag to initialize the paths under the operation's names
          type: boolean
        path_prefix:
          title: An optional path prefix to use for exposing the service
          type: string
        plugins:
          title: An optional comma separated list of plugins to install before starting
            the tensorboard service
          type: string
      title: Tensorboard type specification
      type: object
    v1Termination:
      description: "Termination specification, it defines how to handle failures,\
        \ job runtime, and cleanup policy."
      example:
        maxRetries: 3
        ttl: 3
        timeout: 7
      properties:
        maxRetries:
          format: int32
          title: Max retries for a specific run
          type: integer
        ttl:
          format: int32
          title: A TTL definition
          type: integer
        timeout:
          format: int32
          title: A timeout in seconds
          type: integer
      type: object
    v1Token:
      example:
        expires_at: 2000-01-23T04:56:07.000+00:00
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        started_at: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        expiration: 0
        scopes:
        - scopes
        - scopes
        services:
        - services
        - services
        uuid: uuid
        key: key
      properties:
        uuid:
          title: UUID
          type: string
        key:
          title: Key
          type: string
        name:
          title: Optional token name
          type: string
        scopes:
          items:
            type: string
          title: Optional scopes allowed for this token
          type: array
        services:
          items:
            type: string
          title: Optional services allowed for this token
          type: array
        started_at:
          format: date-time
          title: Optional time when the entity was created
          type: string
        expires_at:
          format: date-time
          title: Optional time when the entity was created
          type: string
        created_at:
          format: date-time
          title: Optional time when the entity was created
          type: string
        updated_at:
          format: date-time
          title: Optional last time the entity was updated
          type: string
        expiration:
          format: int32
          title: Write only expiration day
          type: integer
      title: Token specification
      type: object
    v1Toleration:
      title: Placeholder for Toleration
      type: object
    v1TrialStart:
      properties:
        name:
          title: name
          type: string
        email:
          title: Email
          type: string
        organization:
          title: Organization
          type: string
        plan:
          title: Plan
          type: string
        seats:
          format: int32
          title: Sets
          type: integer
        details:
          properties: {}
          title: Details
          type: object
      title: Trial start
      type: object
    v1TriggerPolicy:
      default: all_succeeded
      enum:
      - all_succeeded
      - all_failed
      - all_done
      - one_succeeded
      - one_failed
      - one_done
      title: TriggerPolicy enum
      type: string
    v1TruncationStoppingPolicy:
      description: |-
        Early stopping with truncation stopping, this policy stops a percentage of
        all running runs at every evaluation.
      example:
        minSamples: 4
        includeSucceeded: true
        kind: truncation
        minInterval: 2
        evaluationInterval: 3
        percent: 9
      properties:
        kind:
          default: truncation
          title: "Kind of this stopping policy, should be equal to \"truncation\""
          type: string
        percent:
          description: |-
            The percentage of runs to stop, at each evaluation interval.
            e.g. 1 - 99.
          format: int32
          type: integer
        evaluationInterval:
          description: Interval/Frequency for applying the policy.
          format: int32
          type: integer
        minInterval:
          format: int32
          title: Min interval (e.g steps) before starting the process
          type: integer
        minSamples:
          format: int32
          title: Min samples runs succeeded before starting the process
          type: integer
        includeSucceeded:
          title: Flag to include or not the succeeded runs in the calculation
          type: boolean
      type: object
    v1Tuner:
      example:
        presets:
        - presets
        - presets
        hubRef: hubRef
        namespace: namespace
        params:
          key:
            ref: ref
            toEnv: toEnv
            contextOnly: true
            connection: connection
            toInit: true
            value: "{}"
        queue: queue
      properties:
        hubRef:
          title: Component name to use
          type: string
        presets:
          items:
            type: string
          title: Optional list of presets to use for running this tuner
          type: array
        queue:
          title: Optional queue to use for scheduling the tuner
          type: string
        namespace:
          title: "Optional namespace to use, uses agent's namespace by default"
          type: string
        params:
          additionalProperties:
            $ref: '#/components/schemas/v1Param'
          title: Optional dict of params
          type: object
      title: Tuner definition
      type: object
    v1UriType:
      example:
        password: password
        host: true
        user: user
      properties:
        user:
          title: Optional user
          type: string
        password:
          title: Optional password
          type: string
        host:
          title: Optional host
          type: boolean
      title: Uri type specification
      type: object
    v1UrlRef:
      example:
        kind: url_ref
        url: url
      properties:
        kind:
          default: url_ref
          title: "Kind of reference, should be equal to \"url_ref\""
          type: string
        url:
          title: Value
          type: string
      title: Url reference specification
      type: object
    v1User:
      example:
        kind: kind
        organization: organization
        name: name
        theme: 0
        email: email
        username: username
      properties:
        username:
          title: Username
          type: string
        email:
          title: Email
          type: string
        name:
          title: Name
          type: string
        kind:
          title: Kind
          type: string
        theme:
          format: int32
          title: Theme
          type: integer
        organization:
          title: Default organization
          type: string
      title: Auth specification
      type: object
    v1UserAccess:
      example:
        default_presets:
        - default_presets
        - default_presets
        default_presets_ordered:
        - default_presets_ordered
        - default_presets_ordered
        namespace: namespace
        user_data:
          is_sa: true
          username: username
        user: user
        queue: queue
      properties:
        user:
          title: User to give access to
          type: string
        user_data:
          $ref: '#/components/schemas/v1UserAccessData'
        queue:
          title: Optional queue to configure for user
          type: string
        default_presets:
          items:
            type: string
          title: Optional default presets to configure for user
          type: array
        default_presets_ordered:
          items:
            type: string
          title: Default presets ordered
          type: array
        namespace:
          title: Optiona namespace to configure for user
          type: string
      title: User request
      type: object
    v1UserAccessData:
      example:
        is_sa: true
        username: username
      properties:
        username:
          title: Username
          type: string
        is_sa:
          title: Is service account
          type: boolean
      type: object
    v1UserEmail:
      properties:
        email:
          title: User username
          type: string
      title: User email
      type: object
    v1UserSingup:
      properties:
        username:
          title: User username
          type: string
        email:
          title: User email
          type: string
        organization:
          title: User organization
          type: string
        password:
          title: User password
          type: string
        invitation_key:
          title: Invitation key
          type: string
      title: User singup
      type: object
    v1Uuids:
      properties:
        uuids:
          items:
            type: string
          type: array
      type: object
    v1Validation:
      example:
        multipleOf: 0
        maxItems: 8
        excludes:
        - "{}"
        - "{}"
        keys:
        - keys
        - keys
        minLength: 5
        lt: 7
        maxDigits: 0
        containsKeys:
        - containsKeys
        - containsKeys
        gt: 1
        minItems: 6
        regex: regex
        contains:
        - "{}"
        - "{}"
        delay: true
        decimalPlaces: 7
        excludesKeys:
        - excludesKeys
        - excludesKeys
        minDigits: 9
        options:
        - "{}"
        - "{}"
        le: 9
        ge: 4
        maxLength: 4
      properties:
        delay:
          title: Validation delay
          type: boolean
        gt:
          format: int32
          title: Numeric Constraints (these constraints are also applied item wise
            for lists and for dict values)
          type: integer
        ge:
          format: int32
          type: integer
        lt:
          format: int32
          type: integer
        le:
          format: int32
          type: integer
        multipleOf:
          format: int32
          type: integer
        minDigits:
          format: int32
          title: Decimal Constraints (these constraints are also applied item wise
            for lists and for dict values)
          type: integer
        maxDigits:
          format: int32
          type: integer
        decimalPlaces:
          format: int32
          type: integer
        regex:
          title: String Constraints (these constraints are also applied item wise
            for lists and for dict values)
          type: string
        minLength:
          format: int32
          type: integer
        maxLength:
          format: int32
          type: integer
        contains:
          items:
            properties: {}
            type: object
          title: Generic
          type: array
        excludes:
          items:
            properties: {}
            type: object
          type: array
        options:
          items:
            properties: {}
            type: object
          type: array
        minItems:
          format: int32
          title: Items Constraints
          type: integer
        maxItems:
          format: int32
          type: integer
        keys:
          items:
            type: string
          title: Dict keys Constraints
          type: array
        containsKeys:
          items:
            type: string
          type: array
        excludesKeys:
          items:
            type: string
          type: array
      title: Validation specification based on pydantic
      type: object
    v1Version:
      example:
        min: min
        latest: latest
      properties:
        min:
          title: Min version
          type: string
        latest:
          title: Latest version
          type: string
      title: Version specification
      type: object
    v1Volume:
      title: Placeholder for Volume
      type: object
    v1WasbType:
      example:
        container: container
        path: true
        storageAccount: storageAccount
      properties:
        container:
          title: Optional container
          type: string
        storageAccount:
          title: Optional storage_account
          type: string
        path:
          title: Optional path
          type: boolean
      title: Wasb type specification
      type: object
    v1XGBoostJob:
      example:
        cleanPodPolicy: null
        kind: xgboostjob
        worker:
          container: "{}"
          init:
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          sidecars:
          - null
          - null
          environment:
            nodeName: nodeName
            dnsPolicy: dnsPolicy
            serviceAccountName: serviceAccountName
            hostNetwork: true
            dnsConfig: "{}"
            imagePullSecrets:
            - imagePullSecrets
            - imagePullSecrets
            priorityClassName: priorityClassName
            annotations:
              key: annotations
            hostAliases:
            - null
            - null
            securityContext: "{}"
            priority: 3
            restartPolicy: restartPolicy
            labels:
              key: labels
            nodeSelector:
              key: nodeSelector
            tolerations:
            - null
            - null
            schedulerName: schedulerName
            affinity: "{}"
            hostPID: hostPID
          replicas: 1
          volumes:
          - null
          - null
          connections:
          - connections
          - connections
        schedulingPolicy:
          minAvailable: 0
          priorityClass: priorityClass
          scheduleTimeoutSeconds: 2
          minResources: "{}"
          queue: queue
        master:
          container: "{}"
          init:
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          - modelRef: modelRef
            container: "{}"
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: revision
            file:
              filename: filename
              kind: kind
              chmod: chmod
              content: content
            tensorboard:
              port: 6
              plugins: plugins
              use_names: true
              uuids:
              - uuids
              - uuids
              path_prefix: path_prefix
            artifactRef: artifactRef
            paths:
            - "{}"
            - "{}"
            dockerfile:
              image: image
              gid: 0
              workdirPath: workdirPath
              run:
              - run
              - run
              env:
                key: env
              path:
              - path
              - path
              uid: 7
              filename: filename
              workdir: workdir
              shell: shell
              post_run_copy:
              - "{}"
              - "{}"
              langEnv: langEnv
              copy:
              - "{}"
              - "{}"
              username: 7
            connection: connection
            lineageRef: lineageRef
            artifacts:
              files:
              - "{}"
              - "{}"
              dirs:
              - "{}"
              - "{}"
              workers: 3
          sidecars:
          - null
          - null
          environment:
            nodeName: nodeName
            dnsPolicy: dnsPolicy
            serviceAccountName: serviceAccountName
            hostNetwork: true
            dnsConfig: "{}"
            imagePullSecrets:
            - imagePullSecrets
            - imagePullSecrets
            priorityClassName: priorityClassName
            annotations:
              key: annotations
            hostAliases:
            - null
            - null
            securityContext: "{}"
            priority: 3
            restartPolicy: restartPolicy
            labels:
              key: labels
            nodeSelector:
              key: nodeSelector
            tolerations:
            - null
            - null
            schedulerName: schedulerName
            affinity: "{}"
            hostPID: hostPID
          replicas: 1
          volumes:
          - null
          - null
          connections:
          - connections
          - connections
      properties:
        kind:
          default: xgboostjob
          title: "Optional component kind, should be equal to 'xgboostjob'"
          type: string
        cleanPodPolicy:
          $ref: '#/components/schemas/v1CleanPodPolicy'
        schedulingPolicy:
          $ref: '#/components/schemas/v1SchedulingPolicy'
        master:
          $ref: '#/components/schemas/v1KFReplica'
        worker:
          $ref: '#/components/schemas/v1KFReplica'
      title: XGBoost Job specification
      type: object
    v1AverageStoppingPolicy:
      properties:
        kind:
          type: object
      type: object
    uuid_upload_body:
      properties:
        uploadfile:
          description: The file to upload.
          format: binary
          type: string
      required:
      - uploadfile
      type: object
    uuid_upload_body_1:
      properties:
        uploadfile:
          description: The file to upload.
          format: binary
          type: string
      required:
      - uploadfile
      type: object
    logs_upload_body:
      properties:
        uploadfile:
          description: The file to upload.
          format: binary
          type: string
      required:
      - uploadfile
      type: object
    artifacts_upload_body:
      properties:
        uploadfile:
          description: The file to upload.
          format: binary
          type: string
      required:
      - uploadfile
      type: object
  securitySchemes:
    ApiKey:
      in: header
      name: Authorization
      type: apiKey
x-original-swagger-version: "2.0"

