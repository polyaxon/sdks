/*
 * Polyaxon SDKs and REST API specification.
 *
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: contact@polyaxon.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * V1Organization
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class V1Organization {
  public static final String SERIALIZED_NAME_USER = "user";
  @SerializedName(SERIALIZED_NAME_USER)
  private String user;

  public static final String SERIALIZED_NAME_USER_EMAIL = "user_email";
  @SerializedName(SERIALIZED_NAME_USER_EMAIL)
  private String userEmail;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_IS_PUBLIC = "is_public";
  @SerializedName(SERIALIZED_NAME_IS_PUBLIC)
  private Boolean isPublic;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private OffsetDateTime updatedAt;

  public static final String SERIALIZED_NAME_SUPPORT_REVOKE_AT = "support_revoke_at";
  @SerializedName(SERIALIZED_NAME_SUPPORT_REVOKE_AT)
  private OffsetDateTime supportRevokeAt;

  public static final String SERIALIZED_NAME_EXPIRATION = "expiration";
  @SerializedName(SERIALIZED_NAME_EXPIRATION)
  private Integer expiration;

  public static final String SERIALIZED_NAME_ROLE = "role";
  @SerializedName(SERIALIZED_NAME_ROLE)
  private String role;

  public static final String SERIALIZED_NAME_QUEUE = "queue";
  @SerializedName(SERIALIZED_NAME_QUEUE)
  private String queue;

  public static final String SERIALIZED_NAME_DEFAULT_PRESETS = "default_presets";
  @SerializedName(SERIALIZED_NAME_DEFAULT_PRESETS)
  private List<String> defaultPresets;

  public static final String SERIALIZED_NAME_DEFAULT_PRESETS_ORDERED = "default_presets_ordered";
  @SerializedName(SERIALIZED_NAME_DEFAULT_PRESETS_ORDERED)
  private List<String> defaultPresetsOrdered;

  public static final String SERIALIZED_NAME_IS_CLOUD_VIEWABLE = "is_cloud_viewable";
  @SerializedName(SERIALIZED_NAME_IS_CLOUD_VIEWABLE)
  private Boolean isCloudViewable;

  public static final String SERIALIZED_NAME_ARCHIVED_DELETION_INTERVAL = "archived_deletion_interval";
  @SerializedName(SERIALIZED_NAME_ARCHIVED_DELETION_INTERVAL)
  private Integer archivedDeletionInterval;

  public static final String SERIALIZED_NAME_AUTH = "auth";
  @SerializedName(SERIALIZED_NAME_AUTH)
  private Object auth;

  public static final String SERIALIZED_NAME_PLAN = "plan";
  @SerializedName(SERIALIZED_NAME_PLAN)
  private Object plan;

  public static final String SERIALIZED_NAME_USAGE = "usage";
  @SerializedName(SERIALIZED_NAME_USAGE)
  private Object usage;

  public V1Organization() {
  }

  public V1Organization user(String user) {

    this.user = user;
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @javax.annotation.Nullable

  public String getUser() {
    return user;
  }


  public void setUser(String user) {
    this.user = user;
  }


  public V1Organization userEmail(String userEmail) {

    this.userEmail = userEmail;
    return this;
  }

   /**
   * Get userEmail
   * @return userEmail
  **/
  @javax.annotation.Nullable

  public String getUserEmail() {
    return userEmail;
  }


  public void setUserEmail(String userEmail) {
    this.userEmail = userEmail;
  }


  public V1Organization name(String name) {

    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public V1Organization isPublic(Boolean isPublic) {

    this.isPublic = isPublic;
    return this;
  }

   /**
   * Get isPublic
   * @return isPublic
  **/
  @javax.annotation.Nullable

  public Boolean getIsPublic() {
    return isPublic;
  }


  public void setIsPublic(Boolean isPublic) {
    this.isPublic = isPublic;
  }


  public V1Organization createdAt(OffsetDateTime createdAt) {

    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nullable

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public V1Organization updatedAt(OffsetDateTime updatedAt) {

    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @javax.annotation.Nullable

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }


  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  public V1Organization supportRevokeAt(OffsetDateTime supportRevokeAt) {

    this.supportRevokeAt = supportRevokeAt;
    return this;
  }

   /**
   * Get supportRevokeAt
   * @return supportRevokeAt
  **/
  @javax.annotation.Nullable

  public OffsetDateTime getSupportRevokeAt() {
    return supportRevokeAt;
  }


  public void setSupportRevokeAt(OffsetDateTime supportRevokeAt) {
    this.supportRevokeAt = supportRevokeAt;
  }


  public V1Organization expiration(Integer expiration) {

    this.expiration = expiration;
    return this;
  }

   /**
   * Get expiration
   * @return expiration
  **/
  @javax.annotation.Nullable

  public Integer getExpiration() {
    return expiration;
  }


  public void setExpiration(Integer expiration) {
    this.expiration = expiration;
  }


  public V1Organization role(String role) {

    this.role = role;
    return this;
  }

   /**
   * Get role
   * @return role
  **/
  @javax.annotation.Nullable

  public String getRole() {
    return role;
  }


  public void setRole(String role) {
    this.role = role;
  }


  public V1Organization queue(String queue) {

    this.queue = queue;
    return this;
  }

   /**
   * Get queue
   * @return queue
  **/
  @javax.annotation.Nullable

  public String getQueue() {
    return queue;
  }


  public void setQueue(String queue) {
    this.queue = queue;
  }


  public V1Organization defaultPresets(List<String> defaultPresets) {

    this.defaultPresets = defaultPresets;
    return this;
  }

  public V1Organization addDefaultPresetsItem(String defaultPresetsItem) {
    if (this.defaultPresets == null) {
      this.defaultPresets = new ArrayList<>();
    }
    this.defaultPresets.add(defaultPresetsItem);
    return this;
  }

   /**
   * Get defaultPresets
   * @return defaultPresets
  **/
  @javax.annotation.Nullable

  public List<String> getDefaultPresets() {
    return defaultPresets;
  }


  public void setDefaultPresets(List<String> defaultPresets) {
    this.defaultPresets = defaultPresets;
  }


  public V1Organization defaultPresetsOrdered(List<String> defaultPresetsOrdered) {

    this.defaultPresetsOrdered = defaultPresetsOrdered;
    return this;
  }

  public V1Organization addDefaultPresetsOrderedItem(String defaultPresetsOrderedItem) {
    if (this.defaultPresetsOrdered == null) {
      this.defaultPresetsOrdered = new ArrayList<>();
    }
    this.defaultPresetsOrdered.add(defaultPresetsOrderedItem);
    return this;
  }

   /**
   * Get defaultPresetsOrdered
   * @return defaultPresetsOrdered
  **/
  @javax.annotation.Nullable

  public List<String> getDefaultPresetsOrdered() {
    return defaultPresetsOrdered;
  }


  public void setDefaultPresetsOrdered(List<String> defaultPresetsOrdered) {
    this.defaultPresetsOrdered = defaultPresetsOrdered;
  }


  public V1Organization isCloudViewable(Boolean isCloudViewable) {

    this.isCloudViewable = isCloudViewable;
    return this;
  }

   /**
   * Get isCloudViewable
   * @return isCloudViewable
  **/
  @javax.annotation.Nullable

  public Boolean getIsCloudViewable() {
    return isCloudViewable;
  }


  public void setIsCloudViewable(Boolean isCloudViewable) {
    this.isCloudViewable = isCloudViewable;
  }


  public V1Organization archivedDeletionInterval(Integer archivedDeletionInterval) {

    this.archivedDeletionInterval = archivedDeletionInterval;
    return this;
  }

   /**
   * Get archivedDeletionInterval
   * @return archivedDeletionInterval
  **/
  @javax.annotation.Nullable

  public Integer getArchivedDeletionInterval() {
    return archivedDeletionInterval;
  }


  public void setArchivedDeletionInterval(Integer archivedDeletionInterval) {
    this.archivedDeletionInterval = archivedDeletionInterval;
  }


  public V1Organization auth(Object auth) {

    this.auth = auth;
    return this;
  }

   /**
   * Get auth
   * @return auth
  **/
  @javax.annotation.Nullable

  public Object getAuth() {
    return auth;
  }


  public void setAuth(Object auth) {
    this.auth = auth;
  }


  public V1Organization plan(Object plan) {

    this.plan = plan;
    return this;
  }

   /**
   * Get plan
   * @return plan
  **/
  @javax.annotation.Nullable

  public Object getPlan() {
    return plan;
  }


  public void setPlan(Object plan) {
    this.plan = plan;
  }


  public V1Organization usage(Object usage) {

    this.usage = usage;
    return this;
  }

   /**
   * Get usage
   * @return usage
  **/
  @javax.annotation.Nullable

  public Object getUsage() {
    return usage;
  }


  public void setUsage(Object usage) {
    this.usage = usage;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1Organization v1Organization = (V1Organization) o;
    return Objects.equals(this.user, v1Organization.user) &&
        Objects.equals(this.userEmail, v1Organization.userEmail) &&
        Objects.equals(this.name, v1Organization.name) &&
        Objects.equals(this.isPublic, v1Organization.isPublic) &&
        Objects.equals(this.createdAt, v1Organization.createdAt) &&
        Objects.equals(this.updatedAt, v1Organization.updatedAt) &&
        Objects.equals(this.supportRevokeAt, v1Organization.supportRevokeAt) &&
        Objects.equals(this.expiration, v1Organization.expiration) &&
        Objects.equals(this.role, v1Organization.role) &&
        Objects.equals(this.queue, v1Organization.queue) &&
        Objects.equals(this.defaultPresets, v1Organization.defaultPresets) &&
        Objects.equals(this.defaultPresetsOrdered, v1Organization.defaultPresetsOrdered) &&
        Objects.equals(this.isCloudViewable, v1Organization.isCloudViewable) &&
        Objects.equals(this.archivedDeletionInterval, v1Organization.archivedDeletionInterval) &&
        Objects.equals(this.auth, v1Organization.auth) &&
        Objects.equals(this.plan, v1Organization.plan) &&
        Objects.equals(this.usage, v1Organization.usage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(user, userEmail, name, isPublic, createdAt, updatedAt, supportRevokeAt, expiration, role, queue, defaultPresets, defaultPresetsOrdered, isCloudViewable, archivedDeletionInterval, auth, plan, usage);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1Organization {\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    userEmail: ").append(toIndentedString(userEmail)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    isPublic: ").append(toIndentedString(isPublic)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    supportRevokeAt: ").append(toIndentedString(supportRevokeAt)).append("\n");
    sb.append("    expiration: ").append(toIndentedString(expiration)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    queue: ").append(toIndentedString(queue)).append("\n");
    sb.append("    defaultPresets: ").append(toIndentedString(defaultPresets)).append("\n");
    sb.append("    defaultPresetsOrdered: ").append(toIndentedString(defaultPresetsOrdered)).append("\n");
    sb.append("    isCloudViewable: ").append(toIndentedString(isCloudViewable)).append("\n");
    sb.append("    archivedDeletionInterval: ").append(toIndentedString(archivedDeletionInterval)).append("\n");
    sb.append("    auth: ").append(toIndentedString(auth)).append("\n");
    sb.append("    plan: ").append(toIndentedString(plan)).append("\n");
    sb.append("    usage: ").append(toIndentedString(usage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("user");
    openapiFields.add("user_email");
    openapiFields.add("name");
    openapiFields.add("is_public");
    openapiFields.add("created_at");
    openapiFields.add("updated_at");
    openapiFields.add("support_revoke_at");
    openapiFields.add("expiration");
    openapiFields.add("role");
    openapiFields.add("queue");
    openapiFields.add("default_presets");
    openapiFields.add("default_presets_ordered");
    openapiFields.add("is_cloud_viewable");
    openapiFields.add("archived_deletion_interval");
    openapiFields.add("auth");
    openapiFields.add("plan");
    openapiFields.add("usage");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to V1Organization
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!V1Organization.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in V1Organization is not found in the empty JSON string", V1Organization.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!V1Organization.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `V1Organization` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("user") != null && !jsonObj.get("user").isJsonNull()) && !jsonObj.get("user").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `user` to be a primitive type in the JSON string but got `%s`", jsonObj.get("user").toString()));
      }
      if ((jsonObj.get("user_email") != null && !jsonObj.get("user_email").isJsonNull()) && !jsonObj.get("user_email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("user_email").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("role") != null && !jsonObj.get("role").isJsonNull()) && !jsonObj.get("role").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `role` to be a primitive type in the JSON string but got `%s`", jsonObj.get("role").toString()));
      }
      if ((jsonObj.get("queue") != null && !jsonObj.get("queue").isJsonNull()) && !jsonObj.get("queue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `queue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("queue").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("default_presets") != null && !jsonObj.get("default_presets").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `default_presets` to be an array in the JSON string but got `%s`", jsonObj.get("default_presets").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("default_presets_ordered") != null && !jsonObj.get("default_presets_ordered").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `default_presets_ordered` to be an array in the JSON string but got `%s`", jsonObj.get("default_presets_ordered").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!V1Organization.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'V1Organization' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<V1Organization> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(V1Organization.class));

       return (TypeAdapter<T>) new TypeAdapter<V1Organization>() {
           @Override
           public void write(JsonWriter out, V1Organization value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public V1Organization read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of V1Organization given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of V1Organization
  * @throws IOException if the JSON string is invalid with respect to V1Organization
  */
  public static V1Organization fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, V1Organization.class);
  }

 /**
  * Convert an instance of V1Organization to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

